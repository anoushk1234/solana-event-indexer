{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0","program":"/Users/anoushkkharangate/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","unicode_segmentation","--edition=2018","/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=fa771e13b6934da3","-C","extra-filename=-fa771e13b6934da3","--out-dir","/Users/anoushkkharangate/Documents/solana-indexer/data-emitter/programs/data-emitter/target/rls/debug/deps","-L","dependency=/Users/anoushkkharangate/Documents/solana-indexer/data-emitter/programs/data-emitter/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/anoushkkharangate/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/anoushkkharangate/Documents/solana-indexer/data-emitter/programs/data-emitter/target/rls/debug/deps/libunicode_segmentation-fa771e13b6934da3.rmeta"},"prelude":{"crate_id":{"name":"unicode_segmentation","disambiguator":[3531863894953116592,0]},"crate_root":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src","external_crates":[{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[16249227214258238047,0]}},{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[13791225915815425008,0]}},{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[455111089362928276,0]}}],"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":472,"byte_end":11566,"line_start":11,"line_end":307,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":347},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":2139,"byte_end":2153,"line_start":67,"line_end":67,"column_start":20,"column_end":34},"alias_span":null,"name":"GraphemeCursor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":362},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":2155,"byte_end":2173,"line_start":67,"line_end":67,"column_start":36,"column_end":54},"alias_span":null,"name":"GraphemeIncomplete","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":308},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":2195,"byte_end":2210,"line_start":68,"line_end":68,"column_start":20,"column_end":35},"alias_span":null,"name":"GraphemeIndices","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":315},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":2212,"byte_end":2221,"line_start":68,"line_end":68,"column_start":37,"column_end":46},"alias_span":null,"name":"Graphemes","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":735},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":2243,"byte_end":2264,"line_start":69,"line_end":69,"column_start":20,"column_end":41},"alias_span":null,"name":"USentenceBoundIndices","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":728},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":2266,"byte_end":2281,"line_start":69,"line_end":69,"column_start":43,"column_end":58},"alias_span":null,"name":"USentenceBounds","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":722},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":2283,"byte_end":2299,"line_start":69,"line_end":69,"column_start":60,"column_end":76},"alias_span":null,"name":"UnicodeSentences","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":399},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":2318,"byte_end":2333,"line_start":70,"line_end":70,"column_start":17,"column_end":32},"alias_span":null,"name":"UNICODE_VERSION","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":750},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":2350,"byte_end":2367,"line_start":71,"line_end":71,"column_start":16,"column_end":33},"alias_span":null,"name":"UWordBoundIndices","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":742},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":2369,"byte_end":2380,"line_start":71,"line_end":71,"column_start":35,"column_end":46},"alias_span":null,"name":"UWordBounds","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":200},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":2382,"byte_end":2400,"line_start":71,"line_end":71,"column_start":48,"column_end":66},"alias_span":null,"name":"UnicodeWordIndices","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":190},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":2402,"byte_end":2414,"line_start":71,"line_end":71,"column_start":68,"column_end":80},"alias_span":null,"name":"UnicodeWords","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":472,"byte_end":11566,"line_start":11,"line_end":307,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":398},{"krate":0,"index":113},{"krate":0,"index":180},{"krate":0,"index":279},{"krate":0,"index":298}],"decl_id":null,"docs":" Iterators which split strings on Grapheme Cluster, Word or Sentence boundaries, according\n to the [Unicode Standard Annex #29](http://www.unicode.org/reports/tr29/) rules.","sig":null,"attributes":[{"value":"/ Iterators which split strings on Grapheme Cluster, Word or Sentence boundaries, according","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":472,"byte_end":565,"line_start":11,"line_end":11,"column_start":1,"column_end":94}},{"value":"/ to the [Unicode Standard Annex #29](http://www.unicode.org/reports/tr29/) rules.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":566,"byte_end":650,"line_start":12,"line_end":12,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":651,"byte_end":654,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":655,"byte_end":666,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/ extern crate unicode_segmentation;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":667,"byte_end":705,"line_start":15,"line_end":15,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":706,"byte_end":709,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ use unicode_segmentation::UnicodeSegmentation;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":710,"byte_end":760,"line_start":17,"line_end":17,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":761,"byte_end":764,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":765,"byte_end":780,"line_start":19,"line_end":19,"column_start":1,"column_end":16}},{"value":"/     let s = \"a̐éö̲\\r\\n\";","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":781,"byte_end":815,"line_start":20,"line_end":20,"column_start":1,"column_end":31}},{"value":"/     let g = UnicodeSegmentation::graphemes(s, true).collect::<Vec<&str>>();","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":816,"byte_end":895,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/     let b: &[_] = &[\"a̐\", \"é\", \"ö̲\", \"\\r\\n\"];","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":896,"byte_end":951,"line_start":22,"line_end":22,"column_start":1,"column_end":52}},{"value":"/     assert_eq!(g, b);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":952,"byte_end":977,"line_start":23,"line_end":23,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":978,"byte_end":981,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/     let s = \"The quick (\\\"brown\\\") fox can't jump 32.3 feet, right?\";","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":982,"byte_end":1055,"line_start":25,"line_end":25,"column_start":1,"column_end":74}},{"value":"/     let w = s.unicode_words().collect::<Vec<&str>>();","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":1056,"byte_end":1113,"line_start":26,"line_end":26,"column_start":1,"column_end":58}},{"value":"/     let b: &[_] = &[\"The\", \"quick\", \"brown\", \"fox\", \"can't\", \"jump\", \"32.3\", \"feet\", \"right\"];","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":1114,"byte_end":1212,"line_start":27,"line_end":27,"column_start":1,"column_end":99}},{"value":"/     assert_eq!(w, b);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":1213,"byte_end":1238,"line_start":28,"line_end":28,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":1239,"byte_end":1242,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/     let s = \"The quick (\\\"brown\\\")  fox\";","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":1243,"byte_end":1288,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"/     let w = s.split_word_bounds().collect::<Vec<&str>>();","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":1289,"byte_end":1350,"line_start":31,"line_end":31,"column_start":1,"column_end":62}},{"value":"/     let b: &[_] = &[\"The\", \" \", \"quick\", \" \", \"(\", \"\\\"\", \"brown\", \"\\\"\", \")\", \"  \", \"fox\"];","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":1351,"byte_end":1445,"line_start":32,"line_end":32,"column_start":1,"column_end":95}},{"value":"/     assert_eq!(w, b);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":1446,"byte_end":1471,"line_start":33,"line_end":33,"column_start":1,"column_end":26}},{"value":"/ }","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":1472,"byte_end":1477,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":1478,"byte_end":1485,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":1486,"byte_end":1489,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # no_std","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":1490,"byte_end":1502,"line_start":37,"line_end":37,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":1503,"byte_end":1506,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ unicode-segmentation does not depend on libstd, so it can be used in crates","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":1507,"byte_end":1586,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ with the `#![no_std]` attribute.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":1587,"byte_end":1623,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":1624,"byte_end":1627,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # crates.io","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":1628,"byte_end":1643,"line_start":42,"line_end":42,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":1644,"byte_end":1647,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ You can use this package in your project by adding the following","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":1648,"byte_end":1716,"line_start":44,"line_end":44,"column_start":1,"column_end":69}},{"value":"/ to your `Cargo.toml`:","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":1717,"byte_end":1742,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":1743,"byte_end":1746,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":1747,"byte_end":1758,"line_start":47,"line_end":47,"column_start":1,"column_end":12}},{"value":"/ [dependencies]","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":1759,"byte_end":1777,"line_start":48,"line_end":48,"column_start":1,"column_end":19}},{"value":"/ unicode-segmentation = \"1.9.0\"","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":1778,"byte_end":1812,"line_start":49,"line_end":49,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":1813,"byte_end":1820,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"deny(missing_docs, unsafe_code)","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":1822,"byte_end":1857,"line_start":52,"line_end":52,"column_start":1,"column_end":36}},{"value":"no_std","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":2011,"byte_end":2021,"line_start":57,"line_end":57,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":308},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":12476,"byte_end":12491,"line_start":23,"line_end":23,"column_start":12,"column_end":27},"name":"GraphemeIndices","qualname":"::grapheme::GraphemeIndices","value":"GraphemeIndices {  }","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":311}],"decl_id":null,"docs":" External iterator for grapheme clusters and byte offsets.","sig":null,"attributes":[{"value":"/ External iterator for grapheme clusters and byte offsets.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":12099,"byte_end":12160,"line_start":15,"line_end":15,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":12161,"byte_end":12164,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`grapheme_indices`] method on the [`UnicodeSegmentation`]","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":12165,"byte_end":12257,"line_start":17,"line_end":17,"column_start":1,"column_end":93}},{"value":"/ trait. See its documentation for more.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":12258,"byte_end":12300,"line_start":18,"line_end":18,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":12301,"byte_end":12304,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`grapheme_indices`]: trait.UnicodeSegmentation.html#tymethod.grapheme_indices","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":12305,"byte_end":12387,"line_start":20,"line_end":20,"column_start":1,"column_end":83}},{"value":"/ [`UnicodeSegmentation`]: trait.UnicodeSegmentation.html","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":12388,"byte_end":12447,"line_start":21,"line_end":21,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":13036,"byte_end":13042,"line_start":42,"line_end":42,"column_start":12,"column_end":18},"name":"as_str","qualname":"<GraphemeIndices>::as_str","value":"pub fn as_str(&Self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" View the underlying data (the part yet to be iterated) as a slice of the original string.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":12586,"byte_end":12595,"line_start":29,"line_end":29,"column_start":5,"column_end":14}},{"value":"/ View the underlying data (the part yet to be iterated) as a slice of the original string.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":12600,"byte_end":12693,"line_start":30,"line_end":30,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":12698,"byte_end":12701,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":12706,"byte_end":12717,"line_start":32,"line_end":32,"column_start":5,"column_end":16}},{"value":"/ # use unicode_segmentation::UnicodeSegmentation;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":12722,"byte_end":12774,"line_start":33,"line_end":33,"column_start":5,"column_end":57}},{"value":"/ let mut iter = \"abc\".grapheme_indices(true);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":12779,"byte_end":12827,"line_start":34,"line_end":34,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(iter.as_str(), \"abc\");","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":12832,"byte_end":12869,"line_start":35,"line_end":35,"column_start":5,"column_end":42}},{"value":"/ iter.next();","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":12874,"byte_end":12890,"line_start":36,"line_end":36,"column_start":5,"column_end":21}},{"value":"/ assert_eq!(iter.as_str(), \"bc\");","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":12895,"byte_end":12931,"line_start":37,"line_end":37,"column_start":5,"column_end":41}},{"value":"/ iter.next();","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":12936,"byte_end":12952,"line_start":38,"line_end":38,"column_start":5,"column_end":21}},{"value":"/ iter.next();","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":12957,"byte_end":12973,"line_start":39,"line_end":39,"column_start":5,"column_end":21}},{"value":"/ assert_eq!(iter.as_str(), \"\");","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":12978,"byte_end":13012,"line_start":40,"line_end":40,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":13017,"byte_end":13024,"line_start":41,"line_end":41,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":315},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":14137,"byte_end":14146,"line_start":81,"line_end":81,"column_start":12,"column_end":21},"name":"Graphemes","qualname":"::grapheme::Graphemes","value":"Graphemes {  }","parent":null,"children":[{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319}],"decl_id":null,"docs":" External iterator for a string's\n [grapheme clusters](http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundaries).","sig":null,"attributes":[{"value":"/ External iterator for a string's","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":13708,"byte_end":13744,"line_start":72,"line_end":72,"column_start":1,"column_end":37}},{"value":"/ [grapheme clusters](http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundaries).","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":13745,"byte_end":13835,"line_start":73,"line_end":73,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":13836,"byte_end":13839,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`graphemes`] method on the [`UnicodeSegmentation`] trait. See its","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":13840,"byte_end":13940,"line_start":75,"line_end":75,"column_start":1,"column_end":101}},{"value":"/ documentation for more.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":13941,"byte_end":13968,"line_start":76,"line_end":76,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":13969,"byte_end":13972,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ [`graphemes`]: trait.UnicodeSegmentation.html#tymethod.graphemes","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":13973,"byte_end":14041,"line_start":78,"line_end":78,"column_start":1,"column_end":69}},{"value":"/ [`UnicodeSegmentation`]: trait.UnicodeSegmentation.html","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":14042,"byte_end":14101,"line_start":79,"line_end":79,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":14710,"byte_end":14716,"line_start":101,"line_end":101,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Graphemes>::as_str","value":"pub fn as_str(&Self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" View the underlying data (the part yet to be iterated) as a slice of the original string.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":14267,"byte_end":14276,"line_start":88,"line_end":88,"column_start":5,"column_end":14}},{"value":"/ View the underlying data (the part yet to be iterated) as a slice of the original string.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":14281,"byte_end":14374,"line_start":89,"line_end":89,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":14379,"byte_end":14382,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":14387,"byte_end":14398,"line_start":91,"line_end":91,"column_start":5,"column_end":16}},{"value":"/ # use unicode_segmentation::UnicodeSegmentation;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":14403,"byte_end":14455,"line_start":92,"line_end":92,"column_start":5,"column_end":57}},{"value":"/ let mut iter = \"abc\".graphemes(true);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":14460,"byte_end":14501,"line_start":93,"line_end":93,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(iter.as_str(), \"abc\");","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":14506,"byte_end":14543,"line_start":94,"line_end":94,"column_start":5,"column_end":42}},{"value":"/ iter.next();","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":14548,"byte_end":14564,"line_start":95,"line_end":95,"column_start":5,"column_end":21}},{"value":"/ assert_eq!(iter.as_str(), \"bc\");","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":14569,"byte_end":14605,"line_start":96,"line_end":96,"column_start":5,"column_end":41}},{"value":"/ iter.next();","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":14610,"byte_end":14626,"line_start":97,"line_end":97,"column_start":5,"column_end":21}},{"value":"/ iter.next();","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":14631,"byte_end":14647,"line_start":98,"line_end":98,"column_start":5,"column_end":21}},{"value":"/ assert_eq!(iter.as_str(), \"\");","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":14652,"byte_end":14686,"line_start":99,"line_end":99,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":14691,"byte_end":14698,"line_start":100,"line_end":100,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":347},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":17150,"byte_end":17164,"line_start":183,"line_end":183,"column_start":12,"column_end":26},"name":"GraphemeCursor","qualname":"::grapheme::GraphemeCursor","value":"GraphemeCursor {  }","parent":null,"children":[{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357}],"decl_id":null,"docs":" Cursor-based segmenter for grapheme clusters.","sig":null,"attributes":[{"value":"/ Cursor-based segmenter for grapheme clusters.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":16923,"byte_end":16972,"line_start":178,"line_end":178,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":16973,"byte_end":16976,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ This allows working with ropes and other datastructures where the string is not contiguous or","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":16977,"byte_end":17074,"line_start":180,"line_end":180,"column_start":1,"column_end":98}},{"value":"/ fully known at initialization time.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":17075,"byte_end":17114,"line_start":181,"line_end":181,"column_start":1,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":363},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":18855,"byte_end":18865,"line_start":218,"line_end":218,"column_start":5,"column_end":15},"name":"PreContext","qualname":"::grapheme::GraphemeIncomplete::PreContext","value":"GraphemeIncomplete::PreContext(usize)","parent":{"krate":0,"index":362},"children":[],"decl_id":null,"docs":" More pre-context is needed. The caller should call `provide_context`\n with a chunk ending at the offset given, then retry the query. This\n will only be returned if the `chunk_start` parameter is nonzero.\n","sig":null,"attributes":[{"value":"/ More pre-context is needed. The caller should call `provide_context`","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":18629,"byte_end":18701,"line_start":215,"line_end":215,"column_start":5,"column_end":77}},{"value":"/ with a chunk ending at the offset given, then retry the query. This","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":18706,"byte_end":18777,"line_start":216,"line_end":216,"column_start":5,"column_end":76}},{"value":"/ will only be returned if the `chunk_start` parameter is nonzero.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":18782,"byte_end":18850,"line_start":217,"line_end":217,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":366},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":19107,"byte_end":19116,"line_start":223,"line_end":223,"column_start":5,"column_end":14},"name":"PrevChunk","qualname":"::grapheme::GraphemeIncomplete::PrevChunk","value":"GraphemeIncomplete::PrevChunk","parent":{"krate":0,"index":362},"children":[],"decl_id":null,"docs":" When requesting `prev_boundary`, the cursor is moving past the beginning\n of the current chunk, so the chunk before that is requested. This will\n only be returned if the `chunk_start` parameter is nonzero.\n","sig":null,"attributes":[{"value":"/ When requesting `prev_boundary`, the cursor is moving past the beginning","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":18879,"byte_end":18955,"line_start":220,"line_end":220,"column_start":5,"column_end":81}},{"value":"/ of the current chunk, so the chunk before that is requested. This will","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":18960,"byte_end":19034,"line_start":221,"line_end":221,"column_start":5,"column_end":79}},{"value":"/ only be returned if the `chunk_start` parameter is nonzero.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":19039,"byte_end":19102,"line_start":222,"line_end":222,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":368},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":19390,"byte_end":19399,"line_start":229,"line_end":229,"column_start":5,"column_end":14},"name":"NextChunk","qualname":"::grapheme::GraphemeIncomplete::NextChunk","value":"GraphemeIncomplete::NextChunk","parent":{"krate":0,"index":362},"children":[],"decl_id":null,"docs":" When requesting `next_boundary`, the cursor is moving past the end of the\n current chunk, so the chunk after that is requested. This will only be\n returned if the chunk ends before the `len` parameter provided on\n creation of the cursor.\n","sig":null,"attributes":[{"value":"/ When requesting `next_boundary`, the cursor is moving past the end of the","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":19123,"byte_end":19200,"line_start":225,"line_end":225,"column_start":5,"column_end":82}},{"value":"/ current chunk, so the chunk after that is requested. This will only be","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":19205,"byte_end":19279,"line_start":226,"line_end":226,"column_start":5,"column_end":79}},{"value":"/ returned if the chunk ends before the `len` parameter provided on","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":19284,"byte_end":19353,"line_start":227,"line_end":227,"column_start":5,"column_end":74}},{"value":"/ creation of the cursor.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":19358,"byte_end":19385,"line_start":228,"line_end":228,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":370},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":19535,"byte_end":19548,"line_start":232,"line_end":232,"column_start":5,"column_end":18},"name":"InvalidOffset","qualname":"::grapheme::GraphemeIncomplete::InvalidOffset","value":"GraphemeIncomplete::InvalidOffset","parent":{"krate":0,"index":362},"children":[],"decl_id":null,"docs":" An error returned when the chunk given does not contain the cursor position.\n","sig":null,"attributes":[{"value":"/ An error returned when the chunk given does not contain the cursor position.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":19450,"byte_end":19530,"line_start":231,"line_end":231,"column_start":5,"column_end":85}}]},{"kind":"Enum","id":{"krate":0,"index":362},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":18604,"byte_end":18622,"line_start":214,"line_end":214,"column_start":10,"column_end":28},"name":"GraphemeIncomplete","qualname":"::grapheme::GraphemeIncomplete","value":"pub enum GraphemeIncomplete {\n    PreContext(usize),\n    PrevChunk,\n    NextChunk,\n    InvalidOffset,\n}","parent":null,"children":[{"krate":0,"index":363},{"krate":0,"index":366},{"krate":0,"index":368},{"krate":0,"index":370}],"decl_id":null,"docs":" An error return indicating that not enough content was available in the\n provided chunk to satisfy the query, and that more content must be provided.\n","sig":null,"attributes":[{"value":"/ An error return indicating that not enough content was available in the","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":18406,"byte_end":18481,"line_start":211,"line_end":211,"column_start":1,"column_end":76}},{"value":"/ provided chunk to satisfy the query, and that more content must be provided.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":18482,"byte_end":18562,"line_start":212,"line_end":212,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":22668,"byte_end":22671,"line_start":292,"line_end":292,"column_start":12,"column_end":15},"name":"new","qualname":"<GraphemeCursor>::new","value":"pub fn new(usize, usize, bool) -> GraphemeCursor","parent":null,"children":[],"decl_id":null,"docs":" Create a new cursor. The string and initial offset are given at creation\n time, but the contents of the string are not. The `is_extended` parameter\n controls whether extended grapheme clusters are selected.","sig":null,"attributes":[{"value":"/ Create a new cursor. The string and initial offset are given at creation","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":21956,"byte_end":22032,"line_start":278,"line_end":278,"column_start":5,"column_end":81}},{"value":"/ time, but the contents of the string are not. The `is_extended` parameter","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":22037,"byte_end":22114,"line_start":279,"line_end":279,"column_start":5,"column_end":82}},{"value":"/ controls whether extended grapheme clusters are selected.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":22119,"byte_end":22180,"line_start":280,"line_end":280,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":22185,"byte_end":22188,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ The `offset` parameter must be on a codepoint boundary.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":22193,"byte_end":22252,"line_start":282,"line_end":282,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":22257,"byte_end":22260,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":22265,"byte_end":22276,"line_start":284,"line_end":284,"column_start":5,"column_end":16}},{"value":"/ # use unicode_segmentation::GraphemeCursor;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":22281,"byte_end":22328,"line_start":285,"line_end":285,"column_start":5,"column_end":52}},{"value":"/ let s = \"हिन्दी\";","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":22333,"byte_end":22366,"line_start":286,"line_end":286,"column_start":5,"column_end":26}},{"value":"/ let mut legacy = GraphemeCursor::new(0, s.len(), false);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":22371,"byte_end":22431,"line_start":287,"line_end":287,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(legacy.next_boundary(s, 0), Ok(Some(\"ह\".len())));","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":22436,"byte_end":22502,"line_start":288,"line_end":288,"column_start":5,"column_end":69}},{"value":"/ let mut extended = GraphemeCursor::new(0, s.len(), true);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":22507,"byte_end":22568,"line_start":289,"line_end":289,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(extended.next_boundary(s, 0), Ok(Some(\"हि\".len())));","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":22573,"byte_end":22644,"line_start":290,"line_end":290,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":22649,"byte_end":22656,"line_start":291,"line_end":291,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":24757,"byte_end":24767,"line_start":352,"line_end":352,"column_start":12,"column_end":22},"name":"set_cursor","qualname":"<GraphemeCursor>::set_cursor","value":"pub fn set_cursor(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Set the cursor to a new location in the same string.","sig":null,"attributes":[{"value":"/ Set the cursor to a new location in the same string.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":24394,"byte_end":24450,"line_start":342,"line_end":342,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":24455,"byte_end":24458,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":24463,"byte_end":24474,"line_start":344,"line_end":344,"column_start":5,"column_end":16}},{"value":"/ # use unicode_segmentation::GraphemeCursor;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":24479,"byte_end":24526,"line_start":345,"line_end":345,"column_start":5,"column_end":52}},{"value":"/ let s = \"abcd\";","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":24531,"byte_end":24550,"line_start":346,"line_end":346,"column_start":5,"column_end":24}},{"value":"/ let mut cursor = GraphemeCursor::new(0, s.len(), false);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":24555,"byte_end":24615,"line_start":347,"line_end":347,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(cursor.cur_cursor(), 0);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":24620,"byte_end":24659,"line_start":348,"line_end":348,"column_start":5,"column_end":44}},{"value":"/ cursor.set_cursor(2);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":24664,"byte_end":24689,"line_start":349,"line_end":349,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(cursor.cur_cursor(), 2);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":24694,"byte_end":24733,"line_start":350,"line_end":350,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":24738,"byte_end":24745,"line_start":351,"line_end":351,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":25891,"byte_end":25901,"line_start":381,"line_end":381,"column_start":12,"column_end":22},"name":"cur_cursor","qualname":"<GraphemeCursor>::cur_cursor","value":"pub fn cur_cursor(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The current offset of the cursor. Equal to the last value provided to\n `new()` or `set_cursor()`, or returned from `next_boundary()` or\n `prev_boundary()`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":25227,"byte_end":25236,"line_start":367,"line_end":367,"column_start":5,"column_end":14}},{"value":"/ The current offset of the cursor. Equal to the last value provided to","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":25241,"byte_end":25314,"line_start":368,"line_end":368,"column_start":5,"column_end":78}},{"value":"/ `new()` or `set_cursor()`, or returned from `next_boundary()` or","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":25319,"byte_end":25387,"line_start":369,"line_end":369,"column_start":5,"column_end":73}},{"value":"/ `prev_boundary()`.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":25392,"byte_end":25414,"line_start":370,"line_end":370,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":25419,"byte_end":25422,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":25427,"byte_end":25438,"line_start":372,"line_end":372,"column_start":5,"column_end":16}},{"value":"/ # use unicode_segmentation::GraphemeCursor;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":25443,"byte_end":25490,"line_start":373,"line_end":373,"column_start":5,"column_end":52}},{"value":"/ // Two flags (🇷🇸🇮🇴), each flag is two RIS codepoints, each RIS is 4 bytes.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":25495,"byte_end":25585,"line_start":374,"line_end":374,"column_start":5,"column_end":83}},{"value":"/ let flags = \"\\u{1F1F7}\\u{1F1F8}\\u{1F1EE}\\u{1F1F4}\";","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":25590,"byte_end":25645,"line_start":375,"line_end":375,"column_start":5,"column_end":60}},{"value":"/ let mut cursor = GraphemeCursor::new(4, flags.len(), false);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":25650,"byte_end":25714,"line_start":376,"line_end":376,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(cursor.cur_cursor(), 4);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":25719,"byte_end":25758,"line_start":377,"line_end":377,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(cursor.next_boundary(flags, 0), Ok(Some(8)));","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":25763,"byte_end":25823,"line_start":378,"line_end":378,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(cursor.cur_cursor(), 8);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":25828,"byte_end":25867,"line_start":379,"line_end":379,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":25872,"byte_end":25879,"line_start":380,"line_end":380,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":27102,"byte_end":27117,"line_start":404,"line_end":404,"column_start":12,"column_end":27},"name":"provide_context","qualname":"<GraphemeCursor>::provide_context","value":"pub fn provide_context(&mut Self, &str, usize)","parent":null,"children":[],"decl_id":null,"docs":" Provide additional pre-context when it is needed to decide a boundary.\n The end of the chunk must coincide with the value given in the\n `GraphemeIncomplete::PreContext` request.","sig":null,"attributes":[{"value":"/ Provide additional pre-context when it is needed to decide a boundary.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":25951,"byte_end":26025,"line_start":385,"line_end":385,"column_start":5,"column_end":79}},{"value":"/ The end of the chunk must coincide with the value given in the","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":26030,"byte_end":26096,"line_start":386,"line_end":386,"column_start":5,"column_end":71}},{"value":"/ `GraphemeIncomplete::PreContext` request.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":26101,"byte_end":26146,"line_start":387,"line_end":387,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":26151,"byte_end":26154,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":26159,"byte_end":26170,"line_start":389,"line_end":389,"column_start":5,"column_end":16}},{"value":"/ # use unicode_segmentation::{GraphemeCursor, GraphemeIncomplete};","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":26175,"byte_end":26244,"line_start":390,"line_end":390,"column_start":5,"column_end":74}},{"value":"/ let flags = \"\\u{1F1F7}\\u{1F1F8}\\u{1F1EE}\\u{1F1F4}\";","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":26249,"byte_end":26304,"line_start":391,"line_end":391,"column_start":5,"column_end":60}},{"value":"/ let mut cursor = GraphemeCursor::new(8, flags.len(), false);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":26309,"byte_end":26373,"line_start":392,"line_end":392,"column_start":5,"column_end":69}},{"value":"/ // Not enough pre-context to decide if there's a boundary between the two flags.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":26378,"byte_end":26462,"line_start":393,"line_end":393,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(cursor.is_boundary(&flags[8..], 8), Err(GraphemeIncomplete::PreContext(8)));","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":26467,"byte_end":26558,"line_start":394,"line_end":394,"column_start":5,"column_end":96}},{"value":"/ // Provide one more Regional Indicator Symbol of pre-context","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":26563,"byte_end":26627,"line_start":395,"line_end":395,"column_start":5,"column_end":69}},{"value":"/ cursor.provide_context(&flags[4..8], 4);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":26632,"byte_end":26676,"line_start":396,"line_end":396,"column_start":5,"column_end":49}},{"value":"/ // Still not enough context to decide.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":26681,"byte_end":26723,"line_start":397,"line_end":397,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(cursor.is_boundary(&flags[8..], 8), Err(GraphemeIncomplete::PreContext(4)));","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":26728,"byte_end":26819,"line_start":398,"line_end":398,"column_start":5,"column_end":96}},{"value":"/ // Provide additional requested context.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":26824,"byte_end":26868,"line_start":399,"line_end":399,"column_start":5,"column_end":49}},{"value":"/ cursor.provide_context(&flags[0..4], 0);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":26873,"byte_end":26917,"line_start":400,"line_end":400,"column_start":5,"column_end":49}},{"value":"/ // That's enough to decide (it always is when context goes to the start of the string)","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":26922,"byte_end":27012,"line_start":401,"line_end":401,"column_start":5,"column_end":95}},{"value":"/ assert_eq!(cursor.is_boundary(&flags[8..], 8), Ok(true));","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":27017,"byte_end":27078,"line_start":402,"line_end":402,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":27083,"byte_end":27090,"line_start":403,"line_end":403,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":31811,"byte_end":31822,"line_start":531,"line_end":531,"column_start":12,"column_end":23},"name":"is_boundary","qualname":"<GraphemeCursor>::is_boundary","value":"pub fn is_boundary(&mut Self, &str, usize) -> Result<bool, GraphemeIncomplete>","parent":null,"children":[],"decl_id":null,"docs":" Determine whether the current cursor location is a grapheme cluster boundary.\n Only a part of the string need be supplied. If `chunk_start` is nonzero or\n the length of `chunk` is not equal to `len` on creation, then this method\n may return `GraphemeIncomplete::PreContext`. The caller should then\n call `provide_context` with the requested chunk, then retry calling this\n method.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":30553,"byte_end":30562,"line_start":507,"line_end":507,"column_start":5,"column_end":14}},{"value":"/ Determine whether the current cursor location is a grapheme cluster boundary.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":30567,"byte_end":30648,"line_start":508,"line_end":508,"column_start":5,"column_end":86}},{"value":"/ Only a part of the string need be supplied. If `chunk_start` is nonzero or","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":30653,"byte_end":30731,"line_start":509,"line_end":509,"column_start":5,"column_end":83}},{"value":"/ the length of `chunk` is not equal to `len` on creation, then this method","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":30736,"byte_end":30813,"line_start":510,"line_end":510,"column_start":5,"column_end":82}},{"value":"/ may return `GraphemeIncomplete::PreContext`. The caller should then","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":30818,"byte_end":30889,"line_start":511,"line_end":511,"column_start":5,"column_end":76}},{"value":"/ call `provide_context` with the requested chunk, then retry calling this","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":30894,"byte_end":30970,"line_start":512,"line_end":512,"column_start":5,"column_end":81}},{"value":"/ method.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":30975,"byte_end":30986,"line_start":513,"line_end":513,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":30991,"byte_end":30994,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ For partial chunks, if the cursor is not at the beginning or end of the","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":30999,"byte_end":31074,"line_start":515,"line_end":515,"column_start":5,"column_end":80}},{"value":"/ string, the chunk should contain at least the codepoint following the cursor.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":31079,"byte_end":31160,"line_start":516,"line_end":516,"column_start":5,"column_end":86}},{"value":"/ If the string is nonempty, the chunk must be nonempty.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":31165,"byte_end":31223,"line_start":517,"line_end":517,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":31228,"byte_end":31231,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ All calls should have consistent chunk contents (ie, if a chunk provides","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":31236,"byte_end":31312,"line_start":519,"line_end":519,"column_start":5,"column_end":81}},{"value":"/ content for a given slice, all further chunks covering that slice must have","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":31317,"byte_end":31396,"line_start":520,"line_end":520,"column_start":5,"column_end":84}},{"value":"/ the same content for it).","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":31401,"byte_end":31430,"line_start":521,"line_end":521,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":31435,"byte_end":31438,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":31443,"byte_end":31454,"line_start":523,"line_end":523,"column_start":5,"column_end":16}},{"value":"/ # use unicode_segmentation::GraphemeCursor;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":31459,"byte_end":31506,"line_start":524,"line_end":524,"column_start":5,"column_end":52}},{"value":"/ let flags = \"\\u{1F1F7}\\u{1F1F8}\\u{1F1EE}\\u{1F1F4}\";","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":31511,"byte_end":31566,"line_start":525,"line_end":525,"column_start":5,"column_end":60}},{"value":"/ let mut cursor = GraphemeCursor::new(8, flags.len(), false);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":31571,"byte_end":31635,"line_start":526,"line_end":526,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(cursor.is_boundary(flags, 0), Ok(true));","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":31640,"byte_end":31695,"line_start":527,"line_end":527,"column_start":5,"column_end":60}},{"value":"/ cursor.set_cursor(12);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":31700,"byte_end":31726,"line_start":528,"line_end":528,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(cursor.is_boundary(flags, 0), Ok(false));","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":31731,"byte_end":31787,"line_start":529,"line_end":529,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":31792,"byte_end":31799,"line_start":530,"line_end":530,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":36087,"byte_end":36100,"line_start":626,"line_end":626,"column_start":12,"column_end":25},"name":"next_boundary","qualname":"<GraphemeCursor>::next_boundary","value":"pub fn next_boundary(&mut Self, &str, usize)\n-> Result<Option<usize>, GraphemeIncomplete>","parent":null,"children":[],"decl_id":null,"docs":" Find the next boundary after the current cursor position. Only a part of\n the string need be supplied. If the chunk is incomplete, then this\n method might return `GraphemeIncomplete::PreContext` or\n `GraphemeIncomplete::NextChunk`. In the former case, the caller should\n call `provide_context` with the requested chunk, then retry. In the\n latter case, the caller should provide the chunk following the one\n given, then retry.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":34422,"byte_end":34431,"line_start":593,"line_end":593,"column_start":5,"column_end":14}},{"value":"/ Find the next boundary after the current cursor position. Only a part of","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":34436,"byte_end":34512,"line_start":594,"line_end":594,"column_start":5,"column_end":81}},{"value":"/ the string need be supplied. If the chunk is incomplete, then this","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":34517,"byte_end":34587,"line_start":595,"line_end":595,"column_start":5,"column_end":75}},{"value":"/ method might return `GraphemeIncomplete::PreContext` or","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":34592,"byte_end":34651,"line_start":596,"line_end":596,"column_start":5,"column_end":64}},{"value":"/ `GraphemeIncomplete::NextChunk`. In the former case, the caller should","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":34656,"byte_end":34730,"line_start":597,"line_end":597,"column_start":5,"column_end":79}},{"value":"/ call `provide_context` with the requested chunk, then retry. In the","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":34735,"byte_end":34806,"line_start":598,"line_end":598,"column_start":5,"column_end":76}},{"value":"/ latter case, the caller should provide the chunk following the one","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":34811,"byte_end":34881,"line_start":599,"line_end":599,"column_start":5,"column_end":75}},{"value":"/ given, then retry.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":34886,"byte_end":34908,"line_start":600,"line_end":600,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":34913,"byte_end":34916,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ See `is_boundary` for expectations on the provided chunk.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":34921,"byte_end":34982,"line_start":602,"line_end":602,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":34987,"byte_end":34990,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":34995,"byte_end":35006,"line_start":604,"line_end":604,"column_start":5,"column_end":16}},{"value":"/ # use unicode_segmentation::GraphemeCursor;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":35011,"byte_end":35058,"line_start":605,"line_end":605,"column_start":5,"column_end":52}},{"value":"/ let flags = \"\\u{1F1F7}\\u{1F1F8}\\u{1F1EE}\\u{1F1F4}\";","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":35063,"byte_end":35118,"line_start":606,"line_end":606,"column_start":5,"column_end":60}},{"value":"/ let mut cursor = GraphemeCursor::new(4, flags.len(), false);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":35123,"byte_end":35187,"line_start":607,"line_end":607,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(cursor.next_boundary(flags, 0), Ok(Some(8)));","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":35192,"byte_end":35252,"line_start":608,"line_end":608,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(cursor.next_boundary(flags, 0), Ok(Some(16)));","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":35257,"byte_end":35318,"line_start":609,"line_end":609,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(cursor.next_boundary(flags, 0), Ok(None));","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":35323,"byte_end":35380,"line_start":610,"line_end":610,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":35385,"byte_end":35392,"line_start":611,"line_end":611,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":35397,"byte_end":35400,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ And an example that uses partial strings:","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":35405,"byte_end":35450,"line_start":613,"line_end":613,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":35455,"byte_end":35458,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":35463,"byte_end":35474,"line_start":615,"line_end":615,"column_start":5,"column_end":16}},{"value":"/ # use unicode_segmentation::{GraphemeCursor, GraphemeIncomplete};","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":35479,"byte_end":35548,"line_start":616,"line_end":616,"column_start":5,"column_end":74}},{"value":"/ let s = \"abcd\";","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":35553,"byte_end":35572,"line_start":617,"line_end":617,"column_start":5,"column_end":24}},{"value":"/ let mut cursor = GraphemeCursor::new(0, s.len(), false);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":35577,"byte_end":35637,"line_start":618,"line_end":618,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(cursor.next_boundary(&s[..2], 0), Ok(Some(1)));","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":35642,"byte_end":35704,"line_start":619,"line_end":619,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(cursor.next_boundary(&s[..2], 0), Err(GraphemeIncomplete::NextChunk));","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":35709,"byte_end":35794,"line_start":620,"line_end":620,"column_start":5,"column_end":90}},{"value":"/ assert_eq!(cursor.next_boundary(&s[2..4], 2), Ok(Some(2)));","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":35799,"byte_end":35862,"line_start":621,"line_end":621,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(cursor.next_boundary(&s[2..4], 2), Ok(Some(3)));","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":35867,"byte_end":35930,"line_start":622,"line_end":622,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(cursor.next_boundary(&s[2..4], 2), Ok(Some(4)));","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":35935,"byte_end":35998,"line_start":623,"line_end":623,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(cursor.next_boundary(&s[2..4], 2), Ok(None));","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":36003,"byte_end":36063,"line_start":624,"line_end":624,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":36068,"byte_end":36075,"line_start":625,"line_end":625,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":39559,"byte_end":39572,"line_start":705,"line_end":705,"column_start":12,"column_end":25},"name":"prev_boundary","qualname":"<GraphemeCursor>::prev_boundary","value":"pub fn prev_boundary(&mut Self, &str, usize)\n-> Result<Option<usize>, GraphemeIncomplete>","parent":null,"children":[],"decl_id":null,"docs":" Find the previous boundary after the current cursor position. Only a part\n of the string need be supplied. If the chunk is incomplete, then this\n method might return `GraphemeIncomplete::PreContext` or\n `GraphemeIncomplete::PrevChunk`. In the former case, the caller should\n call `provide_context` with the requested chunk, then retry. In the\n latter case, the caller should provide the chunk preceding the one\n given, then retry.","sig":null,"attributes":[{"value":"/ Find the previous boundary after the current cursor position. Only a part","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":37800,"byte_end":37877,"line_start":672,"line_end":672,"column_start":5,"column_end":82}},{"value":"/ of the string need be supplied. If the chunk is incomplete, then this","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":37882,"byte_end":37955,"line_start":673,"line_end":673,"column_start":5,"column_end":78}},{"value":"/ method might return `GraphemeIncomplete::PreContext` or","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":37960,"byte_end":38019,"line_start":674,"line_end":674,"column_start":5,"column_end":64}},{"value":"/ `GraphemeIncomplete::PrevChunk`. In the former case, the caller should","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":38024,"byte_end":38098,"line_start":675,"line_end":675,"column_start":5,"column_end":79}},{"value":"/ call `provide_context` with the requested chunk, then retry. In the","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":38103,"byte_end":38174,"line_start":676,"line_end":676,"column_start":5,"column_end":76}},{"value":"/ latter case, the caller should provide the chunk preceding the one","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":38179,"byte_end":38249,"line_start":677,"line_end":677,"column_start":5,"column_end":75}},{"value":"/ given, then retry.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":38254,"byte_end":38276,"line_start":678,"line_end":678,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":38281,"byte_end":38284,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ See `is_boundary` for expectations on the provided chunk.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":38289,"byte_end":38350,"line_start":680,"line_end":680,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":38355,"byte_end":38358,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":38363,"byte_end":38374,"line_start":682,"line_end":682,"column_start":5,"column_end":16}},{"value":"/ # use unicode_segmentation::GraphemeCursor;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":38379,"byte_end":38426,"line_start":683,"line_end":683,"column_start":5,"column_end":52}},{"value":"/ let flags = \"\\u{1F1F7}\\u{1F1F8}\\u{1F1EE}\\u{1F1F4}\";","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":38431,"byte_end":38486,"line_start":684,"line_end":684,"column_start":5,"column_end":60}},{"value":"/ let mut cursor = GraphemeCursor::new(12, flags.len(), false);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":38491,"byte_end":38556,"line_start":685,"line_end":685,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(cursor.prev_boundary(flags, 0), Ok(Some(8)));","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":38561,"byte_end":38621,"line_start":686,"line_end":686,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(cursor.prev_boundary(flags, 0), Ok(Some(0)));","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":38626,"byte_end":38686,"line_start":687,"line_end":687,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(cursor.prev_boundary(flags, 0), Ok(None));","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":38691,"byte_end":38748,"line_start":688,"line_end":688,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":38753,"byte_end":38760,"line_start":689,"line_end":689,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":38765,"byte_end":38768,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ And an example that uses partial strings (note the exact return is not","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":38773,"byte_end":38847,"line_start":691,"line_end":691,"column_start":5,"column_end":79}},{"value":"/ guaranteed, and may be `PrevChunk` or `PreContext` arbitrarily):","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":38852,"byte_end":38920,"line_start":692,"line_end":692,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":38925,"byte_end":38928,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":38933,"byte_end":38944,"line_start":694,"line_end":694,"column_start":5,"column_end":16}},{"value":"/ # use unicode_segmentation::{GraphemeCursor, GraphemeIncomplete};","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":38949,"byte_end":39018,"line_start":695,"line_end":695,"column_start":5,"column_end":74}},{"value":"/ let s = \"abcd\";","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":39023,"byte_end":39042,"line_start":696,"line_end":696,"column_start":5,"column_end":24}},{"value":"/ let mut cursor = GraphemeCursor::new(4, s.len(), false);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":39047,"byte_end":39107,"line_start":697,"line_end":697,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(cursor.prev_boundary(&s[2..4], 2), Ok(Some(3)));","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":39112,"byte_end":39175,"line_start":698,"line_end":698,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(cursor.prev_boundary(&s[2..4], 2), Err(GraphemeIncomplete::PrevChunk));","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":39180,"byte_end":39266,"line_start":699,"line_end":699,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(cursor.prev_boundary(&s[0..2], 0), Ok(Some(2)));","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":39271,"byte_end":39334,"line_start":700,"line_end":700,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(cursor.prev_boundary(&s[0..2], 0), Ok(Some(1)));","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":39339,"byte_end":39402,"line_start":701,"line_end":701,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(cursor.prev_boundary(&s[0..2], 0), Ok(Some(0)));","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":39407,"byte_end":39470,"line_start":702,"line_end":702,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(cursor.prev_boundary(&s[0..2], 0), Ok(None));","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":39475,"byte_end":39535,"line_start":703,"line_end":703,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":39540,"byte_end":39547,"line_start":704,"line_end":704,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":399},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/tables.rs","byte_start":7416035,"byte_end":7416050,"line_start":17,"line_end":17,"column_start":11,"column_end":26},"name":"UNICODE_VERSION","qualname":"::tables::UNICODE_VERSION","value":"(u64, u64, u64)","parent":null,"children":[],"decl_id":null,"docs":" The version of [Unicode](http://www.unicode.org/)\n that this version of unicode-segmentation is based on.\n","sig":null,"attributes":[{"value":"/ The version of [Unicode](http://www.unicode.org/)","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/tables.rs","byte_start":7415912,"byte_end":7415965,"line_start":15,"line_end":15,"column_start":1,"column_end":54}},{"value":"/ that this version of unicode-segmentation is based on.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/tables.rs","byte_start":7415966,"byte_end":7416024,"line_start":16,"line_end":16,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":722},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/sentence.rs","byte_start":53493,"byte_end":53509,"line_start":300,"line_end":300,"column_start":12,"column_end":28},"name":"UnicodeSentences","qualname":"::sentence::UnicodeSentences","value":"UnicodeSentences {  }","parent":null,"children":[{"krate":0,"index":724}],"decl_id":null,"docs":" An iterator over the substrings of a string which, after splitting the string on\n [sentence boundaries](http://www.unicode.org/reports/tr29/#Sentence_Boundaries),\n contain any characters with the\n [Alphabetic](http://unicode.org/reports/tr44/#Alphabetic)\n property, or with\n [General_Category=Number](http://unicode.org/reports/tr44/#General_Category_Values).","sig":null,"attributes":[{"value":"/ An iterator over the substrings of a string which, after splitting the string on","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/sentence.rs","byte_start":52796,"byte_end":52880,"line_start":287,"line_end":287,"column_start":1,"column_end":85}},{"value":"/ [sentence boundaries](http://www.unicode.org/reports/tr29/#Sentence_Boundaries),","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/sentence.rs","byte_start":52881,"byte_end":52965,"line_start":288,"line_end":288,"column_start":1,"column_end":85}},{"value":"/ contain any characters with the","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/sentence.rs","byte_start":52966,"byte_end":53001,"line_start":289,"line_end":289,"column_start":1,"column_end":36}},{"value":"/ [Alphabetic](http://unicode.org/reports/tr44/#Alphabetic)","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/sentence.rs","byte_start":53002,"byte_end":53063,"line_start":290,"line_end":290,"column_start":1,"column_end":62}},{"value":"/ property, or with","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/sentence.rs","byte_start":53064,"byte_end":53085,"line_start":291,"line_end":291,"column_start":1,"column_end":22}},{"value":"/ [General_Category=Number](http://unicode.org/reports/tr44/#General_Category_Values).","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/sentence.rs","byte_start":53086,"byte_end":53174,"line_start":292,"line_end":292,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/sentence.rs","byte_start":53175,"byte_end":53178,"line_start":293,"line_end":293,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`unicode_sentences`] method on the [`UnicodeSegmentation`]","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/sentence.rs","byte_start":53179,"byte_end":53272,"line_start":294,"line_end":294,"column_start":1,"column_end":94}},{"value":"/ trait. See its documentation for more.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/sentence.rs","byte_start":53273,"byte_end":53315,"line_start":295,"line_end":295,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/sentence.rs","byte_start":53316,"byte_end":53319,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ [`unicode_sentences`]: trait.UnicodeSegmentation.html#tymethod.unicode_sentences","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/sentence.rs","byte_start":53320,"byte_end":53404,"line_start":297,"line_end":297,"column_start":1,"column_end":85}},{"value":"/ [`UnicodeSegmentation`]: trait.UnicodeSegmentation.html","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/sentence.rs","byte_start":53405,"byte_end":53464,"line_start":298,"line_end":298,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":728},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/sentence.rs","byte_start":54030,"byte_end":54045,"line_start":313,"line_end":313,"column_start":12,"column_end":27},"name":"USentenceBounds","qualname":"::sentence::USentenceBounds","value":"USentenceBounds {  }","parent":null,"children":[{"krate":0,"index":730},{"krate":0,"index":731}],"decl_id":null,"docs":" External iterator for a string's\n [sentence boundaries](http://www.unicode.org/reports/tr29/#Sentence_Boundaries).","sig":null,"attributes":[{"value":"/ External iterator for a string's","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/sentence.rs","byte_start":53578,"byte_end":53614,"line_start":304,"line_end":304,"column_start":1,"column_end":37}},{"value":"/ [sentence boundaries](http://www.unicode.org/reports/tr29/#Sentence_Boundaries).","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/sentence.rs","byte_start":53615,"byte_end":53699,"line_start":305,"line_end":305,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/sentence.rs","byte_start":53700,"byte_end":53703,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`split_sentence_bounds`] method on the [`UnicodeSegmentation`]","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/sentence.rs","byte_start":53704,"byte_end":53801,"line_start":307,"line_end":307,"column_start":1,"column_end":98}},{"value":"/ trait. See its documentation for more.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/sentence.rs","byte_start":53802,"byte_end":53844,"line_start":308,"line_end":308,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/sentence.rs","byte_start":53845,"byte_end":53848,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ [`split_sentence_bounds`]: trait.UnicodeSegmentation.html#tymethod.split_sentence_bounds","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/sentence.rs","byte_start":53849,"byte_end":53941,"line_start":310,"line_end":310,"column_start":1,"column_end":93}},{"value":"/ [`UnicodeSegmentation`]: trait.UnicodeSegmentation.html","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/sentence.rs","byte_start":53942,"byte_end":54001,"line_start":311,"line_end":311,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":735},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/sentence.rs","byte_start":54540,"byte_end":54561,"line_start":326,"line_end":326,"column_start":12,"column_end":33},"name":"USentenceBoundIndices","qualname":"::sentence::USentenceBoundIndices","value":"USentenceBoundIndices {  }","parent":null,"children":[{"krate":0,"index":737},{"krate":0,"index":738}],"decl_id":null,"docs":" External iterator for sentence boundaries and byte offsets.","sig":null,"attributes":[{"value":"/ External iterator for sentence boundaries and byte offsets.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/sentence.rs","byte_start":54125,"byte_end":54188,"line_start":318,"line_end":318,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/sentence.rs","byte_start":54189,"byte_end":54192,"line_start":319,"line_end":319,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`split_sentence_bound_indices`] method on the","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/sentence.rs","byte_start":54193,"byte_end":54273,"line_start":320,"line_end":320,"column_start":1,"column_end":81}},{"value":"/ [`UnicodeSegmentation`] trait. See its documentation for more.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/sentence.rs","byte_start":54274,"byte_end":54340,"line_start":321,"line_end":321,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/sentence.rs","byte_start":54341,"byte_end":54344,"line_start":322,"line_end":322,"column_start":1,"column_end":4}},{"value":"/ [`split_sentence_bound_indices`]: trait.UnicodeSegmentation.html#tymethod.split_sentence_bound_indices","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/sentence.rs","byte_start":54345,"byte_end":54451,"line_start":323,"line_end":323,"column_start":1,"column_end":107}},{"value":"/ [`UnicodeSegmentation`]: trait.UnicodeSegmentation.html","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/sentence.rs","byte_start":54452,"byte_end":54511,"line_start":324,"line_end":324,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":190},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":58087,"byte_end":58099,"line_start":28,"line_end":28,"column_start":12,"column_end":24},"name":"UnicodeWords","qualname":"::word::UnicodeWords","value":"UnicodeWords {  }","parent":null,"children":[{"krate":0,"index":192}],"decl_id":null,"docs":" An iterator over the substrings of a string which, after splitting the string on\n [word boundaries](http://www.unicode.org/reports/tr29/#Word_Boundaries),\n contain any characters with the\n [Alphabetic](http://unicode.org/reports/tr44/#Alphabetic)\n property, or with\n [General_Category=Number](http://unicode.org/reports/tr44/#General_Category_Values).","sig":null,"attributes":[{"value":"/ An iterator over the substrings of a string which, after splitting the string on","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":57427,"byte_end":57511,"line_start":16,"line_end":16,"column_start":1,"column_end":85}},{"value":"/ [word boundaries](http://www.unicode.org/reports/tr29/#Word_Boundaries),","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":57512,"byte_end":57588,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ contain any characters with the","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":57589,"byte_end":57624,"line_start":18,"line_end":18,"column_start":1,"column_end":36}},{"value":"/ [Alphabetic](http://unicode.org/reports/tr44/#Alphabetic)","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":57625,"byte_end":57686,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ property, or with","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":57687,"byte_end":57708,"line_start":20,"line_end":20,"column_start":1,"column_end":22}},{"value":"/ [General_Category=Number](http://unicode.org/reports/tr44/#General_Category_Values).","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":57709,"byte_end":57797,"line_start":21,"line_end":21,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":57798,"byte_end":57801,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`unicode_words`] method on the [`UnicodeSegmentation`] trait. See","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":57802,"byte_end":57902,"line_start":23,"line_end":23,"column_start":1,"column_end":101}},{"value":"/ its documentation for more.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":57903,"byte_end":57934,"line_start":24,"line_end":24,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":57935,"byte_end":57938,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [`unicode_words`]: trait.UnicodeSegmentation.html#tymethod.unicode_words","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":57939,"byte_end":58015,"line_start":26,"line_end":26,"column_start":1,"column_end":77}},{"value":"/ [`UnicodeSegmentation`]: trait.UnicodeSegmentation.html","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":58016,"byte_end":58075,"line_start":27,"line_end":27,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":200},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":59228,"byte_end":59246,"line_start":60,"line_end":60,"column_start":12,"column_end":30},"name":"UnicodeWordIndices","qualname":"::word::UnicodeWordIndices","value":"UnicodeWordIndices {  }","parent":null,"children":[{"krate":0,"index":202}],"decl_id":null,"docs":" An iterator over the substrings of a string which, after splitting the string on\n [word boundaries](http://www.unicode.org/reports/tr29/#Word_Boundaries),\n contain any characters with the\n [Alphabetic](http://unicode.org/reports/tr44/#Alphabetic)\n property, or with\n [General_Category=Number](http://unicode.org/reports/tr44/#General_Category_Values).\n This iterator also provides the byte offsets for each substring.","sig":null,"attributes":[{"value":"/ An iterator over the substrings of a string which, after splitting the string on","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":58478,"byte_end":58562,"line_start":47,"line_end":47,"column_start":1,"column_end":85}},{"value":"/ [word boundaries](http://www.unicode.org/reports/tr29/#Word_Boundaries),","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":58563,"byte_end":58639,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ contain any characters with the","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":58640,"byte_end":58675,"line_start":49,"line_end":49,"column_start":1,"column_end":36}},{"value":"/ [Alphabetic](http://unicode.org/reports/tr44/#Alphabetic)","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":58676,"byte_end":58737,"line_start":50,"line_end":50,"column_start":1,"column_end":62}},{"value":"/ property, or with","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":58738,"byte_end":58759,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/ [General_Category=Number](http://unicode.org/reports/tr44/#General_Category_Values).","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":58760,"byte_end":58848,"line_start":52,"line_end":52,"column_start":1,"column_end":89}},{"value":"/ This iterator also provides the byte offsets for each substring.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":58849,"byte_end":58917,"line_start":53,"line_end":53,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":58918,"byte_end":58921,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`unicode_word_indices`] method on the [`UnicodeSegmentation`] trait. See","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":58922,"byte_end":59029,"line_start":55,"line_end":55,"column_start":1,"column_end":108}},{"value":"/ its documentation for more.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":59030,"byte_end":59061,"line_start":56,"line_end":56,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":59062,"byte_end":59065,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ [`unicode_word_indices`]: trait.UnicodeSegmentation.html#tymethod.unicode_word_indices","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":59066,"byte_end":59156,"line_start":58,"line_end":58,"column_start":1,"column_end":91}},{"value":"/ [`UnicodeSegmentation`]: trait.UnicodeSegmentation.html","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":59157,"byte_end":59216,"line_start":59,"line_end":59,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":742},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":60111,"byte_end":60122,"line_start":88,"line_end":88,"column_start":12,"column_end":23},"name":"UWordBounds","qualname":"::word::UWordBounds","value":"UWordBounds {  }","parent":null,"children":[{"krate":0,"index":744},{"krate":0,"index":745},{"krate":0,"index":746}],"decl_id":null,"docs":" External iterator for a string's\n [word boundaries](http://www.unicode.org/reports/tr29/#Word_Boundaries).","sig":null,"attributes":[{"value":"/ External iterator for a string's","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":59679,"byte_end":59715,"line_start":79,"line_end":79,"column_start":1,"column_end":37}},{"value":"/ [word boundaries](http://www.unicode.org/reports/tr29/#Word_Boundaries).","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":59716,"byte_end":59792,"line_start":80,"line_end":80,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":59793,"byte_end":59796,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`split_word_bounds`] method on the [`UnicodeSegmentation`]","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":59797,"byte_end":59890,"line_start":82,"line_end":82,"column_start":1,"column_end":94}},{"value":"/ trait. See its documentation for more.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":59891,"byte_end":59933,"line_start":83,"line_end":83,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":59934,"byte_end":59937,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ [`split_word_bounds`]: trait.UnicodeSegmentation.html#tymethod.split_word_bounds","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":59938,"byte_end":60022,"line_start":85,"line_end":85,"column_start":1,"column_end":85}},{"value":"/ [`UnicodeSegmentation`]: trait.UnicodeSegmentation.html","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":60023,"byte_end":60082,"line_start":86,"line_end":86,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":750},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":60605,"byte_end":60622,"line_start":102,"line_end":102,"column_start":12,"column_end":29},"name":"UWordBoundIndices","qualname":"::word::UWordBoundIndices","value":"UWordBoundIndices {  }","parent":null,"children":[{"krate":0,"index":752},{"krate":0,"index":753}],"decl_id":null,"docs":" External iterator for word boundaries and byte offsets.","sig":null,"attributes":[{"value":"/ External iterator for word boundaries and byte offsets.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":60206,"byte_end":60265,"line_start":94,"line_end":94,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":60266,"byte_end":60269,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`split_word_bound_indices`] method on the","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":60270,"byte_end":60346,"line_start":96,"line_end":96,"column_start":1,"column_end":77}},{"value":"/ [`UnicodeSegmentation`] trait. See its documentation for more.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":60347,"byte_end":60413,"line_start":97,"line_end":97,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":60414,"byte_end":60417,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ [`split_word_bound_indices`]: trait.UnicodeSegmentation.html#tymethod.split_word_bound_indices","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":60418,"byte_end":60516,"line_start":99,"line_end":99,"column_start":1,"column_end":99}},{"value":"/ [`UnicodeSegmentation`]: trait.UnicodeSegmentation.html","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":60517,"byte_end":60576,"line_start":100,"line_end":100,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":61179,"byte_end":61185,"line_start":120,"line_end":120,"column_start":12,"column_end":18},"name":"as_str","qualname":"<UWordBoundIndices>::as_str","value":"pub fn as_str(&Self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" View the underlying data (the part yet to be iterated) as a slice of the original string.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":60721,"byte_end":60730,"line_start":108,"line_end":108,"column_start":5,"column_end":14}},{"value":"/ View the underlying data (the part yet to be iterated) as a slice of the original string.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":60735,"byte_end":60828,"line_start":109,"line_end":109,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":60833,"byte_end":60836,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":60841,"byte_end":60852,"line_start":111,"line_end":111,"column_start":5,"column_end":16}},{"value":"/ # use unicode_segmentation::UnicodeSegmentation;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":60857,"byte_end":60909,"line_start":112,"line_end":112,"column_start":5,"column_end":57}},{"value":"/ let mut iter = \"Hello world\".split_word_bound_indices();","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":60914,"byte_end":60974,"line_start":113,"line_end":113,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(iter.as_str(), \"Hello world\");","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":60979,"byte_end":61024,"line_start":114,"line_end":114,"column_start":5,"column_end":50}},{"value":"/ iter.next();","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":61029,"byte_end":61045,"line_start":115,"line_end":115,"column_start":5,"column_end":21}},{"value":"/ assert_eq!(iter.as_str(), \" world\");","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":61050,"byte_end":61090,"line_start":116,"line_end":116,"column_start":5,"column_end":45}},{"value":"/ iter.next();","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":61095,"byte_end":61111,"line_start":117,"line_end":117,"column_start":5,"column_end":21}},{"value":"/ assert_eq!(iter.as_str(), \"world\");","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":61116,"byte_end":61155,"line_start":118,"line_end":118,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":61160,"byte_end":61167,"line_start":119,"line_end":119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":83530,"byte_end":83536,"line_start":684,"line_end":684,"column_start":12,"column_end":18},"name":"as_str","qualname":"<UWordBounds>::as_str","value":"pub fn as_str(&Self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" View the underlying data (the part yet to be iterated) as a slice of the original string.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":83079,"byte_end":83088,"line_start":672,"line_end":672,"column_start":5,"column_end":14}},{"value":"/ View the underlying data (the part yet to be iterated) as a slice of the original string.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":83093,"byte_end":83186,"line_start":673,"line_end":673,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":83191,"byte_end":83194,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":83199,"byte_end":83210,"line_start":675,"line_end":675,"column_start":5,"column_end":16}},{"value":"/ # use unicode_segmentation::UnicodeSegmentation;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":83215,"byte_end":83267,"line_start":676,"line_end":676,"column_start":5,"column_end":57}},{"value":"/ let mut iter = \"Hello world\".split_word_bounds();","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":83272,"byte_end":83325,"line_start":677,"line_end":677,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(iter.as_str(), \"Hello world\");","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":83330,"byte_end":83375,"line_start":678,"line_end":678,"column_start":5,"column_end":50}},{"value":"/ iter.next();","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":83380,"byte_end":83396,"line_start":679,"line_end":679,"column_start":5,"column_end":21}},{"value":"/ assert_eq!(iter.as_str(), \" world\");","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":83401,"byte_end":83441,"line_start":680,"line_end":680,"column_start":5,"column_end":45}},{"value":"/ iter.next();","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":83446,"byte_end":83462,"line_start":681,"line_end":681,"column_start":5,"column_end":21}},{"value":"/ assert_eq!(iter.as_str(), \"world\");","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":83467,"byte_end":83506,"line_start":682,"line_end":682,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":83511,"byte_end":83518,"line_start":683,"line_end":683,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":279},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":2667,"byte_end":2686,"line_start":86,"line_end":86,"column_start":11,"column_end":30},"name":"UnicodeSegmentation","qualname":"::UnicodeSegmentation","value":"UnicodeSegmentation","parent":null,"children":[{"krate":0,"index":280},{"krate":0,"index":282},{"krate":0,"index":284},{"krate":0,"index":286},{"krate":0,"index":288},{"krate":0,"index":290},{"krate":0,"index":292},{"krate":0,"index":294},{"krate":0,"index":296}],"decl_id":null,"docs":" Methods for segmenting strings according to\n [Unicode Standard Annex #29](http://www.unicode.org/reports/tr29/).\n","sig":null,"attributes":[{"value":"/ Methods for segmenting strings according to","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":2537,"byte_end":2584,"line_start":84,"line_end":84,"column_start":1,"column_end":48}},{"value":"/ [Unicode Standard Annex #29](http://www.unicode.org/reports/tr29/).","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":2585,"byte_end":2656,"line_start":85,"line_end":85,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":3794,"byte_end":3803,"line_start":112,"line_end":112,"column_start":8,"column_end":17},"name":"graphemes","qualname":"::UnicodeSegmentation::graphemes","value":"pub fn graphemes<'a>(&'a Self, bool) -> Graphemes","parent":{"krate":0,"index":279},"children":[],"decl_id":null,"docs":" Returns an iterator over the [grapheme clusters][graphemes] of `self`.","sig":null,"attributes":[{"value":"/ Returns an iterator over the [grapheme clusters][graphemes] of `self`.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":2693,"byte_end":2767,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":2772,"byte_end":2775,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ [graphemes]: http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundaries","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":2780,"byte_end":2861,"line_start":89,"line_end":89,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":2866,"byte_end":2869,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ If `is_extended` is true, the iterator is over the","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":2874,"byte_end":2928,"line_start":91,"line_end":91,"column_start":5,"column_end":59}},{"value":"/ *extended grapheme clusters*;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":2933,"byte_end":2966,"line_start":92,"line_end":92,"column_start":5,"column_end":38}},{"value":"/ otherwise, the iterator is over the *legacy grapheme clusters*.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":2971,"byte_end":3038,"line_start":93,"line_end":93,"column_start":5,"column_end":72}},{"value":"/ [UAX#29](http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundaries)","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":3043,"byte_end":3121,"line_start":94,"line_end":94,"column_start":5,"column_end":83}},{"value":"/ recommends extended grapheme cluster boundaries for general processing.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":3126,"byte_end":3201,"line_start":95,"line_end":95,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":3206,"byte_end":3209,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":3214,"byte_end":3228,"line_start":97,"line_end":97,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":3233,"byte_end":3236,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":3241,"byte_end":3248,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/ # use self::unicode_segmentation::UnicodeSegmentation;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":3253,"byte_end":3311,"line_start":100,"line_end":100,"column_start":5,"column_end":63}},{"value":"/ let gr1 = UnicodeSegmentation::graphemes(\"a\\u{310}e\\u{301}o\\u{308}\\u{332}\", true)","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":3316,"byte_end":3401,"line_start":101,"line_end":101,"column_start":5,"column_end":90}},{"value":"/           .collect::<Vec<&str>>();","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":3406,"byte_end":3444,"line_start":102,"line_end":102,"column_start":5,"column_end":43}},{"value":"/ let b: &[_] = &[\"a\\u{310}\", \"e\\u{301}\", \"o\\u{308}\\u{332}\"];","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":3449,"byte_end":3512,"line_start":103,"line_end":103,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":3517,"byte_end":3520,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&gr1[..], b);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":3525,"byte_end":3553,"line_start":105,"line_end":105,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":3558,"byte_end":3561,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ let gr2 = UnicodeSegmentation::graphemes(\"a\\r\\nb🇷🇺🇸🇹\", true).collect::<Vec<&str>>();","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":3566,"byte_end":3666,"line_start":107,"line_end":107,"column_start":5,"column_end":93}},{"value":"/ let b: &[_] = &[\"a\", \"\\r\\n\", \"b\", \"🇷🇺\", \"🇸🇹\"];","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":3671,"byte_end":3733,"line_start":108,"line_end":108,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":3738,"byte_end":3741,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&gr2[..], b);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":3746,"byte_end":3774,"line_start":110,"line_end":110,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":3779,"byte_end":3786,"line_start":111,"line_end":111,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":4385,"byte_end":4401,"line_start":127,"line_end":127,"column_start":8,"column_end":24},"name":"grapheme_indices","qualname":"::UnicodeSegmentation::grapheme_indices","value":"pub fn grapheme_indices<'a>(&'a Self, bool) -> GraphemeIndices","parent":{"krate":0,"index":279},"children":[],"decl_id":null,"docs":" Returns an iterator over the grapheme clusters of `self` and their\n byte offsets. See `graphemes()` for more information.","sig":null,"attributes":[{"value":"/ Returns an iterator over the grapheme clusters of `self` and their","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":3860,"byte_end":3930,"line_start":114,"line_end":114,"column_start":5,"column_end":75}},{"value":"/ byte offsets. See `graphemes()` for more information.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":3935,"byte_end":3992,"line_start":115,"line_end":115,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":3997,"byte_end":4000,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":4005,"byte_end":4019,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":4024,"byte_end":4027,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":4032,"byte_end":4039,"line_start":119,"line_end":119,"column_start":5,"column_end":12}},{"value":"/ # use self::unicode_segmentation::UnicodeSegmentation;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":4044,"byte_end":4102,"line_start":120,"line_end":120,"column_start":5,"column_end":63}},{"value":"/ let gr_inds = UnicodeSegmentation::grapheme_indices(\"a̐éö̲\\r\\n\", true)","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":4107,"byte_end":4187,"line_start":121,"line_end":121,"column_start":5,"column_end":81}},{"value":"/               .collect::<Vec<(usize, &str)>>();","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":4192,"byte_end":4243,"line_start":122,"line_end":122,"column_start":5,"column_end":56}},{"value":"/ let b: &[_] = &[(0, \"a̐\"), (3, \"é\"), (6, \"ö̲\"), (11, \"\\r\\n\")];","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":4248,"byte_end":4320,"line_start":123,"line_end":123,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":4325,"byte_end":4328,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&gr_inds[..], b);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":4333,"byte_end":4365,"line_start":125,"line_end":125,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":4370,"byte_end":4377,"line_start":126,"line_end":126,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":5433,"byte_end":5446,"line_start":149,"line_end":149,"column_start":8,"column_end":21},"name":"unicode_words","qualname":"::UnicodeSegmentation::unicode_words","value":"pub fn unicode_words<'a>(&'a Self) -> UnicodeWords","parent":{"krate":0,"index":279},"children":[],"decl_id":null,"docs":" Returns an iterator over the words of `self`, separated on\n [UAX#29 word boundaries](http://www.unicode.org/reports/tr29/#Word_Boundaries).","sig":null,"attributes":[{"value":"/ Returns an iterator over the words of `self`, separated on","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":4464,"byte_end":4526,"line_start":129,"line_end":129,"column_start":5,"column_end":67}},{"value":"/ [UAX#29 word boundaries](http://www.unicode.org/reports/tr29/#Word_Boundaries).","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":4531,"byte_end":4614,"line_start":130,"line_end":130,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":4619,"byte_end":4622,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ Here, \"words\" are just those substrings which, after splitting on","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":4627,"byte_end":4696,"line_start":132,"line_end":132,"column_start":5,"column_end":74}},{"value":"/ UAX#29 word boundaries, contain any alphanumeric characters. That is, the","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":4701,"byte_end":4778,"line_start":133,"line_end":133,"column_start":5,"column_end":82}},{"value":"/ substring must contain at least one character with the","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":4783,"byte_end":4841,"line_start":134,"line_end":134,"column_start":5,"column_end":63}},{"value":"/ [Alphabetic](http://unicode.org/reports/tr44/#Alphabetic)","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":4846,"byte_end":4907,"line_start":135,"line_end":135,"column_start":5,"column_end":66}},{"value":"/ property, or with","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":4912,"byte_end":4933,"line_start":136,"line_end":136,"column_start":5,"column_end":26}},{"value":"/ [General_Category=Number](http://unicode.org/reports/tr44/#General_Category_Values).","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":4938,"byte_end":5026,"line_start":137,"line_end":137,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":5031,"byte_end":5034,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":5039,"byte_end":5052,"line_start":139,"line_end":139,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":5057,"byte_end":5060,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":5065,"byte_end":5072,"line_start":141,"line_end":141,"column_start":5,"column_end":12}},{"value":"/ # use self::unicode_segmentation::UnicodeSegmentation;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":5077,"byte_end":5135,"line_start":142,"line_end":142,"column_start":5,"column_end":63}},{"value":"/ let uws = \"The quick (\\\"brown\\\") fox can't jump 32.3 feet, right?\";","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":5140,"byte_end":5211,"line_start":143,"line_end":143,"column_start":5,"column_end":76}},{"value":"/ let uw1 = uws.unicode_words().collect::<Vec<&str>>();","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":5216,"byte_end":5273,"line_start":144,"line_end":144,"column_start":5,"column_end":62}},{"value":"/ let b: &[_] = &[\"The\", \"quick\", \"brown\", \"fox\", \"can't\", \"jump\", \"32.3\", \"feet\", \"right\"];","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":5278,"byte_end":5372,"line_start":145,"line_end":145,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":5377,"byte_end":5380,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&uw1[..], b);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":5385,"byte_end":5413,"line_start":147,"line_end":147,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":5418,"byte_end":5425,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":6579,"byte_end":6599,"line_start":173,"line_end":173,"column_start":8,"column_end":28},"name":"unicode_word_indices","qualname":"::UnicodeSegmentation::unicode_word_indices","value":"pub fn unicode_word_indices<'a>(&'a Self) -> UnicodeWordIndices","parent":{"krate":0,"index":279},"children":[],"decl_id":null,"docs":" Returns an iterator over the words of `self`, separated on\n [UAX#29 word boundaries](http://www.unicode.org/reports/tr29/#Word_Boundaries), and their\n offsets.","sig":null,"attributes":[{"value":"/ Returns an iterator over the words of `self`, separated on","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":5487,"byte_end":5549,"line_start":151,"line_end":151,"column_start":5,"column_end":67}},{"value":"/ [UAX#29 word boundaries](http://www.unicode.org/reports/tr29/#Word_Boundaries), and their","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":5554,"byte_end":5647,"line_start":152,"line_end":152,"column_start":5,"column_end":98}},{"value":"/ offsets.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":5652,"byte_end":5664,"line_start":153,"line_end":153,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":5669,"byte_end":5672,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ Here, \"words\" are just those substrings which, after splitting on","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":5677,"byte_end":5746,"line_start":155,"line_end":155,"column_start":5,"column_end":74}},{"value":"/ UAX#29 word boundaries, contain any alphanumeric characters. That is, the","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":5751,"byte_end":5828,"line_start":156,"line_end":156,"column_start":5,"column_end":82}},{"value":"/ substring must contain at least one character with the","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":5833,"byte_end":5891,"line_start":157,"line_end":157,"column_start":5,"column_end":63}},{"value":"/ [Alphabetic](http://unicode.org/reports/tr44/#Alphabetic)","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":5896,"byte_end":5957,"line_start":158,"line_end":158,"column_start":5,"column_end":66}},{"value":"/ property, or with","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":5962,"byte_end":5983,"line_start":159,"line_end":159,"column_start":5,"column_end":26}},{"value":"/ [General_Category=Number](http://unicode.org/reports/tr44/#General_Category_Values).","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":5988,"byte_end":6076,"line_start":160,"line_end":160,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":6081,"byte_end":6084,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":6089,"byte_end":6102,"line_start":162,"line_end":162,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":6107,"byte_end":6110,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":6115,"byte_end":6122,"line_start":164,"line_end":164,"column_start":5,"column_end":12}},{"value":"/ # use self::unicode_segmentation::UnicodeSegmentation;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":6127,"byte_end":6185,"line_start":165,"line_end":165,"column_start":5,"column_end":63}},{"value":"/ let uwis = \"The quick (\\\"brown\\\") fox can't jump 32.3 feet, right?\";","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":6190,"byte_end":6262,"line_start":166,"line_end":166,"column_start":5,"column_end":77}},{"value":"/ let uwi1 = uwis.unicode_word_indices().collect::<Vec<(usize, &str)>>();","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":6267,"byte_end":6342,"line_start":167,"line_end":167,"column_start":5,"column_end":80}},{"value":"/ let b: &[_] = &[(0, \"The\"), (4, \"quick\"), (12, \"brown\"), (20, \"fox\"), (24, \"can't\"),","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":6347,"byte_end":6435,"line_start":168,"line_end":168,"column_start":5,"column_end":93}},{"value":"/                 (30, \"jump\"), (35, \"32.3\"), (40, \"feet\"), (46, \"right\")];","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":6440,"byte_end":6517,"line_start":169,"line_end":169,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":6522,"byte_end":6525,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&uwi1[..], b);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":6530,"byte_end":6559,"line_start":171,"line_end":171,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":6564,"byte_end":6571,"line_start":172,"line_end":172,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":7261,"byte_end":7278,"line_start":189,"line_end":189,"column_start":8,"column_end":25},"name":"split_word_bounds","qualname":"::UnicodeSegmentation::split_word_bounds","value":"pub fn split_word_bounds<'a>(&'a Self) -> UWordBounds","parent":{"krate":0,"index":279},"children":[],"decl_id":null,"docs":" Returns an iterator over substrings of `self` separated on\n [UAX#29 word boundaries](http://www.unicode.org/reports/tr29/#Word_Boundaries).","sig":null,"attributes":[{"value":"/ Returns an iterator over substrings of `self` separated on","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":6646,"byte_end":6708,"line_start":175,"line_end":175,"column_start":5,"column_end":67}},{"value":"/ [UAX#29 word boundaries](http://www.unicode.org/reports/tr29/#Word_Boundaries).","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":6713,"byte_end":6796,"line_start":176,"line_end":176,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":6801,"byte_end":6804,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ The concatenation of the substrings returned by this function is just the original string.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":6809,"byte_end":6903,"line_start":178,"line_end":178,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":6908,"byte_end":6911,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":6916,"byte_end":6929,"line_start":180,"line_end":180,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":6934,"byte_end":6937,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":6942,"byte_end":6949,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ # use self::unicode_segmentation::UnicodeSegmentation;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":6954,"byte_end":7012,"line_start":183,"line_end":183,"column_start":5,"column_end":63}},{"value":"/ let swu1 = \"The quick (\\\"brown\\\")  fox\".split_word_bounds().collect::<Vec<&str>>();","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":7017,"byte_end":7104,"line_start":184,"line_end":184,"column_start":5,"column_end":92}},{"value":"/ let b: &[_] = &[\"The\", \" \", \"quick\", \" \", \"(\", \"\\\"\", \"brown\", \"\\\"\", \")\", \"  \", \"fox\"];","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":7109,"byte_end":7199,"line_start":185,"line_end":185,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":7204,"byte_end":7207,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&swu1[..], b);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":7212,"byte_end":7241,"line_start":187,"line_end":187,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":7246,"byte_end":7253,"line_start":188,"line_end":188,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":7899,"byte_end":7923,"line_start":204,"line_end":204,"column_start":8,"column_end":32},"name":"split_word_bound_indices","qualname":"::UnicodeSegmentation::split_word_bound_indices","value":"pub fn split_word_bound_indices<'a>(&'a Self) -> UWordBoundIndices","parent":{"krate":0,"index":279},"children":[],"decl_id":null,"docs":" Returns an iterator over substrings of `self`, split on UAX#29 word boundaries,\n and their offsets. See `split_word_bounds()` for more information.","sig":null,"attributes":[{"value":"/ Returns an iterator over substrings of `self`, split on UAX#29 word boundaries,","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":7318,"byte_end":7401,"line_start":191,"line_end":191,"column_start":5,"column_end":88}},{"value":"/ and their offsets. See `split_word_bounds()` for more information.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":7406,"byte_end":7476,"line_start":192,"line_end":192,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":7481,"byte_end":7484,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":7489,"byte_end":7502,"line_start":194,"line_end":194,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":7507,"byte_end":7510,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":7515,"byte_end":7522,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"/ # use self::unicode_segmentation::UnicodeSegmentation;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":7527,"byte_end":7585,"line_start":197,"line_end":197,"column_start":5,"column_end":63}},{"value":"/ let swi1 = \"Brr, it's 29.3°F!\".split_word_bound_indices().collect::<Vec<(usize, &str)>>();","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":7590,"byte_end":7685,"line_start":198,"line_end":198,"column_start":5,"column_end":99}},{"value":"/ let b: &[_] = &[(0, \"Brr\"), (3, \",\"), (4, \" \"), (5, \"it's\"), (9, \" \"), (10, \"29.3\"),","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":7690,"byte_end":7778,"line_start":199,"line_end":199,"column_start":5,"column_end":93}},{"value":"/                 (14, \"°\"), (16, \"F\"), (17, \"!\")];","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":7783,"byte_end":7837,"line_start":200,"line_end":200,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":7842,"byte_end":7845,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&swi1[..], b);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":7850,"byte_end":7879,"line_start":202,"line_end":202,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":7884,"byte_end":7891,"line_start":203,"line_end":203,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":8922,"byte_end":8939,"line_start":226,"line_end":226,"column_start":8,"column_end":25},"name":"unicode_sentences","qualname":"::UnicodeSegmentation::unicode_sentences","value":"pub fn unicode_sentences<'a>(&'a Self) -> UnicodeSentences","parent":{"krate":0,"index":279},"children":[],"decl_id":null,"docs":" Returns an iterator over substrings of `self` separated on\n [UAX#29 sentence boundaries](http://www.unicode.org/reports/tr29/#Sentence_Boundaries).","sig":null,"attributes":[{"value":"/ Returns an iterator over substrings of `self` separated on","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":7969,"byte_end":8031,"line_start":206,"line_end":206,"column_start":5,"column_end":67}},{"value":"/ [UAX#29 sentence boundaries](http://www.unicode.org/reports/tr29/#Sentence_Boundaries).","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":8036,"byte_end":8127,"line_start":207,"line_end":207,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":8132,"byte_end":8135,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ Here, \"sentences\" are just those substrings which, after splitting on","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":8140,"byte_end":8213,"line_start":209,"line_end":209,"column_start":5,"column_end":78}},{"value":"/ UAX#29 sentence boundaries, contain any alphanumeric characters. That is, the","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":8218,"byte_end":8299,"line_start":210,"line_end":210,"column_start":5,"column_end":86}},{"value":"/ substring must contain at least one character with the","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":8304,"byte_end":8362,"line_start":211,"line_end":211,"column_start":5,"column_end":63}},{"value":"/ [Alphabetic](http://unicode.org/reports/tr44/#Alphabetic)","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":8367,"byte_end":8428,"line_start":212,"line_end":212,"column_start":5,"column_end":66}},{"value":"/ property, or with","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":8433,"byte_end":8454,"line_start":213,"line_end":213,"column_start":5,"column_end":26}},{"value":"/ [General_Category=Number](http://unicode.org/reports/tr44/#General_Category_Values).","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":8459,"byte_end":8547,"line_start":214,"line_end":214,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":8552,"byte_end":8555,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":8560,"byte_end":8573,"line_start":216,"line_end":216,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":8578,"byte_end":8581,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":8586,"byte_end":8593,"line_start":218,"line_end":218,"column_start":5,"column_end":12}},{"value":"/ # use self::unicode_segmentation::UnicodeSegmentation;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":8598,"byte_end":8656,"line_start":219,"line_end":219,"column_start":5,"column_end":63}},{"value":"/ let uss = \"Mr. Fox jumped. [...] The dog was too lazy.\";","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":8661,"byte_end":8721,"line_start":220,"line_end":220,"column_start":5,"column_end":65}},{"value":"/ let us1 = uss.unicode_sentences().collect::<Vec<&str>>();","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":8726,"byte_end":8787,"line_start":221,"line_end":221,"column_start":5,"column_end":66}},{"value":"/ let b: &[_] = &[\"Mr. \", \"Fox jumped. \", \"The dog was too lazy.\"];","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":8792,"byte_end":8861,"line_start":222,"line_end":222,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":8866,"byte_end":8869,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&us1[..], b);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":8874,"byte_end":8902,"line_start":224,"line_end":224,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":8907,"byte_end":8914,"line_start":225,"line_end":225,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":9642,"byte_end":9663,"line_start":243,"line_end":243,"column_start":8,"column_end":29},"name":"split_sentence_bounds","qualname":"::UnicodeSegmentation::split_sentence_bounds","value":"pub fn split_sentence_bounds<'a>(&'a Self) -> USentenceBounds","parent":{"krate":0,"index":279},"children":[],"decl_id":null,"docs":" Returns an iterator over substrings of `self` separated on\n [UAX#29 sentence boundaries](http://www.unicode.org/reports/tr29/#Sentence_Boundaries).","sig":null,"attributes":[{"value":"/ Returns an iterator over substrings of `self` separated on","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":8984,"byte_end":9046,"line_start":228,"line_end":228,"column_start":5,"column_end":67}},{"value":"/ [UAX#29 sentence boundaries](http://www.unicode.org/reports/tr29/#Sentence_Boundaries).","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":9051,"byte_end":9142,"line_start":229,"line_end":229,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":9147,"byte_end":9150,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ The concatenation of the substrings returned by this function is just the original string.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":9155,"byte_end":9249,"line_start":231,"line_end":231,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":9254,"byte_end":9257,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":9262,"byte_end":9275,"line_start":233,"line_end":233,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":9280,"byte_end":9283,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":9288,"byte_end":9295,"line_start":235,"line_end":235,"column_start":5,"column_end":12}},{"value":"/ # use self::unicode_segmentation::UnicodeSegmentation;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":9300,"byte_end":9358,"line_start":236,"line_end":236,"column_start":5,"column_end":63}},{"value":"/ let ssbs = \"Mr. Fox jumped. [...] The dog was too lazy.\";","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":9363,"byte_end":9424,"line_start":237,"line_end":237,"column_start":5,"column_end":66}},{"value":"/ let ssb1 = ssbs.split_sentence_bounds().collect::<Vec<&str>>();","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":9429,"byte_end":9496,"line_start":238,"line_end":238,"column_start":5,"column_end":72}},{"value":"/ let b: &[_] = &[\"Mr. \", \"Fox jumped. \", \"[...] \", \"The dog was too lazy.\"];","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":9501,"byte_end":9580,"line_start":239,"line_end":239,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":9585,"byte_end":9588,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&ssb1[..], b);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":9593,"byte_end":9622,"line_start":241,"line_end":241,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":9627,"byte_end":9634,"line_start":242,"line_end":242,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":10328,"byte_end":10356,"line_start":259,"line_end":259,"column_start":8,"column_end":36},"name":"split_sentence_bound_indices","qualname":"::UnicodeSegmentation::split_sentence_bound_indices","value":"pub fn split_sentence_bound_indices<'a>(&'a Self) -> USentenceBoundIndices","parent":{"krate":0,"index":279},"children":[],"decl_id":null,"docs":" Returns an iterator over substrings of `self`, split on UAX#29 sentence boundaries,\n and their offsets. See `split_sentence_bounds()` for more information.","sig":null,"attributes":[{"value":"/ Returns an iterator over substrings of `self`, split on UAX#29 sentence boundaries,","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":9707,"byte_end":9794,"line_start":245,"line_end":245,"column_start":5,"column_end":92}},{"value":"/ and their offsets. See `split_sentence_bounds()` for more information.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":9799,"byte_end":9873,"line_start":246,"line_end":246,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":9878,"byte_end":9881,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":9886,"byte_end":9899,"line_start":248,"line_end":248,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":9904,"byte_end":9907,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":9912,"byte_end":9919,"line_start":250,"line_end":250,"column_start":5,"column_end":12}},{"value":"/ # use self::unicode_segmentation::UnicodeSegmentation;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":9924,"byte_end":9982,"line_start":251,"line_end":251,"column_start":5,"column_end":63}},{"value":"/ let ssis = \"Mr. Fox jumped. [...] The dog was too lazy.\";","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":9987,"byte_end":10048,"line_start":252,"line_end":252,"column_start":5,"column_end":66}},{"value":"/ let ssi1 = ssis.split_sentence_bound_indices().collect::<Vec<(usize, &str)>>();","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":10053,"byte_end":10136,"line_start":253,"line_end":253,"column_start":5,"column_end":88}},{"value":"/ let b: &[_] = &[(0, \"Mr. \"), (4, \"Fox jumped. \"), (16, \"[...] \"),","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":10141,"byte_end":10210,"line_start":254,"line_end":254,"column_start":5,"column_end":74}},{"value":"/                 (22, \"The dog was too lazy.\")];","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":10215,"byte_end":10266,"line_start":255,"line_end":255,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":10271,"byte_end":10274,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&ssi1[..], b);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":10279,"byte_end":10308,"line_start":257,"line_end":257,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/lib.rs","byte_start":10313,"byte_end":10320,"line_start":258,"line_end":258,"column_start":5,"column_end":12}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":12560,"byte_end":12575,"line_start":28,"line_end":28,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":13121,"byte_end":13136,"line_start":47,"line_end":47,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":13495,"byte_end":13510,"line_start":63,"line_end":63,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":14247,"byte_end":14256,"line_start":87,"line_end":87,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":14846,"byte_end":14855,"line_start":106,"line_end":106,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":15431,"byte_end":15440,"line_start":126,"line_end":126,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":21935,"byte_end":21949,"line_start":277,"line_end":277,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":102},{"krate":0,"index":106},{"krate":0,"index":110},{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/sentence.rs","byte_start":44150,"byte_end":44169,"line_start":53,"line_end":53,"column_start":10,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/sentence.rs","byte_start":48563,"byte_end":48577,"line_start":173,"line_end":173,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/sentence.rs","byte_start":55513,"byte_end":55529,"line_start":362,"line_end":362,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/sentence.rs","byte_start":55677,"byte_end":55692,"line_start":371,"line_end":371,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/sentence.rs","byte_start":56533,"byte_end":56554,"line_start":401,"line_end":401,"column_start":23,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":58186,"byte_end":58198,"line_start":32,"line_end":32,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":195},{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":58356,"byte_end":58368,"line_start":40,"line_end":40,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":59348,"byte_end":59366,"line_start":64,"line_end":64,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":205},{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":59542,"byte_end":59560,"line_start":72,"line_end":72,"column_start":34,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":60693,"byte_end":60710,"line_start":107,"line_end":107,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":61264,"byte_end":61281,"line_start":125,"line_end":125,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":61640,"byte_end":61657,"line_start":141,"line_end":141,"column_start":34,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":62651,"byte_end":62662,"line_start":189,"line_end":189,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":73046,"byte_end":73057,"line_start":428,"line_end":428,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":83057,"byte_end":83068,"line_start":671,"line_end":671,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":12560,"byte_end":12575,"line_start":28,"line_end":28,"column_start":10,"column_end":25},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":308},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":13121,"byte_end":13136,"line_start":47,"line_end":47,"column_start":23,"column_end":38},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":308},"to":{"krate":1,"index":7914}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":13495,"byte_end":13510,"line_start":63,"line_end":63,"column_start":34,"column_end":49},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":308},"to":{"krate":1,"index":7766}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":14247,"byte_end":14256,"line_start":87,"line_end":87,"column_start":10,"column_end":19},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":315},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":14846,"byte_end":14855,"line_start":106,"line_end":106,"column_start":23,"column_end":32},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":315},"to":{"krate":1,"index":7914}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":15431,"byte_end":15440,"line_start":126,"line_end":126,"column_start":34,"column_end":43},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":315},"to":{"krate":1,"index":7766}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/grapheme.rs","byte_start":21935,"byte_end":21949,"line_start":277,"line_end":277,"column_start":6,"column_end":20},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":347},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/sentence.rs","byte_start":44150,"byte_end":44169,"line_start":53,"line_end":53,"column_start":10,"column_end":29},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":700},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/sentence.rs","byte_start":48563,"byte_end":48577,"line_start":173,"line_end":173,"column_start":27,"column_end":41},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":714},"to":{"krate":1,"index":7914}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/sentence.rs","byte_start":55513,"byte_end":55529,"line_start":362,"line_end":362,"column_start":23,"column_end":39},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":722},"to":{"krate":1,"index":7914}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/sentence.rs","byte_start":55677,"byte_end":55692,"line_start":371,"line_end":371,"column_start":23,"column_end":38},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":728},"to":{"krate":1,"index":7914}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/sentence.rs","byte_start":56533,"byte_end":56554,"line_start":401,"line_end":401,"column_start":23,"column_end":44},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":735},"to":{"krate":1,"index":7914}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":58186,"byte_end":58198,"line_start":32,"line_end":32,"column_start":23,"column_end":35},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":190},"to":{"krate":1,"index":7914}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":58356,"byte_end":58368,"line_start":40,"line_end":40,"column_start":34,"column_end":46},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":190},"to":{"krate":1,"index":7766}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":59348,"byte_end":59366,"line_start":64,"line_end":64,"column_start":23,"column_end":41},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":200},"to":{"krate":1,"index":7914}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":59542,"byte_end":59560,"line_start":72,"line_end":72,"column_start":34,"column_end":52},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":200},"to":{"krate":1,"index":7766}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":60693,"byte_end":60710,"line_start":107,"line_end":107,"column_start":10,"column_end":27},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":750},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":61264,"byte_end":61281,"line_start":125,"line_end":125,"column_start":23,"column_end":40},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":750},"to":{"krate":1,"index":7914}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":61640,"byte_end":61657,"line_start":141,"line_end":141,"column_start":34,"column_end":51},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":750},"to":{"krate":1,"index":7766}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":62651,"byte_end":62662,"line_start":189,"line_end":189,"column_start":23,"column_end":34},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":742},"to":{"krate":1,"index":7914}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":73046,"byte_end":73057,"line_start":428,"line_end":428,"column_start":34,"column_end":45},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":742},"to":{"krate":1,"index":7766}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-segmentation-1.9.0/src/word.rs","byte_start":83057,"byte_end":83068,"line_start":671,"line_end":671,"column_start":10,"column_end":21},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":742},"to":{"krate":4294967295,"index":4294967295}}]}