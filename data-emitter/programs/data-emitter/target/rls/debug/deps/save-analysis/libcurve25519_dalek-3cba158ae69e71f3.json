{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1","program":"/Users/anoushkkharangate/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","curve25519_dalek","/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"default\"","--cfg","feature=\"std\"","--cfg","feature=\"u64_backend\"","-C","metadata=3cba158ae69e71f3","-C","extra-filename=-3cba158ae69e71f3","--out-dir","/Users/anoushkkharangate/Documents/solana-indexer/data-emitter/programs/data-emitter/target/rls/debug/deps","-L","dependency=/Users/anoushkkharangate/Documents/solana-indexer/data-emitter/programs/data-emitter/target/rls/debug/deps","--extern","byteorder=/Users/anoushkkharangate/Documents/solana-indexer/data-emitter/programs/data-emitter/target/rls/debug/deps/libbyteorder-1b7cc3d01a4753dc.rmeta","--extern","digest=/Users/anoushkkharangate/Documents/solana-indexer/data-emitter/programs/data-emitter/target/rls/debug/deps/libdigest-bab0d64b75e69c0e.rmeta","--extern","rand_core=/Users/anoushkkharangate/Documents/solana-indexer/data-emitter/programs/data-emitter/target/rls/debug/deps/librand_core-3c413d5ac01c8e44.rmeta","--extern","subtle=/Users/anoushkkharangate/Documents/solana-indexer/data-emitter/programs/data-emitter/target/rls/debug/deps/libsubtle-dbc15c106206d742.rmeta","--extern","zeroize=/Users/anoushkkharangate/Documents/solana-indexer/data-emitter/programs/data-emitter/target/rls/debug/deps/libzeroize-fcbbd918e9401c8e.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/anoushkkharangate/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/anoushkkharangate/Documents/solana-indexer/data-emitter/programs/data-emitter/target/rls/debug/deps/libcurve25519_dalek-3cba158ae69e71f3.rmeta"},"prelude":{"crate_id":{"name":"curve25519_dalek","disambiguator":[1280976407319588729,0]},"crate_root":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src","external_crates":[{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[16249227214258238047,0]}},{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[13791225915815425008,0]}},{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[455111089362928276,0]}},{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","num":4,"id":{"name":"std","disambiguator":[9602236740471282608,0]}},{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[740641686899810413,0]}},{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1452182208797737205,0]}},{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4474361821197688885,0]}},{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11146593528668201643,0]}},{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7026141623111916022,0]}},{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[11096207044195207047,0]}},{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[16946906222655600942,0]}},{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[9670608472714711915,0]}},{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[3075685271658393714,0]}},{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[7553277853646633394,0]}},{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[5387634511767759158,0]}},{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[10401181353817371068,0]}},{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[14296571408058143832,0]}},{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","num":18,"id":{"name":"byteorder","disambiguator":[11264697337213269120,0]}},{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","num":19,"id":{"name":"digest","disambiguator":[18419023390516030288,0]}},{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","num":20,"id":{"name":"generic_array","disambiguator":[3040381992235775930,0]}},{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","num":21,"id":{"name":"serde","disambiguator":[8502626073456475643,0]}},{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","num":22,"id":{"name":"serde_derive","disambiguator":[12970707402797361425,0]}},{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","num":23,"id":{"name":"typenum","disambiguator":[14585012641457782044,0]}},{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","num":24,"id":{"name":"rand_core","disambiguator":[15616784285161684708,0]}},{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","num":25,"id":{"name":"getrandom","disambiguator":[5271098120446090385,0]}},{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","num":26,"id":{"name":"cfg_if","disambiguator":[13037983282529128945,0]}},{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","num":27,"id":{"name":"libc","disambiguator":[3417963332719481947,0]}},{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","num":28,"id":{"name":"zeroize","disambiguator":[9509464579165991300,0]}},{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","num":29,"id":{"name":"subtle","disambiguator":[11822527493932057962,0]}}],"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":316,"byte_end":14018,"line_start":12,"line_end":320,"column_start":1,"column_end":23}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/constants.rs","byte_start":213379,"byte_end":213380,"line_start":42,"line_end":42,"column_start":42,"column_end":43},"alias_span":null,"name":"*","value":"MINUS_ONE, ONE_MINUS_EDWARDS_D_SQUARED, LFACTOR, AFFINE_ODD_MULTIPLES_OF_BASEPOINT, EDWARDS_D, RR, L, MONTGOMERY_A, EIGHT_TORSION, ED25519_BASEPOINT_TABLE, EDWARDS_D_MINUS_ONE_SQUARED, APLUS2_OVER_FOUR, SQRT_AD_MINUS_ONE, R, ED25519_BASEPOINT_POINT, INVSQRT_A_MINUS_D, SQRT_M1, EDWARDS_D2, MONTGOMERY_A_NEG","parent":{"krate":0,"index":867}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":316,"byte_end":14018,"line_start":12,"line_end":320,"column_start":1,"column_end":23},"name":"","qualname":"::","value":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":17},{"krate":0,"index":269},{"krate":0,"index":363},{"krate":0,"index":626},{"krate":0,"index":867},{"krate":0,"index":893},{"krate":0,"index":949},{"krate":0,"index":992},{"krate":0,"index":1486},{"krate":0,"index":1490}],"decl_id":null,"docs":" # curve25519-dalek [![](https://img.shields.io/crates/v/curve25519-dalek.svg)](https://crates.io/crates/curve25519-dalek) [![](https://img.shields.io/badge/dynamic/json.svg?label=docs&uri=https%3A%2F%2Fcrates.io%2Fapi%2Fv1%2Fcrates%2Fcurve25519-dalek%2Fversions&query=%24.versions%5B0%5D.num&colorB=4F74A6)](https://doc.dalek.rs) [![](https://travis-ci.org/dalek-cryptography/curve25519-dalek.svg?branch=master)](https://travis-ci.org/dalek-cryptography/curve25519-dalek)","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":316,"byte_end":326,"line_start":12,"line_end":12,"column_start":1,"column_end":11}},{"value":"deny(missing_docs)","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":536,"byte_end":558,"line_start":18,"line_end":18,"column_start":1,"column_end":23}},{"value":"/ # curve25519-dalek [![](https://img.shields.io/crates/v/curve25519-dalek.svg)](https://crates.io/crates/curve25519-dalek) [![](https://img.shields.io/badge/dynamic/json.svg?label=docs&uri=https%3A%2F%2Fcrates.io%2Fapi%2Fv1%2Fcrates%2Fcurve25519-dalek%2Fversions&query=%24.versions%5B0%5D.num&colorB=4F74A6)](https://doc.dalek.rs) [![](https://travis-ci.org/dalek-cryptography/curve25519-dalek.svg?branch=master)](https://travis-ci.org/dalek-cryptography/curve25519-dalek)","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":703,"byte_end":1178,"line_start":23,"line_end":23,"column_start":1,"column_end":476}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":1179,"byte_end":1182,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ <img","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":1183,"byte_end":1191,"line_start":25,"line_end":25,"column_start":1,"column_end":9}},{"value":"/  width=\"33%\"","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":1192,"byte_end":1208,"line_start":26,"line_end":26,"column_start":1,"column_end":17}},{"value":"/  align=\"right\"","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":1209,"byte_end":1227,"line_start":27,"line_end":27,"column_start":1,"column_end":19}},{"value":"/  src=\"https://doc.dalek.rs/assets/dalek-logo-clear.png\"/>","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":1228,"byte_end":1289,"line_start":28,"line_end":28,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":1290,"byte_end":1293,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ **A pure-Rust implementation of group operations on Ristretto and Curve25519.**","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":1294,"byte_end":1377,"line_start":30,"line_end":30,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":1378,"byte_end":1381,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ `curve25519-dalek` is a library providing group operations on the Edwards and","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":1382,"byte_end":1463,"line_start":32,"line_end":32,"column_start":1,"column_end":82}},{"value":"/ Montgomery forms of Curve25519, and on the prime-order Ristretto group.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":1464,"byte_end":1539,"line_start":33,"line_end":33,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":1540,"byte_end":1543,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ `curve25519-dalek` is not intended to provide implementations of any particular","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":1544,"byte_end":1627,"line_start":35,"line_end":35,"column_start":1,"column_end":84}},{"value":"/ crypto protocol.  Rather, implementations of those protocols (such as","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":1628,"byte_end":1701,"line_start":36,"line_end":36,"column_start":1,"column_end":74}},{"value":"/ [`x25519-dalek`][x25519-dalek] and [`ed25519-dalek`][ed25519-dalek]) should use","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":1702,"byte_end":1785,"line_start":37,"line_end":37,"column_start":1,"column_end":84}},{"value":"/ `curve25519-dalek` as a library.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":1786,"byte_end":1822,"line_start":38,"line_end":38,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":1823,"byte_end":1826,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ `curve25519-dalek` is intended to provide a clean and safe _mid-level_ API for use","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":1827,"byte_end":1913,"line_start":40,"line_end":40,"column_start":1,"column_end":87}},{"value":"/ implementing a wide range of ECC-based crypto protocols, such as key agreement,","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":1914,"byte_end":1997,"line_start":41,"line_end":41,"column_start":1,"column_end":84}},{"value":"/ signatures, anonymous credentials, rangeproofs, and zero-knowledge proof","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":1998,"byte_end":2074,"line_start":42,"line_end":42,"column_start":1,"column_end":77}},{"value":"/ systems.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":2075,"byte_end":2087,"line_start":43,"line_end":43,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":2088,"byte_end":2091,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ In particular, `curve25519-dalek` implements Ristretto, which constructs a","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":2092,"byte_end":2170,"line_start":45,"line_end":45,"column_start":1,"column_end":79}},{"value":"/ prime-order group from a non-prime-order Edwards curve.  This provides the","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":2171,"byte_end":2249,"line_start":46,"line_end":46,"column_start":1,"column_end":79}},{"value":"/ speed and safety benefits of Edwards curve arithmetic, without the pitfalls of","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":2250,"byte_end":2332,"line_start":47,"line_end":47,"column_start":1,"column_end":83}},{"value":"/ cofactor-related abstraction mismatches.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":2333,"byte_end":2377,"line_start":48,"line_end":48,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":2378,"byte_end":2381,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ # Documentation","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":2382,"byte_end":2401,"line_start":50,"line_end":50,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":2402,"byte_end":2405,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ The semver-stable, public-facing `curve25519-dalek` API is documented","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":2406,"byte_end":2479,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/ [here][docs-external].  In addition, the unstable internal implementation","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":2480,"byte_end":2557,"line_start":53,"line_end":53,"column_start":1,"column_end":78}},{"value":"/ details are documented [here][docs-internal].","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":2558,"byte_end":2607,"line_start":54,"line_end":54,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":2608,"byte_end":2611,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The `curve25519-dalek` documentation requires a custom HTML header to include","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":2612,"byte_end":2693,"line_start":56,"line_end":56,"column_start":1,"column_end":82}},{"value":"/ KaTeX for math support. Unfortunately `cargo doc` does not currently support","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":2694,"byte_end":2774,"line_start":57,"line_end":57,"column_start":1,"column_end":81}},{"value":"/ this, but docs can be built using","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":2775,"byte_end":2812,"line_start":58,"line_end":58,"column_start":1,"column_end":38}},{"value":"/ ```sh","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":2813,"byte_end":2822,"line_start":59,"line_end":59,"column_start":1,"column_end":10}},{"value":"/ make doc","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":2823,"byte_end":2835,"line_start":60,"line_end":60,"column_start":1,"column_end":13}},{"value":"/ make doc-internal","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":2836,"byte_end":2857,"line_start":61,"line_end":61,"column_start":1,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":2858,"byte_end":2865,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":2866,"byte_end":2869,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ # Use","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":2870,"byte_end":2879,"line_start":64,"line_end":64,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":2880,"byte_end":2883,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ To import `curve25519-dalek`, add the following to the dependencies section of","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":2884,"byte_end":2966,"line_start":66,"line_end":66,"column_start":1,"column_end":83}},{"value":"/ your project's `Cargo.toml`:","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":2967,"byte_end":2999,"line_start":67,"line_end":67,"column_start":1,"column_end":33}},{"value":"/ ```toml","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":3000,"byte_end":3011,"line_start":68,"line_end":68,"column_start":1,"column_end":12}},{"value":"/ curve25519-dalek = \"3\"","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":3012,"byte_end":3038,"line_start":69,"line_end":69,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":3039,"byte_end":3046,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":3047,"byte_end":3050,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ The sole breaking change in the `3.x` series was an update to the `digest`","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":3051,"byte_end":3129,"line_start":72,"line_end":72,"column_start":1,"column_end":79}},{"value":"/ version, and in terms of non-breaking changes it includes:","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":3130,"byte_end":3192,"line_start":73,"line_end":73,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":3193,"byte_end":3196,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ * support for using `alloc` instead of `std` on stable Rust,","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":3197,"byte_end":3261,"line_start":75,"line_end":75,"column_start":1,"column_end":65}},{"value":"/ * the Elligator2 encoding for Edwards points,","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":3262,"byte_end":3311,"line_start":76,"line_end":76,"column_start":1,"column_end":50}},{"value":"/ * a fix to use `packed_simd2`,","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":3312,"byte_end":3346,"line_start":77,"line_end":77,"column_start":1,"column_end":35}},{"value":"/ * various documentation fixes and improvements,","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":3347,"byte_end":3398,"line_start":78,"line_end":78,"column_start":1,"column_end":52}},{"value":"/ * support for configurably-sized, precomputed lookup tables for basepoint scalar","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":3399,"byte_end":3483,"line_start":79,"line_end":79,"column_start":1,"column_end":85}},{"value":"/   multiplication,","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":3484,"byte_end":3505,"line_start":80,"line_end":80,"column_start":1,"column_end":22}},{"value":"/ * two new formally-verified field arithmetic backends which use the Fiat Crypto","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":3506,"byte_end":3589,"line_start":81,"line_end":81,"column_start":1,"column_end":84}},{"value":"/   Rust code, which is generated from proofs of functional correctness checked by","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":3590,"byte_end":3674,"line_start":82,"line_end":82,"column_start":1,"column_end":85}},{"value":"/   the Coq theorem proving system, and","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":3675,"byte_end":3716,"line_start":83,"line_end":83,"column_start":1,"column_end":42}},{"value":"/ * support for explicitly calling the `zeroize` traits for all point types.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":3717,"byte_end":3795,"line_start":84,"line_end":84,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":3796,"byte_end":3799,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ The `2.x` series has API almost entirely unchanged from the `1.x` series,","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":3800,"byte_end":3877,"line_start":86,"line_end":86,"column_start":1,"column_end":78}},{"value":"/ except that:","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":3878,"byte_end":3894,"line_start":87,"line_end":87,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":3895,"byte_end":3898,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ * an error in the data modeling for the (optional) `serde` feature was","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":3899,"byte_end":3973,"line_start":89,"line_end":89,"column_start":1,"column_end":75}},{"value":"/   corrected, so that when the `2.x`-series `serde` implementation is used","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":3974,"byte_end":4051,"line_start":90,"line_end":90,"column_start":1,"column_end":78}},{"value":"/   with `serde-bincode`, the derived serialization matches the usual X/Ed25519","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":4052,"byte_end":4133,"line_start":91,"line_end":91,"column_start":1,"column_end":82}},{"value":"/   formats;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":4134,"byte_end":4148,"line_start":92,"line_end":92,"column_start":1,"column_end":15}},{"value":"/ * the `rand` version was updated.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":4149,"byte_end":4186,"line_start":93,"line_end":93,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":4187,"byte_end":4190,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ See `CHANGELOG.md` for more details.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":4191,"byte_end":4231,"line_start":95,"line_end":95,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":4232,"byte_end":4235,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ # Backends and Features","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":4236,"byte_end":4263,"line_start":97,"line_end":97,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":4264,"byte_end":4267,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ The `nightly` feature enables features available only when using a Rust nightly","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":4268,"byte_end":4351,"line_start":99,"line_end":99,"column_start":1,"column_end":84}},{"value":"/ compiler.  In particular, it is required for rendering documentation and for","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":4352,"byte_end":4432,"line_start":100,"line_end":100,"column_start":1,"column_end":81}},{"value":"/ the SIMD backends.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":4433,"byte_end":4455,"line_start":101,"line_end":101,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":4456,"byte_end":4459,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ Curve arithmetic is implemented using one of the following backends:","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":4460,"byte_end":4532,"line_start":103,"line_end":103,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":4533,"byte_end":4536,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ * a `u32` backend using serial formulas and `u64` products;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":4537,"byte_end":4600,"line_start":105,"line_end":105,"column_start":1,"column_end":64}},{"value":"/ * a `u64` backend using serial formulas and `u128` products;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":4601,"byte_end":4665,"line_start":106,"line_end":106,"column_start":1,"column_end":65}},{"value":"/ * an `avx2` backend using [parallel formulas][parallel_doc] and `avx2` instructions (sets speed records);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":4666,"byte_end":4775,"line_start":107,"line_end":107,"column_start":1,"column_end":110}},{"value":"/ * an `ifma` backend using [parallel formulas][parallel_doc] and `ifma` instructions (sets speed records);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":4776,"byte_end":4885,"line_start":108,"line_end":108,"column_start":1,"column_end":110}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":4886,"byte_end":4889,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ By default the `u64` backend is selected.  To select a specific backend, use:","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":4890,"byte_end":4971,"line_start":110,"line_end":110,"column_start":1,"column_end":82}},{"value":"/ ```sh","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":4972,"byte_end":4981,"line_start":111,"line_end":111,"column_start":1,"column_end":10}},{"value":"/ cargo build --no-default-features --features \"std u32_backend\"","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":4982,"byte_end":5048,"line_start":112,"line_end":112,"column_start":1,"column_end":67}},{"value":"/ cargo build --no-default-features --features \"std u64_backend\"","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":5049,"byte_end":5115,"line_start":113,"line_end":113,"column_start":1,"column_end":67}},{"value":"/ # Requires nightly, RUSTFLAGS=\"-C target_feature=+avx2\" to use avx2","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":5116,"byte_end":5187,"line_start":114,"line_end":114,"column_start":1,"column_end":72}},{"value":"/ cargo build --no-default-features --features \"std simd_backend\"","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":5188,"byte_end":5255,"line_start":115,"line_end":115,"column_start":1,"column_end":68}},{"value":"/ # Requires nightly, RUSTFLAGS=\"-C target_feature=+avx512ifma\" to use ifma","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":5256,"byte_end":5333,"line_start":116,"line_end":116,"column_start":1,"column_end":78}},{"value":"/ cargo build --no-default-features --features \"std simd_backend\"","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":5334,"byte_end":5401,"line_start":117,"line_end":117,"column_start":1,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":5402,"byte_end":5409,"line_start":118,"line_end":118,"column_start":1,"column_end":8}},{"value":"/ Crates using `curve25519-dalek` can either select a backend on behalf of their","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":5410,"byte_end":5492,"line_start":119,"line_end":119,"column_start":1,"column_end":83}},{"value":"/ users, or expose feature flags that control the `curve25519-dalek` backend.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":5493,"byte_end":5572,"line_start":120,"line_end":120,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":5573,"byte_end":5576,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ The `std` feature is enabled by default, but it can be disabled for no-`std`","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":5577,"byte_end":5657,"line_start":122,"line_end":122,"column_start":1,"column_end":81}},{"value":"/ builds using `--no-default-features`.  Note that this requires explicitly","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":5658,"byte_end":5735,"line_start":123,"line_end":123,"column_start":1,"column_end":78}},{"value":"/ selecting an arithmetic backend using one of the `_backend` features.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":5736,"byte_end":5809,"line_start":124,"line_end":124,"column_start":1,"column_end":74}},{"value":"/ If no backend is selected, compilation will fail.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":5810,"byte_end":5863,"line_start":125,"line_end":125,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":5864,"byte_end":5867,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":5868,"byte_end":5880,"line_start":127,"line_end":127,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":5881,"byte_end":5884,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The `curve25519-dalek` types are designed to make illegal states","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":5885,"byte_end":5953,"line_start":129,"line_end":129,"column_start":1,"column_end":69}},{"value":"/ unrepresentable.  For example, any instance of an `EdwardsPoint` is","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":5954,"byte_end":6025,"line_start":130,"line_end":130,"column_start":1,"column_end":72}},{"value":"/ guaranteed to hold a point on the Edwards curve, and any instance of a","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":6026,"byte_end":6100,"line_start":131,"line_end":131,"column_start":1,"column_end":75}},{"value":"/ `RistrettoPoint` is guaranteed to hold a valid point in the Ristretto","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":6101,"byte_end":6174,"line_start":132,"line_end":132,"column_start":1,"column_end":74}},{"value":"/ group.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":6175,"byte_end":6185,"line_start":133,"line_end":133,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":6186,"byte_end":6189,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ All operations are implemented using constant-time logic (no","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":6190,"byte_end":6254,"line_start":135,"line_end":135,"column_start":1,"column_end":65}},{"value":"/ secret-dependent branches, no secret-dependent memory accesses),","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":6255,"byte_end":6323,"line_start":136,"line_end":136,"column_start":1,"column_end":69}},{"value":"/ unless specifically marked as being variable-time code.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":6324,"byte_end":6383,"line_start":137,"line_end":137,"column_start":1,"column_end":60}},{"value":"/ We believe that our constant-time logic is lowered to constant-time","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":6384,"byte_end":6455,"line_start":138,"line_end":138,"column_start":1,"column_end":72}},{"value":"/ assembly, at least on `x86_64` targets.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":6456,"byte_end":6499,"line_start":139,"line_end":139,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":6500,"byte_end":6503,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ As an additional guard against possible future compiler optimizations,","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":6504,"byte_end":6578,"line_start":141,"line_end":141,"column_start":1,"column_end":75}},{"value":"/ the `subtle` crate places an optimization barrier before every","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":6579,"byte_end":6645,"line_start":142,"line_end":142,"column_start":1,"column_end":67}},{"value":"/ conditional move or assignment.  More details can be found in [the","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":6646,"byte_end":6716,"line_start":143,"line_end":143,"column_start":1,"column_end":71}},{"value":"/ documentation for the `subtle` crate][subtle_doc].","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":6717,"byte_end":6771,"line_start":144,"line_end":144,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":6772,"byte_end":6775,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ Some functionality (e.g., multiscalar multiplication or batch","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":6776,"byte_end":6841,"line_start":146,"line_end":146,"column_start":1,"column_end":66}},{"value":"/ inversion) requires heap allocation for temporary buffers.  All","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":6842,"byte_end":6909,"line_start":147,"line_end":147,"column_start":1,"column_end":68}},{"value":"/ heap-allocated buffers of potentially secret data are explicitly","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":6910,"byte_end":6978,"line_start":148,"line_end":148,"column_start":1,"column_end":69}},{"value":"/ zeroed before release.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":6979,"byte_end":7005,"line_start":149,"line_end":149,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":7006,"byte_end":7009,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ However, we do not attempt to zero stack data, for two reasons.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":7010,"byte_end":7077,"line_start":151,"line_end":151,"column_start":1,"column_end":68}},{"value":"/ First, it's not possible to do so correctly: we don't have control","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":7078,"byte_end":7148,"line_start":152,"line_end":152,"column_start":1,"column_end":71}},{"value":"/ over stack allocations, so there's no way to know how much data to","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":7149,"byte_end":7219,"line_start":153,"line_end":153,"column_start":1,"column_end":71}},{"value":"/ wipe.  Second, because `curve25519-dalek` provides a mid-level API,","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":7220,"byte_end":7291,"line_start":154,"line_end":154,"column_start":1,"column_end":72}},{"value":"/ the correct place to start zeroing stack data is likely not at the","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":7292,"byte_end":7362,"line_start":155,"line_end":155,"column_start":1,"column_end":71}},{"value":"/ entrypoints of `curve25519-dalek` functions, but at the entrypoints of","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":7363,"byte_end":7437,"line_start":156,"line_end":156,"column_start":1,"column_end":75}},{"value":"/ functions in other crates.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":7438,"byte_end":7468,"line_start":157,"line_end":157,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":7469,"byte_end":7472,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ The implementation is memory-safe, and contains no significant","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":7473,"byte_end":7539,"line_start":159,"line_end":159,"column_start":1,"column_end":67}},{"value":"/ `unsafe` code.  The SIMD backend uses `unsafe` internally to call SIMD","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":7540,"byte_end":7614,"line_start":160,"line_end":160,"column_start":1,"column_end":75}},{"value":"/ intrinsics.  These are marked `unsafe` only because invoking them on an","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":7615,"byte_end":7690,"line_start":161,"line_end":161,"column_start":1,"column_end":76}},{"value":"/ inappropriate CPU would cause `SIGILL`, but the entire backend is only","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":7691,"byte_end":7765,"line_start":162,"line_end":162,"column_start":1,"column_end":75}},{"value":"/ compiled with appropriate `target_feature`s, so this cannot occur.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":7766,"byte_end":7836,"line_start":163,"line_end":163,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":7837,"byte_end":7840,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ # Performance","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":7841,"byte_end":7858,"line_start":165,"line_end":165,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":7859,"byte_end":7862,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ Benchmarks are run using [`criterion.rs`][criterion]:","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":7863,"byte_end":7920,"line_start":167,"line_end":167,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":7921,"byte_end":7924,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ ```sh","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":7925,"byte_end":7934,"line_start":169,"line_end":169,"column_start":1,"column_end":10}},{"value":"/ cargo bench --no-default-features --features \"std u32_backend\"","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":7935,"byte_end":8001,"line_start":170,"line_end":170,"column_start":1,"column_end":67}},{"value":"/ cargo bench --no-default-features --features \"std u64_backend\"","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":8002,"byte_end":8068,"line_start":171,"line_end":171,"column_start":1,"column_end":67}},{"value":"/ # Uses avx2 or ifma only if compiled for an appropriate target.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":8069,"byte_end":8136,"line_start":172,"line_end":172,"column_start":1,"column_end":68}},{"value":"/ export RUSTFLAGS=\"-C target_cpu=native\"","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":8137,"byte_end":8180,"line_start":173,"line_end":173,"column_start":1,"column_end":44}},{"value":"/ cargo bench --no-default-features --features \"std simd_backend\"","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":8181,"byte_end":8248,"line_start":174,"line_end":174,"column_start":1,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":8249,"byte_end":8256,"line_start":175,"line_end":175,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":8257,"byte_end":8260,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ Performance is a secondary goal behind correctness, safety, and","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":8261,"byte_end":8328,"line_start":177,"line_end":177,"column_start":1,"column_end":68}},{"value":"/ clarity, but we aim to be competitive with other implementations.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":8329,"byte_end":8398,"line_start":178,"line_end":178,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":8399,"byte_end":8402,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ # FFI","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":8403,"byte_end":8412,"line_start":180,"line_end":180,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":8413,"byte_end":8416,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ Unfortunately, we have no plans to add FFI to `curve25519-dalek` directly.  The","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":8417,"byte_end":8500,"line_start":182,"line_end":182,"column_start":1,"column_end":84}},{"value":"/ reason is that we use Rust features to provide an API that maintains safety","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":8501,"byte_end":8580,"line_start":183,"line_end":183,"column_start":1,"column_end":80}},{"value":"/ invariants, which are not possible to maintain across an FFI boundary.  For","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":8581,"byte_end":8660,"line_start":184,"line_end":184,"column_start":1,"column_end":80}},{"value":"/ instance, as described in the _Safety_ section above, invalid points are","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":8661,"byte_end":8737,"line_start":185,"line_end":185,"column_start":1,"column_end":77}},{"value":"/ impossible to construct, and this would not be the case if we exposed point","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":8738,"byte_end":8817,"line_start":186,"line_end":186,"column_start":1,"column_end":80}},{"value":"/ operations over FFI.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":8818,"byte_end":8842,"line_start":187,"line_end":187,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":8843,"byte_end":8846,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ However, `curve25519-dalek` is designed as a *mid-level* API, aimed at","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":8847,"byte_end":8921,"line_start":189,"line_end":189,"column_start":1,"column_end":75}},{"value":"/ implementing other, higher-level primitives.  Instead of providing FFI at the","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":8922,"byte_end":9003,"line_start":190,"line_end":190,"column_start":1,"column_end":82}},{"value":"/ mid-level, our suggestion is to implement the higher-level primitive (a","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":9004,"byte_end":9079,"line_start":191,"line_end":191,"column_start":1,"column_end":76}},{"value":"/ signature, PAKE, ZKP, etc) in Rust, using `curve25519-dalek` as a dependency,","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":9080,"byte_end":9161,"line_start":192,"line_end":192,"column_start":1,"column_end":82}},{"value":"/ and have that crate provide a minimal, byte-buffer-oriented FFI specific to","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":9162,"byte_end":9241,"line_start":193,"line_end":193,"column_start":1,"column_end":80}},{"value":"/ that primitive.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":9242,"byte_end":9261,"line_start":194,"line_end":194,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":9262,"byte_end":9265,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ # Contributing","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":9266,"byte_end":9284,"line_start":196,"line_end":196,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":9285,"byte_end":9288,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ Please see [CONTRIBUTING.md][contributing].","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":9289,"byte_end":9336,"line_start":198,"line_end":198,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":9337,"byte_end":9340,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ Patches and pull requests should be make against the `develop`","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":9341,"byte_end":9407,"line_start":200,"line_end":200,"column_start":1,"column_end":67}},{"value":"/ branch, **not** `main`.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":9408,"byte_end":9435,"line_start":201,"line_end":201,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":9436,"byte_end":9439,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ # About","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":9440,"byte_end":9451,"line_start":203,"line_end":203,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":9452,"byte_end":9455,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ **SPOILER ALERT:** *The Twelfth Doctor's first encounter with the Daleks is in","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":9456,"byte_end":9538,"line_start":205,"line_end":205,"column_start":1,"column_end":83}},{"value":"/ his second full episode, \"Into the Dalek\". A beleaguered ship of the \"Combined","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":9539,"byte_end":9621,"line_start":206,"line_end":206,"column_start":1,"column_end":83}},{"value":"/ Galactic Resistance\" has discovered a broken Dalek that has turned \"good\",","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":9622,"byte_end":9700,"line_start":207,"line_end":207,"column_start":1,"column_end":79}},{"value":"/ desiring to kill all other Daleks. The Doctor, Clara and a team of soldiers","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":9701,"byte_end":9780,"line_start":208,"line_end":208,"column_start":1,"column_end":80}},{"value":"/ are miniaturized and enter the Dalek, which the Doctor names Rusty. They","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":9781,"byte_end":9857,"line_start":209,"line_end":209,"column_start":1,"column_end":77}},{"value":"/ repair the damage, but accidentally restore it to its original nature, causing","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":9858,"byte_end":9940,"line_start":210,"line_end":210,"column_start":1,"column_end":83}},{"value":"/ it to go on the rampage and alert the Dalek fleet to the whereabouts of the","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":9941,"byte_end":10020,"line_start":211,"line_end":211,"column_start":1,"column_end":80}},{"value":"/ rebel ship. However, the Doctor manages to return Rusty to its previous state","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":10021,"byte_end":10102,"line_start":212,"line_end":212,"column_start":1,"column_end":82}},{"value":"/ by linking his mind with the Dalek's: Rusty shares the Doctor's view of the","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":10103,"byte_end":10182,"line_start":213,"line_end":213,"column_start":1,"column_end":80}},{"value":"/ universe's beauty, but also his deep hatred of the Daleks. Rusty destroys the","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":10183,"byte_end":10264,"line_start":214,"line_end":214,"column_start":1,"column_end":82}},{"value":"/ other Daleks and departs the ship, determined to track down and bring an end","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":10265,"byte_end":10345,"line_start":215,"line_end":215,"column_start":1,"column_end":81}},{"value":"/ to the Dalek race.*","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":10346,"byte_end":10369,"line_start":216,"line_end":216,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":10370,"byte_end":10373,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ `curve25519-dalek` is authored by Isis Agora Lovecruft and Henry de Valence.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":10374,"byte_end":10454,"line_start":218,"line_end":218,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":10455,"byte_end":10458,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ Portions of this library were originally a port of [Adam Langley's","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":10459,"byte_end":10529,"line_start":220,"line_end":220,"column_start":1,"column_end":71}},{"value":"/ Golang ed25519 library](https://!github.com/agl/ed25519), which was in","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":10530,"byte_end":10604,"line_start":221,"line_end":221,"column_start":1,"column_end":75}},{"value":"/ turn a port of the reference `ref10` implementation.  Most of this code,","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":10605,"byte_end":10681,"line_start":222,"line_end":222,"column_start":1,"column_end":77}},{"value":"/ including the 32-bit field arithmetic, has since been rewritten.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":10682,"byte_end":10750,"line_start":223,"line_end":223,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":10751,"byte_end":10754,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ The fast `u32` and `u64` scalar arithmetic was implemented by Andrew Moon, and","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":10755,"byte_end":10837,"line_start":225,"line_end":225,"column_start":1,"column_end":83}},{"value":"/ the addition chain for scalar inversion was provided by Brian Smith.  The","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":10838,"byte_end":10915,"line_start":226,"line_end":226,"column_start":1,"column_end":78}},{"value":"/ optimised batch inversion was contributed by Sean Bowe and Daira Hopwood.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":10916,"byte_end":10993,"line_start":227,"line_end":227,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":10994,"byte_end":10997,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ The `no_std` and `zeroize` support was contributed by Tony Arcieri.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":10998,"byte_end":11069,"line_start":229,"line_end":229,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":11070,"byte_end":11073,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ The formally verified backends, `fiat_u32_backend` and `fiat_u64_backend`, which","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":11074,"byte_end":11158,"line_start":231,"line_end":231,"column_start":1,"column_end":85}},{"value":"/ integrate with the Rust generated by the","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":11159,"byte_end":11203,"line_start":232,"line_end":232,"column_start":1,"column_end":45}},{"value":"/ [Fiat Crypto project](https://github.com/mit-plv/fiat-crypto) were contributed","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":11204,"byte_end":11286,"line_start":233,"line_end":233,"column_start":1,"column_end":83}},{"value":"/ by François Garillot.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":11287,"byte_end":11313,"line_start":234,"line_end":234,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":11314,"byte_end":11317,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ Thanks also to Ashley Hauck, Lucas Salibian, Manish Goregaokar, Jack Grigg,","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":11318,"byte_end":11397,"line_start":236,"line_end":236,"column_start":1,"column_end":80}},{"value":"/ Pratyush Mishra, Michael Rosenberg, and countless others for their","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":11398,"byte_end":11468,"line_start":237,"line_end":237,"column_start":1,"column_end":71}},{"value":"/ contributions.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":11469,"byte_end":11487,"line_start":238,"line_end":238,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":11488,"byte_end":11491,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/ [ed25519-dalek]: https://github.com/dalek-cryptography/ed25519-dalek","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":11492,"byte_end":11564,"line_start":240,"line_end":240,"column_start":1,"column_end":73}},{"value":"/ [x25519-dalek]: https://github.com/dalek-cryptography/x25519-dalek","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":11565,"byte_end":11635,"line_start":241,"line_end":241,"column_start":1,"column_end":71}},{"value":"/ [contributing]: https://github.com/dalek-cryptography/curve25519-dalek/blob/master/CONTRIBUTING.md","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":11636,"byte_end":11738,"line_start":242,"line_end":242,"column_start":1,"column_end":103}},{"value":"/ [docs-external]: https://doc.dalek.rs/curve25519_dalek/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":11739,"byte_end":11798,"line_start":243,"line_end":243,"column_start":1,"column_end":60}},{"value":"/ [docs-internal]: https://doc-internal.dalek.rs/curve25519_dalek/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":11799,"byte_end":11867,"line_start":244,"line_end":244,"column_start":1,"column_end":69}},{"value":"/ [criterion]: https://github.com/japaric/criterion.rs","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":11868,"byte_end":11924,"line_start":245,"line_end":245,"column_start":1,"column_end":57}},{"value":"/ [parallel_doc]: https://doc-internal.dalek.rs/curve25519_dalek/backend/vector/avx2/index.html","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":11925,"byte_end":12022,"line_start":246,"line_end":246,"column_start":1,"column_end":98}},{"value":"/ [subtle_doc]: https://doc.dalek.rs/subtle/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":12023,"byte_end":12069,"line_start":247,"line_end":247,"column_start":1,"column_end":47}}]},{"kind":"Mod","id":{"krate":0,"index":17},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"scalar","qualname":"::scalar","value":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","parent":null,"children":[{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":76},{"krate":0,"index":79},{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":88},{"krate":0,"index":91},{"krate":0,"index":94},{"krate":0,"index":97},{"krate":0,"index":1552},{"krate":0,"index":1555},{"krate":0,"index":1556},{"krate":0,"index":1559},{"krate":0,"index":98},{"krate":0,"index":107},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":114},{"krate":0,"index":117},{"krate":0,"index":1562},{"krate":0,"index":120},{"krate":0,"index":1564},{"krate":0,"index":1568},{"krate":0,"index":1572},{"krate":0,"index":125},{"krate":0,"index":1575},{"krate":0,"index":128},{"krate":0,"index":1577},{"krate":0,"index":1581},{"krate":0,"index":1585},{"krate":0,"index":133},{"krate":0,"index":1588},{"krate":0,"index":136},{"krate":0,"index":1590},{"krate":0,"index":1594},{"krate":0,"index":1598},{"krate":0,"index":141},{"krate":0,"index":145},{"krate":0,"index":149},{"krate":0,"index":152},{"krate":0,"index":157},{"krate":0,"index":162},{"krate":0,"index":164},{"krate":0,"index":167},{"krate":0,"index":177},{"krate":0,"index":187},{"krate":0,"index":197},{"krate":0,"index":207},{"krate":0,"index":209},{"krate":0,"index":264}],"decl_id":null,"docs":" Arithmetic on scalars (integers mod the group order).","sig":null,"attributes":[{"value":"/ Arithmetic on scalars (integers mod the group order).","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":17616,"byte_end":17673,"line_start":14,"line_end":14,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":17674,"byte_end":17677,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Both the Ristretto group and the Ed25519 basepoint have prime order","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":17678,"byte_end":17749,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/ \\\\( \\ell = 2\\^{252} + 27742317777372353535851937790883648493 \\\\).","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":17750,"byte_end":17819,"line_start":17,"line_end":17,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":17820,"byte_end":17823,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This code is intended to be useful with both the Ristretto group","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":17824,"byte_end":17892,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/ (where everything is done modulo \\\\( \\ell \\\\)), and the X/Ed25519","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":17893,"byte_end":17962,"line_start":20,"line_end":20,"column_start":1,"column_end":70}},{"value":"/ setting, which mandates specific bit-twiddles that are not","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":17963,"byte_end":18025,"line_start":21,"line_end":21,"column_start":1,"column_end":63}},{"value":"/ well-defined modulo \\\\( \\ell \\\\).","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":18026,"byte_end":18063,"line_start":22,"line_end":22,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":18064,"byte_end":18067,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ All arithmetic on `Scalars` is done modulo \\\\( \\ell \\\\).","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":18068,"byte_end":18128,"line_start":24,"line_end":24,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":18129,"byte_end":18132,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Constructing a scalar","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":18133,"byte_end":18160,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":18161,"byte_end":18164,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ To create a [`Scalar`](struct.Scalar.html) from a supposedly canonical encoding, use","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":18165,"byte_end":18253,"line_start":28,"line_end":28,"column_start":1,"column_end":89}},{"value":"/ [`Scalar::from_canonical_bytes`](struct.Scalar.html#method.from_canonical_bytes).","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":18254,"byte_end":18339,"line_start":29,"line_end":29,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":18340,"byte_end":18343,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This function does input validation, ensuring that the input bytes","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":18344,"byte_end":18414,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/ are the canonical encoding of a `Scalar`.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":18415,"byte_end":18460,"line_start":32,"line_end":32,"column_start":1,"column_end":46}},{"value":"/ If they are, we'll get","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":18461,"byte_end":18487,"line_start":33,"line_end":33,"column_start":1,"column_end":27}},{"value":"/ `Some(Scalar)` in return:","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":18488,"byte_end":18517,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":18518,"byte_end":18521,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":18522,"byte_end":18529,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/ use curve25519_dalek::scalar::Scalar;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":18530,"byte_end":18571,"line_start":37,"line_end":37,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":18572,"byte_end":18575,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ let one_as_bytes: [u8; 32] = Scalar::one().to_bytes();","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":18576,"byte_end":18634,"line_start":39,"line_end":39,"column_start":1,"column_end":59}},{"value":"/ let a: Option<Scalar> = Scalar::from_canonical_bytes(one_as_bytes);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":18635,"byte_end":18706,"line_start":40,"line_end":40,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":18707,"byte_end":18710,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ assert!(a.is_some());","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":18711,"byte_end":18736,"line_start":42,"line_end":42,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":18737,"byte_end":18744,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":18745,"byte_end":18748,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ However, if we give it bytes representing a scalar larger than \\\\( \\ell \\\\)","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":18749,"byte_end":18828,"line_start":45,"line_end":45,"column_start":1,"column_end":80}},{"value":"/ (in this case, \\\\( \\ell + 2 \\\\)), we'll get `None` back:","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":18829,"byte_end":18889,"line_start":46,"line_end":46,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":18890,"byte_end":18893,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":18894,"byte_end":18901,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/ use curve25519_dalek::scalar::Scalar;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":18902,"byte_end":18943,"line_start":49,"line_end":49,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":18944,"byte_end":18947,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ let l_plus_two_bytes: [u8; 32] = [","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":18948,"byte_end":18986,"line_start":51,"line_end":51,"column_start":1,"column_end":39}},{"value":"/    0xef, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58,","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":18987,"byte_end":19041,"line_start":52,"line_end":52,"column_start":1,"column_end":55}},{"value":"/    0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14,","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":19042,"byte_end":19096,"line_start":53,"line_end":53,"column_start":1,"column_end":55}},{"value":"/    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":19097,"byte_end":19151,"line_start":54,"line_end":54,"column_start":1,"column_end":55}},{"value":"/    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10,","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":19152,"byte_end":19206,"line_start":55,"line_end":55,"column_start":1,"column_end":55}},{"value":"/ ];","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":19207,"byte_end":19213,"line_start":56,"line_end":56,"column_start":1,"column_end":7}},{"value":"/ let a: Option<Scalar> = Scalar::from_canonical_bytes(l_plus_two_bytes);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":19214,"byte_end":19289,"line_start":57,"line_end":57,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":19290,"byte_end":19293,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ assert!(a.is_none());","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":19294,"byte_end":19319,"line_start":59,"line_end":59,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":19320,"byte_end":19327,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":19328,"byte_end":19331,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ Another way to create a `Scalar` is by reducing a \\\\(256\\\\)-bit integer mod","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":19332,"byte_end":19411,"line_start":62,"line_end":62,"column_start":1,"column_end":80}},{"value":"/ \\\\( \\ell \\\\), for which one may use the","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":19412,"byte_end":19455,"line_start":63,"line_end":63,"column_start":1,"column_end":44}},{"value":"/ [`Scalar::from_bytes_mod_order`](struct.Scalar.html#method.from_bytes_mod_order)","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":19456,"byte_end":19540,"line_start":64,"line_end":64,"column_start":1,"column_end":85}},{"value":"/ method.  In the case of the second example above, this would reduce the","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":19541,"byte_end":19616,"line_start":65,"line_end":65,"column_start":1,"column_end":76}},{"value":"/ resultant scalar \\\\( \\mod \\ell \\\\), producing \\\\( 2 \\\\):","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":19617,"byte_end":19677,"line_start":66,"line_end":66,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":19678,"byte_end":19681,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":19682,"byte_end":19689,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/ use curve25519_dalek::scalar::Scalar;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":19690,"byte_end":19731,"line_start":69,"line_end":69,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":19732,"byte_end":19735,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ let l_plus_two_bytes: [u8; 32] = [","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":19736,"byte_end":19774,"line_start":71,"line_end":71,"column_start":1,"column_end":39}},{"value":"/    0xef, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58,","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":19775,"byte_end":19829,"line_start":72,"line_end":72,"column_start":1,"column_end":55}},{"value":"/    0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14,","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":19830,"byte_end":19884,"line_start":73,"line_end":73,"column_start":1,"column_end":55}},{"value":"/    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":19885,"byte_end":19939,"line_start":74,"line_end":74,"column_start":1,"column_end":55}},{"value":"/    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10,","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":19940,"byte_end":19994,"line_start":75,"line_end":75,"column_start":1,"column_end":55}},{"value":"/ ];","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":19995,"byte_end":20001,"line_start":76,"line_end":76,"column_start":1,"column_end":7}},{"value":"/ let a: Scalar = Scalar::from_bytes_mod_order(l_plus_two_bytes);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":20002,"byte_end":20069,"line_start":77,"line_end":77,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":20070,"byte_end":20073,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ let two: Scalar = Scalar::one() + Scalar::one();","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":20074,"byte_end":20126,"line_start":79,"line_end":79,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":20127,"byte_end":20130,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ assert!(a == two);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":20131,"byte_end":20153,"line_start":81,"line_end":81,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":20154,"byte_end":20161,"line_start":82,"line_end":82,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":20162,"byte_end":20165,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ There is also a constructor that reduces a \\\\(512\\\\)-bit integer,","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":20166,"byte_end":20235,"line_start":84,"line_end":84,"column_start":1,"column_end":70}},{"value":"/ [`Scalar::from_bytes_mod_order_wide`](struct.Scalar.html#method.from_bytes_mod_order_wide).","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":20236,"byte_end":20331,"line_start":85,"line_end":85,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":20332,"byte_end":20335,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ To construct a `Scalar` as the hash of some input data, use","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":20336,"byte_end":20399,"line_start":87,"line_end":87,"column_start":1,"column_end":64}},{"value":"/ [`Scalar::hash_from_bytes`](struct.Scalar.html#method.hash_from_bytes),","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":20400,"byte_end":20475,"line_start":88,"line_end":88,"column_start":1,"column_end":76}},{"value":"/ which takes a buffer, or","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":20476,"byte_end":20504,"line_start":89,"line_end":89,"column_start":1,"column_end":29}},{"value":"/ [`Scalar::from_hash`](struct.Scalar.html#method.from_hash),","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":20505,"byte_end":20568,"line_start":90,"line_end":90,"column_start":1,"column_end":64}},{"value":"/ which allows an IUF API.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":20569,"byte_end":20597,"line_start":91,"line_end":91,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":20598,"byte_end":20601,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":20602,"byte_end":20609,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/ # extern crate curve25519_dalek;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":20610,"byte_end":20646,"line_start":94,"line_end":94,"column_start":1,"column_end":37}},{"value":"/ # extern crate sha2;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":20647,"byte_end":20671,"line_start":95,"line_end":95,"column_start":1,"column_end":25}},{"value":"/ #","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":20672,"byte_end":20677,"line_start":96,"line_end":96,"column_start":1,"column_end":6}},{"value":"/ # fn main() {","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":20678,"byte_end":20695,"line_start":97,"line_end":97,"column_start":1,"column_end":18}},{"value":"/ use sha2::{Digest, Sha512};","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":20696,"byte_end":20727,"line_start":98,"line_end":98,"column_start":1,"column_end":32}},{"value":"/ use curve25519_dalek::scalar::Scalar;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":20728,"byte_end":20769,"line_start":99,"line_end":99,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":20770,"byte_end":20773,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ // Hashing a single byte slice","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":20774,"byte_end":20808,"line_start":101,"line_end":101,"column_start":1,"column_end":35}},{"value":"/ let a = Scalar::hash_from_bytes::<Sha512>(b\"Abolish ICE\");","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":20809,"byte_end":20871,"line_start":102,"line_end":102,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":20872,"byte_end":20875,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ // Streaming data into a hash object","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":20876,"byte_end":20916,"line_start":104,"line_end":104,"column_start":1,"column_end":41}},{"value":"/ let mut hasher = Sha512::default();","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":20917,"byte_end":20956,"line_start":105,"line_end":105,"column_start":1,"column_end":40}},{"value":"/ hasher.update(b\"Abolish \");","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":20957,"byte_end":20988,"line_start":106,"line_end":106,"column_start":1,"column_end":32}},{"value":"/ hasher.update(b\"ICE\");","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":20989,"byte_end":21015,"line_start":107,"line_end":107,"column_start":1,"column_end":27}},{"value":"/ let a2 = Scalar::from_hash(hasher);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":21016,"byte_end":21055,"line_start":108,"line_end":108,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":21056,"byte_end":21059,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(a, a2);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":21060,"byte_end":21082,"line_start":110,"line_end":110,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":21083,"byte_end":21090,"line_start":111,"line_end":111,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":21091,"byte_end":21098,"line_start":112,"line_end":112,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":21099,"byte_end":21102,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ Finally, to create a `Scalar` with a specific bit-pattern","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":21103,"byte_end":21164,"line_start":114,"line_end":114,"column_start":1,"column_end":62}},{"value":"/ (e.g., for compatibility with X/Ed25519","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":21165,"byte_end":21208,"line_start":115,"line_end":115,"column_start":1,"column_end":44}},{"value":"/ [\"clamping\"](https://github.com/isislovecruft/ed25519-dalek/blob/f790bd2ce/src/ed25519.rs#L349)),","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":21209,"byte_end":21310,"line_start":116,"line_end":116,"column_start":1,"column_end":102}},{"value":"/ use [`Scalar::from_bits`](struct.Scalar.html#method.from_bits). This","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":21311,"byte_end":21383,"line_start":117,"line_end":117,"column_start":1,"column_end":73}},{"value":"/ constructs a scalar with exactly the bit pattern given, without any","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":21384,"byte_end":21455,"line_start":118,"line_end":118,"column_start":1,"column_end":72}},{"value":"/ assurances as to reduction modulo the group order:","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":21456,"byte_end":21510,"line_start":119,"line_end":119,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":21511,"byte_end":21514,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":21515,"byte_end":21522,"line_start":121,"line_end":121,"column_start":1,"column_end":8}},{"value":"/ use curve25519_dalek::scalar::Scalar;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":21523,"byte_end":21564,"line_start":122,"line_end":122,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":21565,"byte_end":21568,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ let l_plus_two_bytes: [u8; 32] = [","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":21569,"byte_end":21607,"line_start":124,"line_end":124,"column_start":1,"column_end":39}},{"value":"/    0xef, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58,","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":21608,"byte_end":21662,"line_start":125,"line_end":125,"column_start":1,"column_end":55}},{"value":"/    0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14,","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":21663,"byte_end":21717,"line_start":126,"line_end":126,"column_start":1,"column_end":55}},{"value":"/    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":21718,"byte_end":21772,"line_start":127,"line_end":127,"column_start":1,"column_end":55}},{"value":"/    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10,","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":21773,"byte_end":21827,"line_start":128,"line_end":128,"column_start":1,"column_end":55}},{"value":"/ ];","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":21828,"byte_end":21834,"line_start":129,"line_end":129,"column_start":1,"column_end":7}},{"value":"/ let a: Scalar = Scalar::from_bits(l_plus_two_bytes);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":21835,"byte_end":21891,"line_start":130,"line_end":130,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":21892,"byte_end":21895,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ let two: Scalar = Scalar::one() + Scalar::one();","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":21896,"byte_end":21948,"line_start":132,"line_end":132,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":21949,"byte_end":21952,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ assert!(a != two);              // the scalar is not reduced (mod l)…","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":21953,"byte_end":22028,"line_start":134,"line_end":134,"column_start":1,"column_end":74}},{"value":"/ assert!(! a.is_canonical());    // …and therefore is not canonical.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":22029,"byte_end":22102,"line_start":135,"line_end":135,"column_start":1,"column_end":72}},{"value":"/ assert!(a.reduce() == two);     // if we were to reduce it manually, it would be.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":22103,"byte_end":22188,"line_start":136,"line_end":136,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":22189,"byte_end":22196,"line_start":137,"line_end":137,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":22197,"byte_end":22200,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ The resulting `Scalar` has exactly the specified bit pattern,","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":22201,"byte_end":22266,"line_start":139,"line_end":139,"column_start":1,"column_end":66}},{"value":"/ **except for the highest bit, which will be set to 0**.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":22267,"byte_end":22326,"line_start":140,"line_end":140,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1552},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":23941,"byte_end":23947,"line_start":196,"line_end":196,"column_start":12,"column_end":18},"name":"Scalar","qualname":"::scalar::Scalar","value":"Scalar {  }","parent":null,"children":[{"krate":0,"index":1553}],"decl_id":null,"docs":" The `Scalar` struct holds an integer \\\\(s < 2\\^{255} \\\\) which\n represents an element of \\\\(\\mathbb Z / \\ell\\\\).\n","sig":null,"attributes":[{"value":"/ The `Scalar` struct holds an integer \\\\(s < 2\\^{255} \\\\) which","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":23781,"byte_end":23847,"line_start":193,"line_end":193,"column_start":1,"column_end":67}},{"value":"/ represents an element of \\\\(\\mathbb Z / \\ell\\\\).","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":23848,"byte_end":23900,"line_start":194,"line_end":194,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":24715,"byte_end":24735,"line_start":215,"line_end":215,"column_start":12,"column_end":32},"name":"from_bytes_mod_order","qualname":"<Scalar>::from_bytes_mod_order","value":"pub fn from_bytes_mod_order([u8; ]) -> Scalar","parent":null,"children":[],"decl_id":null,"docs":" Construct a `Scalar` by reducing a 256-bit little-endian integer\n modulo the group order \\\\( \\ell \\\\).\n","sig":null,"attributes":[{"value":"/ Construct a `Scalar` by reducing a 256-bit little-endian integer","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":24590,"byte_end":24658,"line_start":213,"line_end":213,"column_start":5,"column_end":73}},{"value":"/ modulo the group order \\\\( \\ell \\\\).","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":24663,"byte_end":24703,"line_start":214,"line_end":214,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":25176,"byte_end":25201,"line_start":228,"line_end":228,"column_start":12,"column_end":37},"name":"from_bytes_mod_order_wide","qualname":"<Scalar>::from_bytes_mod_order_wide","value":"pub fn from_bytes_mod_order_wide(&[u8; ]) -> Scalar","parent":null,"children":[],"decl_id":null,"docs":" Construct a `Scalar` by reducing a 512-bit little-endian integer\n modulo the group order \\\\( \\ell \\\\).\n","sig":null,"attributes":[{"value":"/ Construct a `Scalar` by reducing a 512-bit little-endian integer","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":25051,"byte_end":25119,"line_start":226,"line_end":226,"column_start":5,"column_end":73}},{"value":"/ modulo the group order \\\\( \\ell \\\\).","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":25124,"byte_end":25164,"line_start":227,"line_end":227,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":25613,"byte_end":25633,"line_start":239,"line_end":239,"column_start":12,"column_end":32},"name":"from_canonical_bytes","qualname":"<Scalar>::from_canonical_bytes","value":"pub fn from_canonical_bytes([u8; ]) -> Option<Scalar>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to construct a `Scalar` from a canonical byte representation.","sig":null,"attributes":[{"value":"/ Attempt to construct a `Scalar` from a canonical byte representation.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":25297,"byte_end":25370,"line_start":232,"line_end":232,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":25375,"byte_end":25378,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":25383,"byte_end":25395,"line_start":234,"line_end":234,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":25400,"byte_end":25403,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ - `Some(s)`, where `s` is the `Scalar` corresponding to `bytes`,","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":25408,"byte_end":25476,"line_start":236,"line_end":236,"column_start":5,"column_end":73}},{"value":"/   if `bytes` is a canonical byte representation;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":25481,"byte_end":25533,"line_start":237,"line_end":237,"column_start":5,"column_end":57}},{"value":"/ - `None` if `bytes` is not a canonical byte representation.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":25538,"byte_end":25601,"line_start":238,"line_end":238,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":26189,"byte_end":26198,"line_start":256,"line_end":256,"column_start":18,"column_end":27},"name":"from_bits","qualname":"<Scalar>::from_bits","value":"pub const fn from_bits([u8; ]) -> Scalar","parent":null,"children":[],"decl_id":null,"docs":" Construct a `Scalar` from the low 255 bits of a 256-bit integer.","sig":null,"attributes":[{"value":"/ Construct a `Scalar` from the low 255 bits of a 256-bit integer.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":25941,"byte_end":26009,"line_start":251,"line_end":251,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":26014,"byte_end":26017,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ This function is intended for applications like X25519 which","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":26022,"byte_end":26086,"line_start":253,"line_end":253,"column_start":5,"column_end":69}},{"value":"/ require specific bit-patterns when performing scalar","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":26091,"byte_end":26147,"line_start":254,"line_end":254,"column_start":5,"column_end":61}},{"value":"/ multiplication.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":26152,"byte_end":26171,"line_start":255,"line_end":255,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":34789,"byte_end":34795,"line_start":568,"line_end":568,"column_start":12,"column_end":18},"name":"random","qualname":"<Scalar>::random","value":"pub fn random<R: RngCore + CryptoRng>(&mut R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a `Scalar` chosen uniformly at random using a user-provided RNG.","sig":null,"attributes":[{"value":"/ Return a `Scalar` chosen uniformly at random using a user-provided RNG.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":34175,"byte_end":34250,"line_start":544,"line_end":544,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":34255,"byte_end":34258,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ # Inputs","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":34263,"byte_end":34275,"line_start":546,"line_end":546,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":34280,"byte_end":34283,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ * `rng`: any RNG which implements the `RngCore + CryptoRng` interface.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":34288,"byte_end":34362,"line_start":548,"line_end":548,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":34367,"byte_end":34370,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":34375,"byte_end":34388,"line_start":550,"line_end":550,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":34393,"byte_end":34396,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ A random scalar within ℤ/lℤ.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":34401,"byte_end":34437,"line_start":552,"line_end":552,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":34442,"byte_end":34445,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":34450,"byte_end":34463,"line_start":554,"line_end":554,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":34468,"byte_end":34471,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":34476,"byte_end":34483,"line_start":556,"line_end":556,"column_start":5,"column_end":12}},{"value":"/ extern crate rand_core;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":34488,"byte_end":34515,"line_start":557,"line_end":557,"column_start":5,"column_end":32}},{"value":"/ # extern crate curve25519_dalek;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":34520,"byte_end":34556,"line_start":558,"line_end":558,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":34561,"byte_end":34566,"line_start":559,"line_end":559,"column_start":5,"column_end":10}},{"value":"/ # fn main() {","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":34571,"byte_end":34588,"line_start":560,"line_end":560,"column_start":5,"column_end":22}},{"value":"/ use curve25519_dalek::scalar::Scalar;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":34593,"byte_end":34634,"line_start":561,"line_end":561,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":34639,"byte_end":34642,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ use rand_core::OsRng;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":34647,"byte_end":34672,"line_start":563,"line_end":563,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":34677,"byte_end":34680,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ let mut csprng = OsRng;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":34685,"byte_end":34712,"line_start":565,"line_end":565,"column_start":5,"column_end":32}},{"value":"/ let a: Scalar = Scalar::random(&mut csprng);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":34717,"byte_end":34765,"line_start":566,"line_end":566,"column_start":5,"column_end":53}},{"value":"/ # }","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":34770,"byte_end":34777,"line_start":567,"line_end":567,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":35787,"byte_end":35802,"line_start":597,"line_end":597,"column_start":12,"column_end":27},"name":"hash_from_bytes","qualname":"<Scalar>::hash_from_bytes","value":"pub fn hash_from_bytes<D>(&[u8]) -> Scalar where D: Digest<OutputSize = U64> +\nDefault","parent":null,"children":[],"decl_id":null,"docs":" Hash a slice of bytes into a scalar.","sig":null,"attributes":[{"value":"/ Hash a slice of bytes into a scalar.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":34996,"byte_end":35036,"line_start":574,"line_end":574,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":35041,"byte_end":35044,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ Takes a type parameter `D`, which is any `Digest` producing 64","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":35049,"byte_end":35115,"line_start":576,"line_end":576,"column_start":5,"column_end":71}},{"value":"/ bytes (512 bits) of output.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":35120,"byte_end":35151,"line_start":577,"line_end":577,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":35156,"byte_end":35159,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ Convenience wrapper around `from_hash`.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":35164,"byte_end":35207,"line_start":579,"line_end":579,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":35212,"byte_end":35215,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":35220,"byte_end":35233,"line_start":581,"line_end":581,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":35238,"byte_end":35241,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":35246,"byte_end":35253,"line_start":583,"line_end":583,"column_start":5,"column_end":12}},{"value":"/ # extern crate curve25519_dalek;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":35258,"byte_end":35294,"line_start":584,"line_end":584,"column_start":5,"column_end":41}},{"value":"/ # use curve25519_dalek::scalar::Scalar;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":35299,"byte_end":35342,"line_start":585,"line_end":585,"column_start":5,"column_end":48}},{"value":"/ extern crate sha2;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":35347,"byte_end":35369,"line_start":586,"line_end":586,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":35374,"byte_end":35377,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ use sha2::Sha512;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":35382,"byte_end":35403,"line_start":588,"line_end":588,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":35408,"byte_end":35411,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ # // Need fn main() here in comment so the doctest compiles","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":35416,"byte_end":35479,"line_start":590,"line_end":590,"column_start":5,"column_end":68}},{"value":"/ # // See https://doc.rust-lang.org/book/documentation.html#documentation-as-tests","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":35484,"byte_end":35569,"line_start":591,"line_end":591,"column_start":5,"column_end":90}},{"value":"/ # fn main() {","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":35574,"byte_end":35591,"line_start":592,"line_end":592,"column_start":5,"column_end":22}},{"value":"/ let msg = \"To really appreciate architecture, you may even need to commit a murder\";","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":35596,"byte_end":35684,"line_start":593,"line_end":593,"column_start":5,"column_end":93}},{"value":"/ let s = Scalar::hash_from_bytes::<Sha512>(msg.as_bytes());","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":35689,"byte_end":35751,"line_start":594,"line_end":594,"column_start":5,"column_end":67}},{"value":"/ # }","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":35756,"byte_end":35763,"line_start":595,"line_end":595,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":35768,"byte_end":35775,"line_start":596,"line_end":596,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":37486,"byte_end":37495,"line_start":639,"line_end":639,"column_start":12,"column_end":21},"name":"from_hash","qualname":"<Scalar>::from_hash","value":"pub fn from_hash<D>(D) -> Scalar where D: Digest<OutputSize = U64>","parent":null,"children":[],"decl_id":null,"docs":" Construct a scalar from an existing `Digest` instance.","sig":null,"attributes":[{"value":"/ Construct a scalar from an existing `Digest` instance.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":35996,"byte_end":36054,"line_start":605,"line_end":605,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":36059,"byte_end":36062,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ Use this instead of `hash_from_bytes` if it is more convenient","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":36067,"byte_end":36133,"line_start":607,"line_end":607,"column_start":5,"column_end":71}},{"value":"/ to stream data into the `Digest` than to pass a single byte","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":36138,"byte_end":36201,"line_start":608,"line_end":608,"column_start":5,"column_end":68}},{"value":"/ slice.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":36206,"byte_end":36216,"line_start":609,"line_end":609,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":36221,"byte_end":36224,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":36229,"byte_end":36242,"line_start":611,"line_end":611,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":36247,"byte_end":36250,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":36255,"byte_end":36262,"line_start":613,"line_end":613,"column_start":5,"column_end":12}},{"value":"/ # extern crate curve25519_dalek;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":36267,"byte_end":36303,"line_start":614,"line_end":614,"column_start":5,"column_end":41}},{"value":"/ # use curve25519_dalek::scalar::Scalar;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":36308,"byte_end":36351,"line_start":615,"line_end":615,"column_start":5,"column_end":48}},{"value":"/ extern crate sha2;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":36356,"byte_end":36378,"line_start":616,"line_end":616,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":36383,"byte_end":36386,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ use sha2::Digest;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":36391,"byte_end":36412,"line_start":618,"line_end":618,"column_start":5,"column_end":26}},{"value":"/ use sha2::Sha512;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":36417,"byte_end":36438,"line_start":619,"line_end":619,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":36443,"byte_end":36446,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":36451,"byte_end":36468,"line_start":621,"line_end":621,"column_start":5,"column_end":22}},{"value":"/ let mut h = Sha512::new()","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":36473,"byte_end":36502,"line_start":622,"line_end":622,"column_start":5,"column_end":34}},{"value":"/     .chain(\"To really appreciate architecture, you may even need to commit a murder.\")","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":36507,"byte_end":36597,"line_start":623,"line_end":623,"column_start":5,"column_end":95}},{"value":"/     .chain(\"While the programs used for The Manhattan Transcripts are of the most extreme\")","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":36602,"byte_end":36697,"line_start":624,"line_end":624,"column_start":5,"column_end":100}},{"value":"/     .chain(\"nature, they also parallel the most common formula plot: the archetype of\")","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":36702,"byte_end":36793,"line_start":625,"line_end":625,"column_start":5,"column_end":96}},{"value":"/     .chain(\"murder. Other phantasms were occasionally used to underline the fact that\")","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":36798,"byte_end":36889,"line_start":626,"line_end":626,"column_start":5,"column_end":96}},{"value":"/     .chain(\"perhaps all architecture, rather than being about functional standards, is\")","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":36894,"byte_end":36986,"line_start":627,"line_end":627,"column_start":5,"column_end":97}},{"value":"/     .chain(\"about love and death.\");","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":36991,"byte_end":37031,"line_start":628,"line_end":628,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":37036,"byte_end":37039,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ let s = Scalar::from_hash(h);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":37044,"byte_end":37077,"line_start":630,"line_end":630,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":37082,"byte_end":37085,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", s.to_bytes());","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":37090,"byte_end":37125,"line_start":632,"line_end":632,"column_start":5,"column_end":40}},{"value":"/ assert!(s == Scalar::from_bits([ 21,  88, 208, 252,  63, 122, 210, 152,","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":37130,"byte_end":37205,"line_start":633,"line_end":633,"column_start":5,"column_end":80}},{"value":"/                                 154,  38,  15,  23,  16, 167,  80, 150,","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":37210,"byte_end":37285,"line_start":634,"line_end":634,"column_start":5,"column_end":80}},{"value":"/                                 192, 221,  77, 226,  62,  25, 224, 148,","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":37290,"byte_end":37365,"line_start":635,"line_end":635,"column_start":5,"column_end":80}},{"value":"/                                 239,  48, 176,  10, 185,  69, 168,  11, ]));","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":37370,"byte_end":37450,"line_start":636,"line_end":636,"column_start":5,"column_end":85}},{"value":"/ # }","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":37455,"byte_end":37462,"line_start":637,"line_end":637,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":37467,"byte_end":37474,"line_start":638,"line_end":638,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":38002,"byte_end":38010,"line_start":658,"line_end":658,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<Scalar>::to_bytes","value":"pub fn to_bytes(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Convert this `Scalar` to its underlying sequence of bytes.","sig":null,"attributes":[{"value":"/ Convert this `Scalar` to its underlying sequence of bytes.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":37724,"byte_end":37786,"line_start":647,"line_end":647,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":37791,"byte_end":37794,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":37799,"byte_end":37812,"line_start":649,"line_end":649,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":37817,"byte_end":37820,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":37825,"byte_end":37832,"line_start":651,"line_end":651,"column_start":5,"column_end":12}},{"value":"/ use curve25519_dalek::scalar::Scalar;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":37837,"byte_end":37878,"line_start":652,"line_end":652,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":37883,"byte_end":37886,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ let s: Scalar = Scalar::zero();","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":37891,"byte_end":37926,"line_start":654,"line_end":654,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":37931,"byte_end":37934,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ assert!(s.to_bytes() == [0u8; 32]);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":37939,"byte_end":37978,"line_start":656,"line_end":656,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":37983,"byte_end":37990,"line_start":657,"line_end":657,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":38360,"byte_end":38368,"line_start":673,"line_end":673,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Scalar>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" View the little-endian byte encoding of the integer representing this Scalar.","sig":null,"attributes":[{"value":"/ View the little-endian byte encoding of the integer representing this Scalar.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":38062,"byte_end":38143,"line_start":662,"line_end":662,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":38148,"byte_end":38151,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":38156,"byte_end":38169,"line_start":664,"line_end":664,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":38174,"byte_end":38177,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":38182,"byte_end":38189,"line_start":666,"line_end":666,"column_start":5,"column_end":12}},{"value":"/ use curve25519_dalek::scalar::Scalar;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":38194,"byte_end":38235,"line_start":667,"line_end":667,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":38240,"byte_end":38243,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ let s: Scalar = Scalar::zero();","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":38248,"byte_end":38283,"line_start":669,"line_end":669,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":38288,"byte_end":38291,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ assert!(s.as_bytes() == &[0u8; 32]);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":38296,"byte_end":38336,"line_start":671,"line_end":671,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":38341,"byte_end":38348,"line_start":672,"line_end":672,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":38469,"byte_end":38473,"line_start":678,"line_end":678,"column_start":12,"column_end":16},"name":"zero","qualname":"<Scalar>::zero","value":"pub fn zero() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct the scalar \\\\( 0 \\\\).\n","sig":null,"attributes":[{"value":"/ Construct the scalar \\\\( 0 \\\\).","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":38422,"byte_end":38457,"line_start":677,"line_end":677,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":38579,"byte_end":38582,"line_start":683,"line_end":683,"column_start":12,"column_end":15},"name":"one","qualname":"<Scalar>::one","value":"pub fn one() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct the scalar \\\\( 1 \\\\).\n","sig":null,"attributes":[{"value":"/ Construct the scalar \\\\( 1 \\\\).","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":38532,"byte_end":38567,"line_start":682,"line_end":682,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":40268,"byte_end":40274,"line_start":729,"line_end":729,"column_start":12,"column_end":18},"name":"invert","qualname":"<Scalar>::invert","value":"pub fn invert(&Self) -> Scalar","parent":null,"children":[],"decl_id":null,"docs":" Given a nonzero `Scalar`, compute its multiplicative inverse.","sig":null,"attributes":[{"value":"/ Given a nonzero `Scalar`, compute its multiplicative inverse.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":38797,"byte_end":38862,"line_start":692,"line_end":692,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":38867,"byte_end":38870,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":38875,"byte_end":38888,"line_start":694,"line_end":694,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":38893,"byte_end":38896,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ `self` **MUST** be nonzero.  If you cannot","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":38901,"byte_end":38947,"line_start":696,"line_end":696,"column_start":5,"column_end":51}},{"value":"/ *prove* that this is the case, you **SHOULD NOT USE THIS","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":38952,"byte_end":39012,"line_start":697,"line_end":697,"column_start":5,"column_end":65}},{"value":"/ FUNCTION**.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":39017,"byte_end":39032,"line_start":698,"line_end":698,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":39037,"byte_end":39040,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":39045,"byte_end":39058,"line_start":700,"line_end":700,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":39063,"byte_end":39066,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ The multiplicative inverse of the this `Scalar`.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":39071,"byte_end":39123,"line_start":702,"line_end":702,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":39128,"byte_end":39131,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":39136,"byte_end":39149,"line_start":704,"line_end":704,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":39154,"byte_end":39157,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":39162,"byte_end":39169,"line_start":706,"line_end":706,"column_start":5,"column_end":12}},{"value":"/ use curve25519_dalek::scalar::Scalar;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":39174,"byte_end":39215,"line_start":707,"line_end":707,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":39220,"byte_end":39223,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ // x = 2238329342913194256032495932344128051776374960164957527413114840482143558222","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":39228,"byte_end":39315,"line_start":709,"line_end":709,"column_start":5,"column_end":92}},{"value":"/ let X: Scalar = Scalar::from_bytes_mod_order([","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":39320,"byte_end":39370,"line_start":710,"line_end":710,"column_start":5,"column_end":55}},{"value":"/         0x4e, 0x5a, 0xb4, 0x34, 0x5d, 0x47, 0x08, 0x84,","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":39375,"byte_end":39434,"line_start":711,"line_end":711,"column_start":5,"column_end":64}},{"value":"/         0x59, 0x13, 0xb4, 0x64, 0x1b, 0xc2, 0x7d, 0x52,","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":39439,"byte_end":39498,"line_start":712,"line_end":712,"column_start":5,"column_end":64}},{"value":"/         0x52, 0xa5, 0x85, 0x10, 0x1b, 0xcc, 0x42, 0x44,","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":39503,"byte_end":39562,"line_start":713,"line_end":713,"column_start":5,"column_end":64}},{"value":"/         0xd4, 0x49, 0xf4, 0xa8, 0x79, 0xd9, 0xf2, 0x04,","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":39567,"byte_end":39626,"line_start":714,"line_end":714,"column_start":5,"column_end":64}},{"value":"/     ]);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":39631,"byte_end":39642,"line_start":715,"line_end":715,"column_start":5,"column_end":16}},{"value":"/ // 1/x = 6859937278830797291664592131120606308688036382723378951768035303146619657244","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":39647,"byte_end":39736,"line_start":716,"line_end":716,"column_start":5,"column_end":94}},{"value":"/ let XINV: Scalar = Scalar::from_bytes_mod_order([","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":39741,"byte_end":39794,"line_start":717,"line_end":717,"column_start":5,"column_end":58}},{"value":"/         0x1c, 0xdc, 0x17, 0xfc, 0xe0, 0xe9, 0xa5, 0xbb,","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":39799,"byte_end":39858,"line_start":718,"line_end":718,"column_start":5,"column_end":64}},{"value":"/         0xd9, 0x24, 0x7e, 0x56, 0xbb, 0x01, 0x63, 0x47,","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":39863,"byte_end":39922,"line_start":719,"line_end":719,"column_start":5,"column_end":64}},{"value":"/         0xbb, 0xba, 0x31, 0xed, 0xd5, 0xa9, 0xbb, 0x96,","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":39927,"byte_end":39986,"line_start":720,"line_end":720,"column_start":5,"column_end":64}},{"value":"/         0xd5, 0x0b, 0xcd, 0x7a, 0x3f, 0x96, 0x2a, 0x0f,","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":39991,"byte_end":40050,"line_start":721,"line_end":721,"column_start":5,"column_end":64}},{"value":"/     ]);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":40055,"byte_end":40066,"line_start":722,"line_end":722,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":40071,"byte_end":40074,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ let inv_X: Scalar = X.invert();","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":40079,"byte_end":40114,"line_start":724,"line_end":724,"column_start":5,"column_end":40}},{"value":"/ assert!(XINV == inv_X);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":40119,"byte_end":40146,"line_start":725,"line_end":725,"column_start":5,"column_end":32}},{"value":"/ let should_be_one: Scalar = &inv_X * &X;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":40151,"byte_end":40195,"line_start":726,"line_end":726,"column_start":5,"column_end":49}},{"value":"/ assert!(should_be_one == Scalar::one());","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":40200,"byte_end":40244,"line_start":727,"line_end":727,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":40249,"byte_end":40256,"line_start":728,"line_end":728,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":41550,"byte_end":41562,"line_start":771,"line_end":771,"column_start":12,"column_end":24},"name":"batch_invert","qualname":"<Scalar>::batch_invert","value":"pub fn batch_invert(&mut [Scalar]) -> Scalar","parent":null,"children":[],"decl_id":null,"docs":" Given a slice of nonzero (possibly secret) `Scalar`s,\n compute their inverses in a batch.","sig":null,"attributes":[{"value":"/ Given a slice of nonzero (possibly secret) `Scalar`s,","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":40343,"byte_end":40400,"line_start":733,"line_end":733,"column_start":5,"column_end":62}},{"value":"/ compute their inverses in a batch.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":40405,"byte_end":40443,"line_start":734,"line_end":734,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":40448,"byte_end":40451,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":40456,"byte_end":40468,"line_start":736,"line_end":736,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":40473,"byte_end":40476,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ Each element of `inputs` is replaced by its inverse.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":40481,"byte_end":40537,"line_start":738,"line_end":738,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":40542,"byte_end":40545,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ The product of all inverses is returned.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":40550,"byte_end":40594,"line_start":740,"line_end":740,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":40599,"byte_end":40602,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":40607,"byte_end":40620,"line_start":742,"line_end":742,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":40625,"byte_end":40628,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ All input `Scalars` **MUST** be nonzero.  If you cannot","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":40633,"byte_end":40692,"line_start":744,"line_end":744,"column_start":5,"column_end":64}},{"value":"/ *prove* that this is the case, you **SHOULD NOT USE THIS","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":40697,"byte_end":40757,"line_start":745,"line_end":745,"column_start":5,"column_end":65}},{"value":"/ FUNCTION**.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":40762,"byte_end":40777,"line_start":746,"line_end":746,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":40782,"byte_end":40785,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":40790,"byte_end":40803,"line_start":748,"line_end":748,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":40808,"byte_end":40811,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":40816,"byte_end":40823,"line_start":750,"line_end":750,"column_start":5,"column_end":12}},{"value":"/ # extern crate curve25519_dalek;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":40828,"byte_end":40864,"line_start":751,"line_end":751,"column_start":5,"column_end":41}},{"value":"/ # use curve25519_dalek::scalar::Scalar;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":40869,"byte_end":40912,"line_start":752,"line_end":752,"column_start":5,"column_end":48}},{"value":"/ # fn main() {","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":40917,"byte_end":40934,"line_start":753,"line_end":753,"column_start":5,"column_end":22}},{"value":"/ let mut scalars = [","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":40939,"byte_end":40962,"line_start":754,"line_end":754,"column_start":5,"column_end":28}},{"value":"/     Scalar::from(3u64),","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":40967,"byte_end":40994,"line_start":755,"line_end":755,"column_start":5,"column_end":32}},{"value":"/     Scalar::from(5u64),","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":40999,"byte_end":41026,"line_start":756,"line_end":756,"column_start":5,"column_end":32}},{"value":"/     Scalar::from(7u64),","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":41031,"byte_end":41058,"line_start":757,"line_end":757,"column_start":5,"column_end":32}},{"value":"/     Scalar::from(11u64),","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":41063,"byte_end":41091,"line_start":758,"line_end":758,"column_start":5,"column_end":33}},{"value":"/ ];","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":41096,"byte_end":41102,"line_start":759,"line_end":759,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":41107,"byte_end":41110,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ let allinv = Scalar::batch_invert(&mut scalars);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":41115,"byte_end":41167,"line_start":761,"line_end":761,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":41172,"byte_end":41175,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(allinv, Scalar::from(3*5*7*11u64).invert());","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":41180,"byte_end":41239,"line_start":763,"line_end":763,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(scalars[0], Scalar::from(3u64).invert());","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":41244,"byte_end":41300,"line_start":764,"line_end":764,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(scalars[1], Scalar::from(5u64).invert());","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":41305,"byte_end":41361,"line_start":765,"line_end":765,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(scalars[2], Scalar::from(7u64).invert());","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":41366,"byte_end":41422,"line_start":766,"line_end":766,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(scalars[3], Scalar::from(11u64).invert());","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":41427,"byte_end":41484,"line_start":767,"line_end":767,"column_start":5,"column_end":62}},{"value":"/ # }","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":41489,"byte_end":41496,"line_start":768,"line_end":768,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":41501,"byte_end":41508,"line_start":769,"line_end":769,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":41513,"byte_end":41538,"line_start":770,"line_end":770,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":54686,"byte_end":54692,"line_start":1104,"line_end":1104,"column_start":12,"column_end":18},"name":"reduce","qualname":"<Scalar>::reduce","value":"pub fn reduce(&Self) -> Scalar","parent":null,"children":[],"decl_id":null,"docs":" Reduce this `Scalar` modulo \\\\(\\ell\\\\).\n","sig":null,"attributes":[{"value":"/ Reduce this `Scalar` modulo \\\\(\\ell\\\\).","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":54602,"byte_end":54645,"line_start":1102,"line_end":1102,"column_start":5,"column_end":48}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":54650,"byte_end":54674,"line_start":1103,"line_end":1103,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":55598,"byte_end":55610,"line_start":1129,"line_end":1129,"column_start":12,"column_end":24},"name":"is_canonical","qualname":"<Scalar>::is_canonical","value":"pub fn is_canonical(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether this `Scalar` is the canonical representative mod \\\\(\\ell\\\\).","sig":null,"attributes":[{"value":"/ Check whether this `Scalar` is the canonical representative mod \\\\(\\ell\\\\).","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":54905,"byte_end":54984,"line_start":1111,"line_end":1111,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":54989,"byte_end":54992,"line_start":1112,"line_end":1112,"column_start":5,"column_end":8}},{"value":"/ This is intended for uses like input validation, where variable-time code is acceptable.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":54997,"byte_end":55089,"line_start":1113,"line_end":1113,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":55094,"byte_end":55097,"line_start":1114,"line_end":1114,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":55102,"byte_end":55109,"line_start":1115,"line_end":1115,"column_start":5,"column_end":12}},{"value":"/ # extern crate curve25519_dalek;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":55114,"byte_end":55150,"line_start":1116,"line_end":1116,"column_start":5,"column_end":41}},{"value":"/ # extern crate subtle;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":55155,"byte_end":55181,"line_start":1117,"line_end":1117,"column_start":5,"column_end":31}},{"value":"/ # use curve25519_dalek::scalar::Scalar;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":55186,"byte_end":55229,"line_start":1118,"line_end":1118,"column_start":5,"column_end":48}},{"value":"/ # use subtle::ConditionallySelectable;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":55234,"byte_end":55276,"line_start":1119,"line_end":1119,"column_start":5,"column_end":47}},{"value":"/ # fn main() {","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":55281,"byte_end":55298,"line_start":1120,"line_end":1120,"column_start":5,"column_end":22}},{"value":"/ // 2^255 - 1, since `from_bits` clears the high bit","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":55303,"byte_end":55358,"line_start":1121,"line_end":1121,"column_start":5,"column_end":60}},{"value":"/ let _2_255_minus_1 = Scalar::from_bits([0xff;32]);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":55363,"byte_end":55417,"line_start":1122,"line_end":1122,"column_start":5,"column_end":59}},{"value":"/ assert!(!_2_255_minus_1.is_canonical());","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":55422,"byte_end":55466,"line_start":1123,"line_end":1123,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":55471,"byte_end":55474,"line_start":1124,"line_end":1124,"column_start":5,"column_end":8}},{"value":"/ let reduced = _2_255_minus_1.reduce();","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":55479,"byte_end":55521,"line_start":1125,"line_end":1125,"column_start":5,"column_end":47}},{"value":"/ assert!(reduced.is_canonical());","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":55526,"byte_end":55562,"line_start":1126,"line_end":1126,"column_start":5,"column_end":41}},{"value":"/ # }","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":55567,"byte_end":55574,"line_start":1127,"line_end":1127,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":55579,"byte_end":55586,"line_start":1128,"line_end":1128,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":269},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"montgomery","qualname":"::montgomery","value":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","parent":null,"children":[{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":274},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":281},{"krate":0,"index":284},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":291},{"krate":0,"index":294},{"krate":0,"index":297},{"krate":0,"index":300},{"krate":0,"index":303},{"krate":0,"index":306},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":313},{"krate":0,"index":316},{"krate":0,"index":1601},{"krate":0,"index":1605},{"krate":0,"index":1606},{"krate":0,"index":1609},{"krate":0,"index":1611},{"krate":0,"index":319},{"krate":0,"index":321},{"krate":0,"index":324},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":330},{"krate":0,"index":332},{"krate":0,"index":339},{"krate":0,"index":1614},{"krate":0,"index":1617},{"krate":0,"index":1618},{"krate":0,"index":1620},{"krate":0,"index":340},{"krate":0,"index":342},{"krate":0,"index":344},{"krate":0,"index":346},{"krate":0,"index":348},{"krate":0,"index":1622},{"krate":0,"index":1624},{"krate":0,"index":1628},{"krate":0,"index":1632},{"krate":0,"index":1635},{"krate":0,"index":1639},{"krate":0,"index":1643},{"krate":0,"index":349},{"krate":0,"index":355},{"krate":0,"index":358}],"decl_id":null,"docs":" Scalar multiplication on the Montgomery form of Curve25519.","sig":null,"attributes":[{"value":"/ Scalar multiplication on the Montgomery form of Curve25519.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":78162,"byte_end":78225,"line_start":12,"line_end":12,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":78226,"byte_end":78229,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ To avoid notational confusion with the Edwards code, we use","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":78230,"byte_end":78293,"line_start":14,"line_end":14,"column_start":1,"column_end":64}},{"value":"/ variables \\\\( u, v \\\\) for the Montgomery curve, so that “Montgomery","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":78294,"byte_end":78368,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/ \\\\(u\\\\)” here corresponds to “Montgomery \\\\(x\\\\)” elsewhere.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":78369,"byte_end":78439,"line_start":16,"line_end":16,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":78440,"byte_end":78443,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Montgomery arithmetic works not on the curve itself, but on the","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":78444,"byte_end":78511,"line_start":18,"line_end":18,"column_start":1,"column_end":68}},{"value":"/ \\\\(u\\\\)-line, which discards sign information and unifies the curve","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":78512,"byte_end":78583,"line_start":19,"line_end":19,"column_start":1,"column_end":72}},{"value":"/ and its quadratic twist.  See [_Montgomery curves and their","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":78584,"byte_end":78647,"line_start":20,"line_end":20,"column_start":1,"column_end":64}},{"value":"/ arithmetic_][costello-smith] by Costello and Smith for more details.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":78648,"byte_end":78720,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":78721,"byte_end":78724,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The `MontgomeryPoint` struct contains the affine \\\\(u\\\\)-coordinate","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":78725,"byte_end":78796,"line_start":23,"line_end":23,"column_start":1,"column_end":72}},{"value":"/ \\\\(u\\_0(P)\\\\) of a point \\\\(P\\\\) on either the curve or the twist.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":78797,"byte_end":78867,"line_start":24,"line_end":24,"column_start":1,"column_end":71}},{"value":"/ Here the map \\\\(u\\_0 : \\mathcal M \\rightarrow \\mathbb F\\_p \\\\) is","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":78868,"byte_end":78937,"line_start":25,"line_end":25,"column_start":1,"column_end":70}},{"value":"/ defined by \\\\(u\\_0((u,v)) = u\\\\); \\\\(u\\_0(\\mathcal O) = 0\\\\).  See","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":78938,"byte_end":79008,"line_start":26,"line_end":26,"column_start":1,"column_end":71}},{"value":"/ section 5.4 of Costello-Smith for more details.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":79009,"byte_end":79060,"line_start":27,"line_end":27,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":79061,"byte_end":79064,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Scalar Multiplication","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":79065,"byte_end":79092,"line_start":29,"line_end":29,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":79093,"byte_end":79096,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Scalar multiplication on `MontgomeryPoint`s is provided by the `*`","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":79097,"byte_end":79167,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/ operator, which implements the Montgomery ladder.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":79168,"byte_end":79221,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":79222,"byte_end":79225,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Edwards Conversion","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":79226,"byte_end":79250,"line_start":34,"line_end":34,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":79251,"byte_end":79254,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ The \\\\(2\\\\)-to-\\\\(1\\\\) map from the Edwards model to the Montgomery","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":79255,"byte_end":79326,"line_start":36,"line_end":36,"column_start":1,"column_end":72}},{"value":"/ \\\\(u\\\\)-line is provided by `EdwardsPoint::to_montgomery()`.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":79327,"byte_end":79391,"line_start":37,"line_end":37,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":79392,"byte_end":79395,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ To lift a `MontgomeryPoint` to an `EdwardsPoint`, use","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":79396,"byte_end":79453,"line_start":39,"line_end":39,"column_start":1,"column_end":58}},{"value":"/ `MontgomeryPoint::to_edwards()`, which takes a sign parameter.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":79454,"byte_end":79520,"line_start":40,"line_end":40,"column_start":1,"column_end":67}},{"value":"/ This function rejects `MontgomeryPoints` which correspond to points","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":79521,"byte_end":79592,"line_start":41,"line_end":41,"column_start":1,"column_end":72}},{"value":"/ on the twist.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":79593,"byte_end":79610,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":79611,"byte_end":79614,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ [costello-smith]: https://eprint.iacr.org/2017/212.pdf","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":79615,"byte_end":79673,"line_start":44,"line_end":44,"column_start":1,"column_end":59}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":79955,"byte_end":79980,"line_start":50,"line_end":50,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":1601},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":80559,"byte_end":80574,"line_start":71,"line_end":71,"column_start":12,"column_end":27},"name":"MontgomeryPoint","qualname":"::montgomery::MontgomeryPoint","value":"","parent":null,"children":[],"decl_id":null,"docs":" Holds the \\\\(u\\\\)-coordinate of a point on the Montgomery form of\n Curve25519 or its twist.\n","sig":null,"attributes":[{"value":"/ Holds the \\\\(u\\\\)-coordinate of a point on the Montgomery form of","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":80336,"byte_end":80405,"line_start":67,"line_end":67,"column_start":1,"column_end":70}},{"value":"/ Curve25519 or its twist.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":80406,"byte_end":80434,"line_start":68,"line_end":68,"column_start":1,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":1603},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":80575,"byte_end":80587,"line_start":71,"line_end":71,"column_start":28,"column_end":40},"name":"0","qualname":"::montgomery::MontgomeryPoint::0","value":"[u8; 32]","parent":{"krate":0,"index":1601},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":81565,"byte_end":81573,"line_start":112,"line_end":112,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<MontgomeryPoint>::as_bytes","value":"pub fn as_bytes<'a>(&'a Self) -> &'a [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" View this `MontgomeryPoint` as an array of bytes.\n","sig":null,"attributes":[{"value":"/ View this `MontgomeryPoint` as an array of bytes.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":81500,"byte_end":81553,"line_start":111,"line_end":111,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":81701,"byte_end":81709,"line_start":117,"line_end":117,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<MontgomeryPoint>::to_bytes","value":"pub fn to_bytes(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Convert this `MontgomeryPoint` to an array of bytes.\n","sig":null,"attributes":[{"value":"/ Convert this `MontgomeryPoint` to an array of bytes.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":81633,"byte_end":81689,"line_start":116,"line_end":116,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":82346,"byte_end":82356,"line_start":137,"line_end":137,"column_start":12,"column_end":22},"name":"to_edwards","qualname":"<MontgomeryPoint>::to_edwards","value":"pub fn to_edwards(&Self, u8) -> Option<EdwardsPoint>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to convert to an `EdwardsPoint`, using the supplied\n choice of sign for the `EdwardsPoint`.","sig":null,"attributes":[{"value":"/ Attempt to convert to an `EdwardsPoint`, using the supplied","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":81757,"byte_end":81820,"line_start":121,"line_end":121,"column_start":5,"column_end":68}},{"value":"/ choice of sign for the `EdwardsPoint`.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":81825,"byte_end":81867,"line_start":122,"line_end":122,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":81872,"byte_end":81875,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ # Inputs","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":81880,"byte_end":81892,"line_start":124,"line_end":124,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":81897,"byte_end":81900,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ * `sign`: a `u8` donating the desired sign of the resulting","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":81905,"byte_end":81968,"line_start":126,"line_end":126,"column_start":5,"column_end":68}},{"value":"/   `EdwardsPoint`.  `0` denotes positive and `1` negative.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":81973,"byte_end":82034,"line_start":127,"line_end":127,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":82039,"byte_end":82042,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":82047,"byte_end":82059,"line_start":129,"line_end":129,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":82064,"byte_end":82067,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ * `Some(EdwardsPoint)` if `self` is the \\\\(u\\\\)-coordinate of a","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":82072,"byte_end":82139,"line_start":131,"line_end":131,"column_start":5,"column_end":72}},{"value":"/ point on (the Montgomery form of) Curve25519;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":82144,"byte_end":82193,"line_start":132,"line_end":132,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":82198,"byte_end":82201,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ * `None` if `self` is the \\\\(u\\\\)-coordinate of a point on the","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":82206,"byte_end":82272,"line_start":134,"line_end":134,"column_start":5,"column_end":71}},{"value":"/ twist of (the Montgomery form of) Curve25519;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":82277,"byte_end":82326,"line_start":135,"line_end":135,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":82331,"byte_end":82334,"line_start":136,"line_end":136,"column_start":5,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":363},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"edwards","qualname":"::edwards","value":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","parent":null,"children":[{"krate":0,"index":364},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":370},{"krate":0,"index":373},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":380},{"krate":0,"index":383},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":390},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":397},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":404},{"krate":0,"index":407},{"krate":0,"index":410},{"krate":0,"index":413},{"krate":0,"index":416},{"krate":0,"index":419},{"krate":0,"index":422},{"krate":0,"index":425},{"krate":0,"index":428},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":434},{"krate":0,"index":437},{"krate":0,"index":440},{"krate":0,"index":443},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":449},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":468},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":475},{"krate":0,"index":478},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":485},{"krate":0,"index":488},{"krate":0,"index":1646},{"krate":0,"index":1650},{"krate":0,"index":1651},{"krate":0,"index":1654},{"krate":0,"index":1655},{"krate":0,"index":1658},{"krate":0,"index":1659},{"krate":0,"index":1662},{"krate":0,"index":491},{"krate":0,"index":493},{"krate":0,"index":495},{"krate":0,"index":1665},{"krate":0,"index":1670},{"krate":0,"index":1671},{"krate":0,"index":501},{"krate":0,"index":503},{"krate":0,"index":505},{"krate":0,"index":508},{"krate":0,"index":510},{"krate":0,"index":512},{"krate":0,"index":514},{"krate":0,"index":516},{"krate":0,"index":518},{"krate":0,"index":520},{"krate":0,"index":522},{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":535},{"krate":0,"index":537},{"krate":0,"index":1673},{"krate":0,"index":1677},{"krate":0,"index":1681},{"krate":0,"index":542},{"krate":0,"index":1684},{"krate":0,"index":545},{"krate":0,"index":1686},{"krate":0,"index":1690},{"krate":0,"index":1694},{"krate":0,"index":550},{"krate":0,"index":1697},{"krate":0,"index":553},{"krate":0,"index":558},{"krate":0,"index":562},{"krate":0,"index":565},{"krate":0,"index":1699},{"krate":0,"index":1701},{"krate":0,"index":1705},{"krate":0,"index":1709},{"krate":0,"index":1712},{"krate":0,"index":1716},{"krate":0,"index":1720},{"krate":0,"index":568},{"krate":0,"index":573},{"krate":0,"index":578},{"krate":0,"index":583},{"krate":0,"index":588},{"krate":0,"index":591},{"krate":0,"index":599},{"krate":0,"index":601},{"krate":0,"index":1743},{"krate":0,"index":1747},{"krate":0,"index":1723},{"krate":0,"index":1731},{"krate":0,"index":1736},{"krate":0,"index":1741},{"krate":0,"index":1769},{"krate":0,"index":1773},{"krate":0,"index":1749},{"krate":0,"index":1757},{"krate":0,"index":1762},{"krate":0,"index":1767},{"krate":0,"index":1795},{"krate":0,"index":1799},{"krate":0,"index":1775},{"krate":0,"index":1783},{"krate":0,"index":1788},{"krate":0,"index":1793},{"krate":0,"index":1821},{"krate":0,"index":1825},{"krate":0,"index":1801},{"krate":0,"index":1809},{"krate":0,"index":1814},{"krate":0,"index":1819},{"krate":0,"index":1847},{"krate":0,"index":1851},{"krate":0,"index":1827},{"krate":0,"index":1835},{"krate":0,"index":1840},{"krate":0,"index":1845},{"krate":0,"index":1853},{"krate":0,"index":1857},{"krate":0,"index":602},{"krate":0,"index":608},{"krate":0,"index":613},{"krate":0,"index":618},{"krate":0,"index":1859},{"krate":0,"index":1862},{"krate":0,"index":1865},{"krate":0,"index":1868},{"krate":0,"index":1871},{"krate":0,"index":1874},{"krate":0,"index":1877},{"krate":0,"index":1880},{"krate":0,"index":1883},{"krate":0,"index":1886},{"krate":0,"index":1889},{"krate":0,"index":1892},{"krate":0,"index":1895},{"krate":0,"index":1898},{"krate":0,"index":1901},{"krate":0,"index":1904},{"krate":0,"index":1907},{"krate":0,"index":1910},{"krate":0,"index":1913},{"krate":0,"index":1916},{"krate":0,"index":619},{"krate":0,"index":624}],"decl_id":null,"docs":" Group operations for Curve25519, in Edwards form.","sig":null,"attributes":[{"value":"/ Group operations for Curve25519, in Edwards form.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":93704,"byte_end":93757,"line_start":12,"line_end":12,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":93758,"byte_end":93761,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ## Encoding and Decoding","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":93762,"byte_end":93790,"line_start":14,"line_end":14,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":93791,"byte_end":93794,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Encoding is done by converting to and from a `CompressedEdwardsY`","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":93795,"byte_end":93864,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/ struct, which is a typed wrapper around `[u8; 32]`.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":93865,"byte_end":93920,"line_start":17,"line_end":17,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":93921,"byte_end":93924,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ## Equality Testing","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":93925,"byte_end":93948,"line_start":19,"line_end":19,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":93949,"byte_end":93952,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The `EdwardsPoint` struct implements the `subtle::ConstantTimeEq`","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":93953,"byte_end":94022,"line_start":21,"line_end":21,"column_start":1,"column_end":70}},{"value":"/ trait for constant-time equality checking, and the Rust `Eq` trait","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":94023,"byte_end":94093,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"/ for variable-time equality checking.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":94094,"byte_end":94134,"line_start":23,"line_end":23,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":94135,"byte_end":94138,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ## Cofactor-related functions","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":94139,"byte_end":94172,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":94173,"byte_end":94176,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ The order of the group of points on the curve \\\\(\\mathcal E\\\\)","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":94177,"byte_end":94243,"line_start":27,"line_end":27,"column_start":1,"column_end":67}},{"value":"/ is \\\\(|\\mathcal E| = 8\\ell \\\\), so its structure is \\\\( \\mathcal","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":94244,"byte_end":94312,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/ E = \\mathcal E[8] \\times \\mathcal E[\\ell]\\\\).  The torsion","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":94313,"byte_end":94375,"line_start":29,"line_end":29,"column_start":1,"column_end":63}},{"value":"/ subgroup \\\\( \\mathcal E[8] \\\\) consists of eight points of small","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":94376,"byte_end":94444,"line_start":30,"line_end":30,"column_start":1,"column_end":69}},{"value":"/ order.  Technically, all of \\\\(\\mathcal E\\\\) is torsion, but we","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":94445,"byte_end":94512,"line_start":31,"line_end":31,"column_start":1,"column_end":68}},{"value":"/ use the word only to refer to the small \\\\(\\mathcal E[8]\\\\) part, not","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":94513,"byte_end":94586,"line_start":32,"line_end":32,"column_start":1,"column_end":74}},{"value":"/ the large prime-order \\\\(\\mathcal E[\\ell]\\\\) part.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":94587,"byte_end":94641,"line_start":33,"line_end":33,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":94642,"byte_end":94645,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ To test if a point is in \\\\( \\mathcal E[8] \\\\), use","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":94646,"byte_end":94701,"line_start":35,"line_end":35,"column_start":1,"column_end":56}},{"value":"/ `EdwardsPoint::is_small_order()`.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":94702,"byte_end":94739,"line_start":36,"line_end":36,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":94740,"byte_end":94743,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ To test if a point is in \\\\( \\mathcal E[\\ell] \\\\), use","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":94744,"byte_end":94802,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/ `EdwardsPoint::is_torsion_free()`.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":94803,"byte_end":94841,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":94842,"byte_end":94845,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ To multiply by the cofactor, use `EdwardsPoint::mul_by_cofactor()`.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":94846,"byte_end":94917,"line_start":41,"line_end":41,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":94918,"byte_end":94921,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ To avoid dealing with cofactors entirely, consider using Ristretto.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":94922,"byte_end":94993,"line_start":43,"line_end":43,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":94994,"byte_end":94997,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ## Scalars","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":94998,"byte_end":95012,"line_start":45,"line_end":45,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":95013,"byte_end":95016,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ Scalars are represented by the `Scalar` struct.  To construct a scalar with a specific bit","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":95017,"byte_end":95111,"line_start":47,"line_end":47,"column_start":1,"column_end":95}},{"value":"/ pattern, see `Scalar::from_bits()`.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":95112,"byte_end":95151,"line_start":48,"line_end":48,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":95152,"byte_end":95155,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ## Scalar Multiplication","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":95156,"byte_end":95184,"line_start":50,"line_end":50,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":95185,"byte_end":95188,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Scalar multiplication on Edwards points is provided by:","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":95189,"byte_end":95248,"line_start":52,"line_end":52,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":95249,"byte_end":95252,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ * the `*` operator between a `Scalar` and a `EdwardsPoint`, which","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":95253,"byte_end":95322,"line_start":54,"line_end":54,"column_start":1,"column_end":70}},{"value":"/ performs constant-time variable-base scalar multiplication;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":95323,"byte_end":95386,"line_start":55,"line_end":55,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":95387,"byte_end":95390,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ * the `*` operator between a `Scalar` and a","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":95391,"byte_end":95438,"line_start":57,"line_end":57,"column_start":1,"column_end":48}},{"value":"/ `EdwardsBasepointTable`, which performs constant-time fixed-base","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":95439,"byte_end":95507,"line_start":58,"line_end":58,"column_start":1,"column_end":69}},{"value":"/ scalar multiplication;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":95508,"byte_end":95534,"line_start":59,"line_end":59,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":95535,"byte_end":95538,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ * an implementation of the","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":95539,"byte_end":95569,"line_start":61,"line_end":61,"column_start":1,"column_end":31}},{"value":"/ [`MultiscalarMul`](../traits/trait.MultiscalarMul.html) trait for","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":95570,"byte_end":95639,"line_start":62,"line_end":62,"column_start":1,"column_end":70}},{"value":"/ constant-time variable-base multiscalar multiplication;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":95640,"byte_end":95699,"line_start":63,"line_end":63,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":95700,"byte_end":95703,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ * an implementation of the","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":95704,"byte_end":95734,"line_start":65,"line_end":65,"column_start":1,"column_end":31}},{"value":"/ [`VartimeMultiscalarMul`](../traits/trait.VartimeMultiscalarMul.html)","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":95735,"byte_end":95808,"line_start":66,"line_end":66,"column_start":1,"column_end":74}},{"value":"/ trait for variable-time variable-base multiscalar multiplication;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":95809,"byte_end":95878,"line_start":67,"line_end":67,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":95879,"byte_end":95882,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ## Implementation","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":95883,"byte_end":95904,"line_start":69,"line_end":69,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":95905,"byte_end":95908,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ The Edwards arithmetic is implemented using the “extended twisted","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":95909,"byte_end":95980,"line_start":71,"line_end":71,"column_start":1,"column_end":70}},{"value":"/ coordinates” of Hisil, Wong, Carter, and Dawson, and the","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":95981,"byte_end":96043,"line_start":72,"line_end":72,"column_start":1,"column_end":61}},{"value":"/ corresponding complete formulas.  For more details,","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":96044,"byte_end":96099,"line_start":73,"line_end":73,"column_start":1,"column_end":56}},{"value":"/ see the [`curve_models` submodule][curve_models]","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":96100,"byte_end":96152,"line_start":74,"line_end":74,"column_start":1,"column_end":53}},{"value":"/ of the internal documentation.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":96153,"byte_end":96187,"line_start":75,"line_end":75,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":96188,"byte_end":96191,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ## Validity Checking","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":96192,"byte_end":96216,"line_start":77,"line_end":77,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":96217,"byte_end":96220,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ There is no function for checking whether a point is valid.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":96221,"byte_end":96284,"line_start":79,"line_end":79,"column_start":1,"column_end":64}},{"value":"/ Instead, the `EdwardsPoint` struct is guaranteed to hold a valid","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":96285,"byte_end":96353,"line_start":80,"line_end":80,"column_start":1,"column_end":69}},{"value":"/ point on the curve.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":96354,"byte_end":96377,"line_start":81,"line_end":81,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":96378,"byte_end":96381,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ We use the Rust type system to make invalid points","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":96382,"byte_end":96436,"line_start":83,"line_end":83,"column_start":1,"column_end":55}},{"value":"/ unrepresentable: `EdwardsPoint` objects can only be created via","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":96437,"byte_end":96504,"line_start":84,"line_end":84,"column_start":1,"column_end":68}},{"value":"/ successful decompression of a compressed point, or else by","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":96505,"byte_end":96567,"line_start":85,"line_end":85,"column_start":1,"column_end":63}},{"value":"/ operations on other (valid) `EdwardsPoint`s.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":96568,"byte_end":96616,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":96617,"byte_end":96620,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ [curve_models]: https://doc-internal.dalek.rs/curve25519_dalek/backend/serial/curve_models/index.html","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":96621,"byte_end":96726,"line_start":88,"line_end":88,"column_start":1,"column_end":106}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":97008,"byte_end":97033,"line_start":94,"line_end":94,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":1646},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":99063,"byte_end":99081,"line_start":164,"line_end":164,"column_start":12,"column_end":30},"name":"CompressedEdwardsY","qualname":"::edwards::CompressedEdwardsY","value":"","parent":null,"children":[],"decl_id":null,"docs":" In \"Edwards y\" / \"Ed25519\" format, the curve point \\\\((x,y)\\\\) is\n determined by the \\\\(y\\\\)-coordinate and the sign of \\\\(x\\\\).","sig":null,"attributes":[{"value":"/ In \"Edwards y\" / \"Ed25519\" format, the curve point \\\\((x,y)\\\\) is","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":98723,"byte_end":98792,"line_start":158,"line_end":158,"column_start":1,"column_end":70}},{"value":"/ determined by the \\\\(y\\\\)-coordinate and the sign of \\\\(x\\\\).","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":98793,"byte_end":98858,"line_start":159,"line_end":159,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":98859,"byte_end":98862,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ The first 255 bits of a `CompressedEdwardsY` represent the","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":98863,"byte_end":98925,"line_start":161,"line_end":161,"column_start":1,"column_end":63}},{"value":"/ \\\\(y\\\\)-coordinate.  The high bit of the 32nd byte gives the sign of \\\\(x\\\\).","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":98926,"byte_end":99007,"line_start":162,"line_end":162,"column_start":1,"column_end":82}}]},{"kind":"Field","id":{"krate":0,"index":1648},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":99082,"byte_end":99094,"line_start":164,"line_end":164,"column_start":31,"column_end":43},"name":"0","qualname":"::edwards::CompressedEdwardsY::0","value":"[u8; 32]","parent":{"krate":0,"index":1646},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":99541,"byte_end":99549,"line_start":180,"line_end":180,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<CompressedEdwardsY>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" View this `CompressedEdwardsY` as an array of bytes.\n","sig":null,"attributes":[{"value":"/ View this `CompressedEdwardsY` as an array of bytes.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":99473,"byte_end":99529,"line_start":179,"line_end":179,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":99667,"byte_end":99675,"line_start":185,"line_end":185,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<CompressedEdwardsY>::to_bytes","value":"pub fn to_bytes(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Copy this `CompressedEdwardsY` to an array of bytes.\n","sig":null,"attributes":[{"value":"/ Copy this `CompressedEdwardsY` to an array of bytes.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":99599,"byte_end":99655,"line_start":184,"line_end":184,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":99882,"byte_end":99892,"line_start":193,"line_end":193,"column_start":12,"column_end":22},"name":"decompress","qualname":"<CompressedEdwardsY>::decompress","value":"pub fn decompress(&Self) -> Option<EdwardsPoint>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to decompress to an `EdwardsPoint`.","sig":null,"attributes":[{"value":"/ Attempt to decompress to an `EdwardsPoint`.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":99723,"byte_end":99770,"line_start":189,"line_end":189,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":99775,"byte_end":99778,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the input is not the \\\\(y\\\\)-coordinate of a","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":99783,"byte_end":99849,"line_start":191,"line_end":191,"column_start":5,"column_end":71}},{"value":"/ curve point.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":99854,"byte_end":99870,"line_start":192,"line_end":192,"column_start":5,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":1665},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":104496,"byte_end":104508,"line_start":322,"line_end":322,"column_start":12,"column_end":24},"name":"EdwardsPoint","qualname":"::edwards::EdwardsPoint","value":"EdwardsPoint {  }","parent":null,"children":[{"krate":0,"index":1666},{"krate":0,"index":1667},{"krate":0,"index":1668},{"krate":0,"index":1669}],"decl_id":null,"docs":" An `EdwardsPoint` represents a point on the Edwards form of Curve25519.\n","sig":null,"attributes":[{"value":"/ An `EdwardsPoint` represents a point on the Edwards form of Curve25519.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":104363,"byte_end":104438,"line_start":319,"line_end":319,"column_start":1,"column_end":76}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":104462,"byte_end":104484,"line_start":321,"line_end":321,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":105436,"byte_end":105446,"line_start":354,"line_end":354,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<CompressedEdwardsY>::from_slice","value":"pub fn from_slice(&[u8]) -> CompressedEdwardsY","parent":null,"children":[],"decl_id":null,"docs":" Construct a `CompressedEdwardsY` from a slice of bytes.","sig":null,"attributes":[{"value":"/ Construct a `CompressedEdwardsY` from a slice of bytes.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":105267,"byte_end":105326,"line_start":349,"line_end":349,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":105331,"byte_end":105334,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":105339,"byte_end":105351,"line_start":351,"line_end":351,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":105356,"byte_end":105359,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ If the input `bytes` slice does not have a length of 32.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":105364,"byte_end":105424,"line_start":353,"line_end":353,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":529},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":110353,"byte_end":110366,"line_start":505,"line_end":505,"column_start":12,"column_end":25},"name":"to_montgomery","qualname":"<EdwardsPoint>::to_montgomery","value":"pub fn to_montgomery(&Self) -> MontgomeryPoint","parent":null,"children":[],"decl_id":null,"docs":" Convert this `EdwardsPoint` on the Edwards model to the\n corresponding `MontgomeryPoint` on the Montgomery model.","sig":null,"attributes":[{"value":"/ Convert this `EdwardsPoint` on the Edwards model to the","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":109912,"byte_end":109971,"line_start":496,"line_end":496,"column_start":5,"column_end":64}},{"value":"/ corresponding `MontgomeryPoint` on the Montgomery model.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":109976,"byte_end":110036,"line_start":497,"line_end":497,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":110041,"byte_end":110044,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ This function has one exceptional case; the identity point of","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":110049,"byte_end":110114,"line_start":499,"line_end":499,"column_start":5,"column_end":70}},{"value":"/ the Edwards curve is sent to the 2-torsion point \\\\((0,0)\\\\)","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":110119,"byte_end":110183,"line_start":500,"line_end":500,"column_start":5,"column_end":69}},{"value":"/ on the Montgomery curve.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":110188,"byte_end":110216,"line_start":501,"line_end":501,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":110221,"byte_end":110224,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ Note that this is a one-way conversion, since the Montgomery","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":110229,"byte_end":110293,"line_start":503,"line_end":503,"column_start":5,"column_end":69}},{"value":"/ model does not retain sign information.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":110298,"byte_end":110341,"line_start":504,"line_end":504,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":530},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":110863,"byte_end":110871,"line_start":518,"line_end":518,"column_start":12,"column_end":20},"name":"compress","qualname":"<EdwardsPoint>::compress","value":"pub fn compress(&Self) -> CompressedEdwardsY","parent":null,"children":[],"decl_id":null,"docs":" Compress this point to `CompressedEdwardsY` format.\n","sig":null,"attributes":[{"value":"/ Compress this point to `CompressedEdwardsY` format.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":110796,"byte_end":110851,"line_start":517,"line_end":517,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":532},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":111320,"byte_end":111335,"line_start":532,"line_end":532,"column_start":12,"column_end":27},"name":"hash_from_bytes","qualname":"<EdwardsPoint>::hash_from_bytes","value":"pub fn hash_from_bytes<D>(&[u8]) -> EdwardsPoint where D: Digest<OutputSize =\nU64> + Default","parent":null,"children":[],"decl_id":null,"docs":" Perform hashing to the group using the Elligator2 map","sig":null,"attributes":[{"value":"/ Perform hashing to the group using the Elligator2 map","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":111156,"byte_end":111213,"line_start":529,"line_end":529,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":111218,"byte_end":111221,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ See https://tools.ietf.org/html/draft-irtf-cfrg-hash-to-curve-10#section-6.7.1","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":111226,"byte_end":111308,"line_start":531,"line_end":531,"column_start":5,"column_end":87}}]},{"kind":"Struct","id":{"krate":0,"index":588},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":118312,"byte_end":118340,"line_start":760,"line_end":760,"column_start":12,"column_end":40},"name":"VartimeEdwardsPrecomputation","qualname":"::edwards::VartimeEdwardsPrecomputation","value":"","parent":null,"children":[],"decl_id":null,"docs":" Precomputation for variable-time multiscalar multiplication with `EdwardsPoint`s.\n","sig":null,"attributes":[{"value":"/ Precomputation for variable-time multiscalar multiplication with `EdwardsPoint`s.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":118037,"byte_end":118122,"line_start":755,"line_end":755,"column_start":1,"column_end":86}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":118275,"byte_end":118300,"line_start":759,"line_end":759,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":119344,"byte_end":119379,"line_start":794,"line_end":794,"column_start":12,"column_end":47},"name":"vartime_double_scalar_mul_basepoint","qualname":"<EdwardsPoint>::vartime_double_scalar_mul_basepoint","value":"pub fn vartime_double_scalar_mul_basepoint(&Scalar, &EdwardsPoint, &Scalar)\n-> EdwardsPoint","parent":null,"children":[],"decl_id":null,"docs":" Compute \\\\(aA + bB\\\\) in variable time, where \\\\(B\\\\) is the Ed25519 basepoint.\n","sig":null,"attributes":[{"value":"/ Compute \\\\(aA + bB\\\\) in variable time, where \\\\(B\\\\) is the Ed25519 basepoint.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":119249,"byte_end":119332,"line_start":793,"line_end":793,"column_start":5,"column_end":88}}]},{"kind":"Struct","id":{"krate":0,"index":1743},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":125388,"byte_end":125416,"line_start":954,"line_end":954,"column_start":31,"column_end":59},"name":"EdwardsBasepointTableRadix16","qualname":"::edwards::EdwardsBasepointTableRadix16","value":"","parent":null,"children":[],"decl_id":null,"docs":" A precomputed table of multiples of a basepoint, for accelerating\n fixed-base scalar multiplication.  One table, for the Ed25519\n basepoint, is provided in the `constants` module.","sig":null,"attributes":[{"value":"/ A precomputed table of multiples of a basepoint, for accelerating","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":119693,"byte_end":119762,"line_start":806,"line_end":806,"column_start":1,"column_end":70}},{"value":"/ fixed-base scalar multiplication.  One table, for the Ed25519","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":119763,"byte_end":119828,"line_start":807,"line_end":807,"column_start":1,"column_end":66}},{"value":"/ basepoint, is provided in the `constants` module.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":119829,"byte_end":119882,"line_start":808,"line_end":808,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":119883,"byte_end":119886,"line_start":809,"line_end":809,"column_start":1,"column_end":4}},{"value":"/ The basepoint tables are reasonably large, so they should probably be boxed.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":119887,"byte_end":119967,"line_start":810,"line_end":810,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":119968,"byte_end":119971,"line_start":811,"line_end":811,"column_start":1,"column_end":4}},{"value":"/ The sizes for the tables and the number of additions required for one scalar","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":119972,"byte_end":120052,"line_start":812,"line_end":812,"column_start":1,"column_end":81}},{"value":"/ multiplication are as follows:","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120053,"byte_end":120087,"line_start":813,"line_end":813,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120088,"byte_end":120091,"line_start":814,"line_end":814,"column_start":1,"column_end":4}},{"value":"/ * [`EdwardsBasepointTableRadix16`]: 30KB, 64A","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120092,"byte_end":120141,"line_start":815,"line_end":815,"column_start":1,"column_end":50}},{"value":"/   (this is the default size, and is used for [`ED25519_BASEPOINT_TABLE`])","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120142,"byte_end":120219,"line_start":816,"line_end":816,"column_start":1,"column_end":78}},{"value":"/ * [`EdwardsBasepointTableRadix64`]: 120KB, 43A","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120220,"byte_end":120270,"line_start":817,"line_end":817,"column_start":1,"column_end":51}},{"value":"/ * [`EdwardsBasepointTableRadix128`]: 240KB, 37A","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120271,"byte_end":120322,"line_start":818,"line_end":818,"column_start":1,"column_end":52}},{"value":"/ * [`EdwardsBasepointTableRadix256`]: 480KB, 33A","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120323,"byte_end":120374,"line_start":819,"line_end":819,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120375,"byte_end":120378,"line_start":820,"line_end":820,"column_start":1,"column_end":4}},{"value":"/ # Why 33 additions for radix-256?","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120379,"byte_end":120416,"line_start":821,"line_end":821,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120417,"byte_end":120420,"line_start":822,"line_end":822,"column_start":1,"column_end":4}},{"value":"/ Normally, the radix-256 tables would allow for only 32 additions per scalar","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120421,"byte_end":120500,"line_start":823,"line_end":823,"column_start":1,"column_end":80}},{"value":"/ multiplication.  However, due to the fact that standardised definitions of","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120501,"byte_end":120579,"line_start":824,"line_end":824,"column_start":1,"column_end":79}},{"value":"/ legacy protocols—such as x25519—require allowing unreduced 255-bit scalar","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120580,"byte_end":120661,"line_start":825,"line_end":825,"column_start":1,"column_end":78}},{"value":"/ invariants, when converting such an unreduced scalar's representation to","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120662,"byte_end":120738,"line_start":826,"line_end":826,"column_start":1,"column_end":77}},{"value":"/ radix-\\\\(2^{8}\\\\), we cannot guarantee the carry bit will fit in the last","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120739,"byte_end":120816,"line_start":827,"line_end":827,"column_start":1,"column_end":78}},{"value":"/ coefficient (the coefficients are `i8`s).  When, \\\\(w\\\\), the power-of-2 of","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120817,"byte_end":120896,"line_start":828,"line_end":828,"column_start":1,"column_end":80}},{"value":"/ the radix, is \\\\(w < 8\\\\), we can fold the final carry onto the last","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120897,"byte_end":120969,"line_start":829,"line_end":829,"column_start":1,"column_end":73}},{"value":"/ coefficient, \\\\(d\\\\), because \\\\(d < 2^{w/2}\\\\), so","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120970,"byte_end":121025,"line_start":830,"line_end":830,"column_start":1,"column_end":56}},{"value":"/ $$","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":121026,"byte_end":121032,"line_start":831,"line_end":831,"column_start":1,"column_end":7}},{"value":"/     d + carry \\cdot 2^{w} = d + 1 \\cdot 2^{w} < 2^{w+1} < 2^{8}","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":121033,"byte_end":121100,"line_start":832,"line_end":832,"column_start":1,"column_end":68}},{"value":"/ $$","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":121101,"byte_end":121107,"line_start":833,"line_end":833,"column_start":1,"column_end":7}},{"value":"/ When \\\\(w = 8\\\\), we can't fit \\\\(carry \\cdot 2^{w}\\\\) into an `i8`, so we","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":121108,"byte_end":121186,"line_start":834,"line_end":834,"column_start":1,"column_end":79}},{"value":"/ add the carry bit onto an additional coefficient.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":121187,"byte_end":121240,"line_start":835,"line_end":835,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":1769},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":125531,"byte_end":125559,"line_start":955,"line_end":955,"column_start":31,"column_end":59},"name":"EdwardsBasepointTableRadix32","qualname":"::edwards::EdwardsBasepointTableRadix32","value":"","parent":null,"children":[],"decl_id":null,"docs":" A precomputed table of multiples of a basepoint, for accelerating\n fixed-base scalar multiplication.  One table, for the Ed25519\n basepoint, is provided in the `constants` module.","sig":null,"attributes":[{"value":"/ A precomputed table of multiples of a basepoint, for accelerating","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":119693,"byte_end":119762,"line_start":806,"line_end":806,"column_start":1,"column_end":70}},{"value":"/ fixed-base scalar multiplication.  One table, for the Ed25519","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":119763,"byte_end":119828,"line_start":807,"line_end":807,"column_start":1,"column_end":66}},{"value":"/ basepoint, is provided in the `constants` module.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":119829,"byte_end":119882,"line_start":808,"line_end":808,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":119883,"byte_end":119886,"line_start":809,"line_end":809,"column_start":1,"column_end":4}},{"value":"/ The basepoint tables are reasonably large, so they should probably be boxed.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":119887,"byte_end":119967,"line_start":810,"line_end":810,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":119968,"byte_end":119971,"line_start":811,"line_end":811,"column_start":1,"column_end":4}},{"value":"/ The sizes for the tables and the number of additions required for one scalar","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":119972,"byte_end":120052,"line_start":812,"line_end":812,"column_start":1,"column_end":81}},{"value":"/ multiplication are as follows:","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120053,"byte_end":120087,"line_start":813,"line_end":813,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120088,"byte_end":120091,"line_start":814,"line_end":814,"column_start":1,"column_end":4}},{"value":"/ * [`EdwardsBasepointTableRadix16`]: 30KB, 64A","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120092,"byte_end":120141,"line_start":815,"line_end":815,"column_start":1,"column_end":50}},{"value":"/   (this is the default size, and is used for [`ED25519_BASEPOINT_TABLE`])","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120142,"byte_end":120219,"line_start":816,"line_end":816,"column_start":1,"column_end":78}},{"value":"/ * [`EdwardsBasepointTableRadix64`]: 120KB, 43A","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120220,"byte_end":120270,"line_start":817,"line_end":817,"column_start":1,"column_end":51}},{"value":"/ * [`EdwardsBasepointTableRadix128`]: 240KB, 37A","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120271,"byte_end":120322,"line_start":818,"line_end":818,"column_start":1,"column_end":52}},{"value":"/ * [`EdwardsBasepointTableRadix256`]: 480KB, 33A","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120323,"byte_end":120374,"line_start":819,"line_end":819,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120375,"byte_end":120378,"line_start":820,"line_end":820,"column_start":1,"column_end":4}},{"value":"/ # Why 33 additions for radix-256?","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120379,"byte_end":120416,"line_start":821,"line_end":821,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120417,"byte_end":120420,"line_start":822,"line_end":822,"column_start":1,"column_end":4}},{"value":"/ Normally, the radix-256 tables would allow for only 32 additions per scalar","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120421,"byte_end":120500,"line_start":823,"line_end":823,"column_start":1,"column_end":80}},{"value":"/ multiplication.  However, due to the fact that standardised definitions of","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120501,"byte_end":120579,"line_start":824,"line_end":824,"column_start":1,"column_end":79}},{"value":"/ legacy protocols—such as x25519—require allowing unreduced 255-bit scalar","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120580,"byte_end":120661,"line_start":825,"line_end":825,"column_start":1,"column_end":78}},{"value":"/ invariants, when converting such an unreduced scalar's representation to","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120662,"byte_end":120738,"line_start":826,"line_end":826,"column_start":1,"column_end":77}},{"value":"/ radix-\\\\(2^{8}\\\\), we cannot guarantee the carry bit will fit in the last","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120739,"byte_end":120816,"line_start":827,"line_end":827,"column_start":1,"column_end":78}},{"value":"/ coefficient (the coefficients are `i8`s).  When, \\\\(w\\\\), the power-of-2 of","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120817,"byte_end":120896,"line_start":828,"line_end":828,"column_start":1,"column_end":80}},{"value":"/ the radix, is \\\\(w < 8\\\\), we can fold the final carry onto the last","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120897,"byte_end":120969,"line_start":829,"line_end":829,"column_start":1,"column_end":73}},{"value":"/ coefficient, \\\\(d\\\\), because \\\\(d < 2^{w/2}\\\\), so","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120970,"byte_end":121025,"line_start":830,"line_end":830,"column_start":1,"column_end":56}},{"value":"/ $$","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":121026,"byte_end":121032,"line_start":831,"line_end":831,"column_start":1,"column_end":7}},{"value":"/     d + carry \\cdot 2^{w} = d + 1 \\cdot 2^{w} < 2^{w+1} < 2^{8}","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":121033,"byte_end":121100,"line_start":832,"line_end":832,"column_start":1,"column_end":68}},{"value":"/ $$","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":121101,"byte_end":121107,"line_start":833,"line_end":833,"column_start":1,"column_end":7}},{"value":"/ When \\\\(w = 8\\\\), we can't fit \\\\(carry \\cdot 2^{w}\\\\) into an `i8`, so we","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":121108,"byte_end":121186,"line_start":834,"line_end":834,"column_start":1,"column_end":79}},{"value":"/ add the carry bit onto an additional coefficient.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":121187,"byte_end":121240,"line_start":835,"line_end":835,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":1795},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":125674,"byte_end":125702,"line_start":956,"line_end":956,"column_start":31,"column_end":59},"name":"EdwardsBasepointTableRadix64","qualname":"::edwards::EdwardsBasepointTableRadix64","value":"","parent":null,"children":[],"decl_id":null,"docs":" A precomputed table of multiples of a basepoint, for accelerating\n fixed-base scalar multiplication.  One table, for the Ed25519\n basepoint, is provided in the `constants` module.","sig":null,"attributes":[{"value":"/ A precomputed table of multiples of a basepoint, for accelerating","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":119693,"byte_end":119762,"line_start":806,"line_end":806,"column_start":1,"column_end":70}},{"value":"/ fixed-base scalar multiplication.  One table, for the Ed25519","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":119763,"byte_end":119828,"line_start":807,"line_end":807,"column_start":1,"column_end":66}},{"value":"/ basepoint, is provided in the `constants` module.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":119829,"byte_end":119882,"line_start":808,"line_end":808,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":119883,"byte_end":119886,"line_start":809,"line_end":809,"column_start":1,"column_end":4}},{"value":"/ The basepoint tables are reasonably large, so they should probably be boxed.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":119887,"byte_end":119967,"line_start":810,"line_end":810,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":119968,"byte_end":119971,"line_start":811,"line_end":811,"column_start":1,"column_end":4}},{"value":"/ The sizes for the tables and the number of additions required for one scalar","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":119972,"byte_end":120052,"line_start":812,"line_end":812,"column_start":1,"column_end":81}},{"value":"/ multiplication are as follows:","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120053,"byte_end":120087,"line_start":813,"line_end":813,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120088,"byte_end":120091,"line_start":814,"line_end":814,"column_start":1,"column_end":4}},{"value":"/ * [`EdwardsBasepointTableRadix16`]: 30KB, 64A","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120092,"byte_end":120141,"line_start":815,"line_end":815,"column_start":1,"column_end":50}},{"value":"/   (this is the default size, and is used for [`ED25519_BASEPOINT_TABLE`])","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120142,"byte_end":120219,"line_start":816,"line_end":816,"column_start":1,"column_end":78}},{"value":"/ * [`EdwardsBasepointTableRadix64`]: 120KB, 43A","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120220,"byte_end":120270,"line_start":817,"line_end":817,"column_start":1,"column_end":51}},{"value":"/ * [`EdwardsBasepointTableRadix128`]: 240KB, 37A","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120271,"byte_end":120322,"line_start":818,"line_end":818,"column_start":1,"column_end":52}},{"value":"/ * [`EdwardsBasepointTableRadix256`]: 480KB, 33A","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120323,"byte_end":120374,"line_start":819,"line_end":819,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120375,"byte_end":120378,"line_start":820,"line_end":820,"column_start":1,"column_end":4}},{"value":"/ # Why 33 additions for radix-256?","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120379,"byte_end":120416,"line_start":821,"line_end":821,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120417,"byte_end":120420,"line_start":822,"line_end":822,"column_start":1,"column_end":4}},{"value":"/ Normally, the radix-256 tables would allow for only 32 additions per scalar","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120421,"byte_end":120500,"line_start":823,"line_end":823,"column_start":1,"column_end":80}},{"value":"/ multiplication.  However, due to the fact that standardised definitions of","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120501,"byte_end":120579,"line_start":824,"line_end":824,"column_start":1,"column_end":79}},{"value":"/ legacy protocols—such as x25519—require allowing unreduced 255-bit scalar","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120580,"byte_end":120661,"line_start":825,"line_end":825,"column_start":1,"column_end":78}},{"value":"/ invariants, when converting such an unreduced scalar's representation to","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120662,"byte_end":120738,"line_start":826,"line_end":826,"column_start":1,"column_end":77}},{"value":"/ radix-\\\\(2^{8}\\\\), we cannot guarantee the carry bit will fit in the last","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120739,"byte_end":120816,"line_start":827,"line_end":827,"column_start":1,"column_end":78}},{"value":"/ coefficient (the coefficients are `i8`s).  When, \\\\(w\\\\), the power-of-2 of","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120817,"byte_end":120896,"line_start":828,"line_end":828,"column_start":1,"column_end":80}},{"value":"/ the radix, is \\\\(w < 8\\\\), we can fold the final carry onto the last","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120897,"byte_end":120969,"line_start":829,"line_end":829,"column_start":1,"column_end":73}},{"value":"/ coefficient, \\\\(d\\\\), because \\\\(d < 2^{w/2}\\\\), so","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120970,"byte_end":121025,"line_start":830,"line_end":830,"column_start":1,"column_end":56}},{"value":"/ $$","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":121026,"byte_end":121032,"line_start":831,"line_end":831,"column_start":1,"column_end":7}},{"value":"/     d + carry \\cdot 2^{w} = d + 1 \\cdot 2^{w} < 2^{w+1} < 2^{8}","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":121033,"byte_end":121100,"line_start":832,"line_end":832,"column_start":1,"column_end":68}},{"value":"/ $$","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":121101,"byte_end":121107,"line_start":833,"line_end":833,"column_start":1,"column_end":7}},{"value":"/ When \\\\(w = 8\\\\), we can't fit \\\\(carry \\cdot 2^{w}\\\\) into an `i8`, so we","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":121108,"byte_end":121186,"line_start":834,"line_end":834,"column_start":1,"column_end":79}},{"value":"/ add the carry bit onto an additional coefficient.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":121187,"byte_end":121240,"line_start":835,"line_end":835,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":1821},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":125817,"byte_end":125846,"line_start":957,"line_end":957,"column_start":31,"column_end":60},"name":"EdwardsBasepointTableRadix128","qualname":"::edwards::EdwardsBasepointTableRadix128","value":"","parent":null,"children":[],"decl_id":null,"docs":" A precomputed table of multiples of a basepoint, for accelerating\n fixed-base scalar multiplication.  One table, for the Ed25519\n basepoint, is provided in the `constants` module.","sig":null,"attributes":[{"value":"/ A precomputed table of multiples of a basepoint, for accelerating","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":119693,"byte_end":119762,"line_start":806,"line_end":806,"column_start":1,"column_end":70}},{"value":"/ fixed-base scalar multiplication.  One table, for the Ed25519","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":119763,"byte_end":119828,"line_start":807,"line_end":807,"column_start":1,"column_end":66}},{"value":"/ basepoint, is provided in the `constants` module.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":119829,"byte_end":119882,"line_start":808,"line_end":808,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":119883,"byte_end":119886,"line_start":809,"line_end":809,"column_start":1,"column_end":4}},{"value":"/ The basepoint tables are reasonably large, so they should probably be boxed.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":119887,"byte_end":119967,"line_start":810,"line_end":810,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":119968,"byte_end":119971,"line_start":811,"line_end":811,"column_start":1,"column_end":4}},{"value":"/ The sizes for the tables and the number of additions required for one scalar","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":119972,"byte_end":120052,"line_start":812,"line_end":812,"column_start":1,"column_end":81}},{"value":"/ multiplication are as follows:","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120053,"byte_end":120087,"line_start":813,"line_end":813,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120088,"byte_end":120091,"line_start":814,"line_end":814,"column_start":1,"column_end":4}},{"value":"/ * [`EdwardsBasepointTableRadix16`]: 30KB, 64A","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120092,"byte_end":120141,"line_start":815,"line_end":815,"column_start":1,"column_end":50}},{"value":"/   (this is the default size, and is used for [`ED25519_BASEPOINT_TABLE`])","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120142,"byte_end":120219,"line_start":816,"line_end":816,"column_start":1,"column_end":78}},{"value":"/ * [`EdwardsBasepointTableRadix64`]: 120KB, 43A","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120220,"byte_end":120270,"line_start":817,"line_end":817,"column_start":1,"column_end":51}},{"value":"/ * [`EdwardsBasepointTableRadix128`]: 240KB, 37A","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120271,"byte_end":120322,"line_start":818,"line_end":818,"column_start":1,"column_end":52}},{"value":"/ * [`EdwardsBasepointTableRadix256`]: 480KB, 33A","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120323,"byte_end":120374,"line_start":819,"line_end":819,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120375,"byte_end":120378,"line_start":820,"line_end":820,"column_start":1,"column_end":4}},{"value":"/ # Why 33 additions for radix-256?","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120379,"byte_end":120416,"line_start":821,"line_end":821,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120417,"byte_end":120420,"line_start":822,"line_end":822,"column_start":1,"column_end":4}},{"value":"/ Normally, the radix-256 tables would allow for only 32 additions per scalar","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120421,"byte_end":120500,"line_start":823,"line_end":823,"column_start":1,"column_end":80}},{"value":"/ multiplication.  However, due to the fact that standardised definitions of","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120501,"byte_end":120579,"line_start":824,"line_end":824,"column_start":1,"column_end":79}},{"value":"/ legacy protocols—such as x25519—require allowing unreduced 255-bit scalar","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120580,"byte_end":120661,"line_start":825,"line_end":825,"column_start":1,"column_end":78}},{"value":"/ invariants, when converting such an unreduced scalar's representation to","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120662,"byte_end":120738,"line_start":826,"line_end":826,"column_start":1,"column_end":77}},{"value":"/ radix-\\\\(2^{8}\\\\), we cannot guarantee the carry bit will fit in the last","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120739,"byte_end":120816,"line_start":827,"line_end":827,"column_start":1,"column_end":78}},{"value":"/ coefficient (the coefficients are `i8`s).  When, \\\\(w\\\\), the power-of-2 of","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120817,"byte_end":120896,"line_start":828,"line_end":828,"column_start":1,"column_end":80}},{"value":"/ the radix, is \\\\(w < 8\\\\), we can fold the final carry onto the last","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120897,"byte_end":120969,"line_start":829,"line_end":829,"column_start":1,"column_end":73}},{"value":"/ coefficient, \\\\(d\\\\), because \\\\(d < 2^{w/2}\\\\), so","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120970,"byte_end":121025,"line_start":830,"line_end":830,"column_start":1,"column_end":56}},{"value":"/ $$","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":121026,"byte_end":121032,"line_start":831,"line_end":831,"column_start":1,"column_end":7}},{"value":"/     d + carry \\cdot 2^{w} = d + 1 \\cdot 2^{w} < 2^{w+1} < 2^{8}","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":121033,"byte_end":121100,"line_start":832,"line_end":832,"column_start":1,"column_end":68}},{"value":"/ $$","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":121101,"byte_end":121107,"line_start":833,"line_end":833,"column_start":1,"column_end":7}},{"value":"/ When \\\\(w = 8\\\\), we can't fit \\\\(carry \\cdot 2^{w}\\\\) into an `i8`, so we","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":121108,"byte_end":121186,"line_start":834,"line_end":834,"column_start":1,"column_end":79}},{"value":"/ add the carry bit onto an additional coefficient.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":121187,"byte_end":121240,"line_start":835,"line_end":835,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":1847},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":125962,"byte_end":125991,"line_start":958,"line_end":958,"column_start":31,"column_end":60},"name":"EdwardsBasepointTableRadix256","qualname":"::edwards::EdwardsBasepointTableRadix256","value":"","parent":null,"children":[],"decl_id":null,"docs":" A precomputed table of multiples of a basepoint, for accelerating\n fixed-base scalar multiplication.  One table, for the Ed25519\n basepoint, is provided in the `constants` module.","sig":null,"attributes":[{"value":"/ A precomputed table of multiples of a basepoint, for accelerating","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":119693,"byte_end":119762,"line_start":806,"line_end":806,"column_start":1,"column_end":70}},{"value":"/ fixed-base scalar multiplication.  One table, for the Ed25519","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":119763,"byte_end":119828,"line_start":807,"line_end":807,"column_start":1,"column_end":66}},{"value":"/ basepoint, is provided in the `constants` module.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":119829,"byte_end":119882,"line_start":808,"line_end":808,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":119883,"byte_end":119886,"line_start":809,"line_end":809,"column_start":1,"column_end":4}},{"value":"/ The basepoint tables are reasonably large, so they should probably be boxed.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":119887,"byte_end":119967,"line_start":810,"line_end":810,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":119968,"byte_end":119971,"line_start":811,"line_end":811,"column_start":1,"column_end":4}},{"value":"/ The sizes for the tables and the number of additions required for one scalar","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":119972,"byte_end":120052,"line_start":812,"line_end":812,"column_start":1,"column_end":81}},{"value":"/ multiplication are as follows:","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120053,"byte_end":120087,"line_start":813,"line_end":813,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120088,"byte_end":120091,"line_start":814,"line_end":814,"column_start":1,"column_end":4}},{"value":"/ * [`EdwardsBasepointTableRadix16`]: 30KB, 64A","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120092,"byte_end":120141,"line_start":815,"line_end":815,"column_start":1,"column_end":50}},{"value":"/   (this is the default size, and is used for [`ED25519_BASEPOINT_TABLE`])","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120142,"byte_end":120219,"line_start":816,"line_end":816,"column_start":1,"column_end":78}},{"value":"/ * [`EdwardsBasepointTableRadix64`]: 120KB, 43A","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120220,"byte_end":120270,"line_start":817,"line_end":817,"column_start":1,"column_end":51}},{"value":"/ * [`EdwardsBasepointTableRadix128`]: 240KB, 37A","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120271,"byte_end":120322,"line_start":818,"line_end":818,"column_start":1,"column_end":52}},{"value":"/ * [`EdwardsBasepointTableRadix256`]: 480KB, 33A","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120323,"byte_end":120374,"line_start":819,"line_end":819,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120375,"byte_end":120378,"line_start":820,"line_end":820,"column_start":1,"column_end":4}},{"value":"/ # Why 33 additions for radix-256?","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120379,"byte_end":120416,"line_start":821,"line_end":821,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120417,"byte_end":120420,"line_start":822,"line_end":822,"column_start":1,"column_end":4}},{"value":"/ Normally, the radix-256 tables would allow for only 32 additions per scalar","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120421,"byte_end":120500,"line_start":823,"line_end":823,"column_start":1,"column_end":80}},{"value":"/ multiplication.  However, due to the fact that standardised definitions of","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120501,"byte_end":120579,"line_start":824,"line_end":824,"column_start":1,"column_end":79}},{"value":"/ legacy protocols—such as x25519—require allowing unreduced 255-bit scalar","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120580,"byte_end":120661,"line_start":825,"line_end":825,"column_start":1,"column_end":78}},{"value":"/ invariants, when converting such an unreduced scalar's representation to","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120662,"byte_end":120738,"line_start":826,"line_end":826,"column_start":1,"column_end":77}},{"value":"/ radix-\\\\(2^{8}\\\\), we cannot guarantee the carry bit will fit in the last","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120739,"byte_end":120816,"line_start":827,"line_end":827,"column_start":1,"column_end":78}},{"value":"/ coefficient (the coefficients are `i8`s).  When, \\\\(w\\\\), the power-of-2 of","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120817,"byte_end":120896,"line_start":828,"line_end":828,"column_start":1,"column_end":80}},{"value":"/ the radix, is \\\\(w < 8\\\\), we can fold the final carry onto the last","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120897,"byte_end":120969,"line_start":829,"line_end":829,"column_start":1,"column_end":73}},{"value":"/ coefficient, \\\\(d\\\\), because \\\\(d < 2^{w/2}\\\\), so","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":120970,"byte_end":121025,"line_start":830,"line_end":830,"column_start":1,"column_end":56}},{"value":"/ $$","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":121026,"byte_end":121032,"line_start":831,"line_end":831,"column_start":1,"column_end":7}},{"value":"/     d + carry \\cdot 2^{w} = d + 1 \\cdot 2^{w} < 2^{w+1} < 2^{8}","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":121033,"byte_end":121100,"line_start":832,"line_end":832,"column_start":1,"column_end":68}},{"value":"/ $$","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":121101,"byte_end":121107,"line_start":833,"line_end":833,"column_start":1,"column_end":7}},{"value":"/ When \\\\(w = 8\\\\), we can't fit \\\\(carry \\cdot 2^{w}\\\\) into an `i8`, so we","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":121108,"byte_end":121186,"line_start":834,"line_end":834,"column_start":1,"column_end":79}},{"value":"/ add the carry bit onto an additional coefficient.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":121187,"byte_end":121240,"line_start":835,"line_end":835,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":1853},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":127919,"byte_end":127940,"line_start":995,"line_end":995,"column_start":12,"column_end":33},"name":"EdwardsBasepointTable","qualname":"::edwards::EdwardsBasepointTable","value":"","parent":null,"children":[],"decl_id":null,"docs":" A precomputed table of multiples of a basepoint, for accelerating\n fixed-base scalar multiplication.  One table, for the Ed25519\n basepoint, is provided in the `constants` module.","sig":null,"attributes":[{"value":"/ A precomputed table of multiples of a basepoint, for accelerating","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":126343,"byte_end":126412,"line_start":964,"line_end":964,"column_start":1,"column_end":70}},{"value":"/ fixed-base scalar multiplication.  One table, for the Ed25519","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":126413,"byte_end":126478,"line_start":965,"line_end":965,"column_start":1,"column_end":66}},{"value":"/ basepoint, is provided in the `constants` module.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":126479,"byte_end":126532,"line_start":966,"line_end":966,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":126533,"byte_end":126536,"line_start":967,"line_end":967,"column_start":1,"column_end":4}},{"value":"/ The basepoint tables are reasonably large, so they should probably be boxed.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":126537,"byte_end":126617,"line_start":968,"line_end":968,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":126618,"byte_end":126621,"line_start":969,"line_end":969,"column_start":1,"column_end":4}},{"value":"/ The sizes for the tables and the number of additions required for one scalar","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":126622,"byte_end":126702,"line_start":970,"line_end":970,"column_start":1,"column_end":81}},{"value":"/ multiplication are as follows:","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":126703,"byte_end":126737,"line_start":971,"line_end":971,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":126738,"byte_end":126741,"line_start":972,"line_end":972,"column_start":1,"column_end":4}},{"value":"/ * [`EdwardsBasepointTableRadix16`]: 30KB, 64A","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":126742,"byte_end":126791,"line_start":973,"line_end":973,"column_start":1,"column_end":50}},{"value":"/   (this is the default size, and is used for [`ED25519_BASEPOINT_TABLE`])","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":126792,"byte_end":126869,"line_start":974,"line_end":974,"column_start":1,"column_end":78}},{"value":"/ * [`EdwardsBasepointTableRadix64`]: 120KB, 43A","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":126870,"byte_end":126920,"line_start":975,"line_end":975,"column_start":1,"column_end":51}},{"value":"/ * [`EdwardsBasepointTableRadix128`]: 240KB, 37A","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":126921,"byte_end":126972,"line_start":976,"line_end":976,"column_start":1,"column_end":52}},{"value":"/ * [`EdwardsBasepointTableRadix256`]: 480KB, 33A","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":126973,"byte_end":127024,"line_start":977,"line_end":977,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":127025,"byte_end":127028,"line_start":978,"line_end":978,"column_start":1,"column_end":4}},{"value":"/ # Why 33 additions for radix-256?","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":127029,"byte_end":127066,"line_start":979,"line_end":979,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":127067,"byte_end":127070,"line_start":980,"line_end":980,"column_start":1,"column_end":4}},{"value":"/ Normally, the radix-256 tables would allow for only 32 additions per scalar","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":127071,"byte_end":127150,"line_start":981,"line_end":981,"column_start":1,"column_end":80}},{"value":"/ multiplication.  However, due to the fact that standardised definitions of","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":127151,"byte_end":127229,"line_start":982,"line_end":982,"column_start":1,"column_end":79}},{"value":"/ legacy protocols—such as x25519—require allowing unreduced 255-bit scalar","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":127230,"byte_end":127311,"line_start":983,"line_end":983,"column_start":1,"column_end":78}},{"value":"/ invariants, when converting such an unreduced scalar's representation to","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":127312,"byte_end":127388,"line_start":984,"line_end":984,"column_start":1,"column_end":77}},{"value":"/ radix-\\\\(2^{8}\\\\), we cannot guarantee the carry bit will fit in the last","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":127389,"byte_end":127466,"line_start":985,"line_end":985,"column_start":1,"column_end":78}},{"value":"/ coefficient (the coefficients are `i8`s).  When, \\\\(w\\\\), the power-of-2 of","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":127467,"byte_end":127546,"line_start":986,"line_end":986,"column_start":1,"column_end":80}},{"value":"/ the radix, is \\\\(w < 8\\\\), we can fold the final carry onto the last","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":127547,"byte_end":127619,"line_start":987,"line_end":987,"column_start":1,"column_end":73}},{"value":"/ coefficient, \\\\(d\\\\), because \\\\(d < 2^{w/2}\\\\), so","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":127620,"byte_end":127675,"line_start":988,"line_end":988,"column_start":1,"column_end":56}},{"value":"/ $$","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":127676,"byte_end":127682,"line_start":989,"line_end":989,"column_start":1,"column_end":7}},{"value":"/     d + carry \\cdot 2^{w} = d + 1 \\cdot 2^{w} < 2^{w+1} < 2^{8}","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":127683,"byte_end":127750,"line_start":990,"line_end":990,"column_start":1,"column_end":68}},{"value":"/ $$","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":127751,"byte_end":127757,"line_start":991,"line_end":991,"column_start":1,"column_end":7}},{"value":"/ When \\\\(w = 8\\\\), we can't fit \\\\(carry \\cdot 2^{w}\\\\) into an `i8`, so we","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":127758,"byte_end":127836,"line_start":992,"line_end":992,"column_start":1,"column_end":79}},{"value":"/ add the carry bit onto an additional coefficient.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":127837,"byte_end":127890,"line_start":993,"line_end":993,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":128118,"byte_end":128124,"line_start":1000,"line_end":1000,"column_start":12,"column_end":18},"name":"create","qualname":"<EdwardsBasepointTable>::create","value":"pub fn create(&EdwardsPoint) -> EdwardsBasepointTable","parent":null,"children":[],"decl_id":null,"docs":" Create a table of precomputed multiples of `basepoint`.\n","sig":null,"attributes":[{"value":"/ Create a table of precomputed multiples of `basepoint`.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":128024,"byte_end":128083,"line_start":998,"line_end":998,"column_start":5,"column_end":64}},{"value":"allow(warnings)","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":128088,"byte_end":128106,"line_start":999,"line_end":999,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":129570,"byte_end":129583,"line_start":1032,"line_end":1032,"column_start":12,"column_end":25},"name":"basepoint_mul","qualname":"<EdwardsBasepointTable>::basepoint_mul","value":"pub fn basepoint_mul(&Self, &Scalar) -> EdwardsPoint","parent":null,"children":[],"decl_id":null,"docs":" The computation uses Pippenger's algorithm, as described on\n page 13 of the Ed25519 paper.  Write the scalar \\\\(a\\\\) in radix \\\\(16\\\\) with\n coefficients in \\\\([-8,8)\\\\), i.e.,\n $$\n     a = a\\_0 + a\\_1 16\\^1 + \\cdots + a\\_{63} 16\\^{63},\n $$\n with \\\\(-8 \\leq a_i < 8\\\\), \\\\(-8 \\leq a\\_{63} \\leq 8\\\\).  Then\n $$\n     a B = a\\_0 B + a\\_1 16\\^1 B + \\cdots + a\\_{63} 16\\^{63} B.\n $$\n Grouping even and odd coefficients gives\n $$\n \\begin{aligned}\n     a B = \\quad a\\_0 16\\^0 B +& a\\_2 16\\^2 B + \\cdots + a\\_{62} 16\\^{62} B    \\\\\\\\\n               + a\\_1 16\\^1 B +& a\\_3 16\\^3 B + \\cdots + a\\_{63} 16\\^{63} B    \\\\\\\\\n         = \\quad(a\\_0 16\\^0 B +& a\\_2 16\\^2 B + \\cdots + a\\_{62} 16\\^{62} B)   \\\\\\\\\n            + 16(a\\_1 16\\^0 B +& a\\_3 16\\^2 B + \\cdots + a\\_{63} 16\\^{62} B).  \\\\\\\\\n \\end{aligned}\n $$\n For each \\\\(i = 0 \\ldots 31\\\\), we create a lookup table of\n $$\n [16\\^{2i} B, \\ldots, 8\\cdot16\\^{2i} B],\n $$\n and use it to select \\\\( x \\cdot 16\\^{2i} \\cdot B \\\\) in constant time.","sig":null,"attributes":[{"value":"/ The computation uses Pippenger's algorithm, as described on","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":128253,"byte_end":128316,"line_start":1004,"line_end":1004,"column_start":5,"column_end":68}},{"value":"/ page 13 of the Ed25519 paper.  Write the scalar \\\\(a\\\\) in radix \\\\(16\\\\) with","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":128321,"byte_end":128403,"line_start":1005,"line_end":1005,"column_start":5,"column_end":87}},{"value":"/ coefficients in \\\\([-8,8)\\\\), i.e.,","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":128408,"byte_end":128447,"line_start":1006,"line_end":1006,"column_start":5,"column_end":44}},{"value":"/ $$","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":128452,"byte_end":128458,"line_start":1007,"line_end":1007,"column_start":5,"column_end":11}},{"value":"/     a = a\\_0 + a\\_1 16\\^1 + \\cdots + a\\_{63} 16\\^{63},","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":128463,"byte_end":128521,"line_start":1008,"line_end":1008,"column_start":5,"column_end":63}},{"value":"/ $$","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":128526,"byte_end":128532,"line_start":1009,"line_end":1009,"column_start":5,"column_end":11}},{"value":"/ with \\\\(-8 \\leq a_i < 8\\\\), \\\\(-8 \\leq a\\_{63} \\leq 8\\\\).  Then","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":128537,"byte_end":128604,"line_start":1010,"line_end":1010,"column_start":5,"column_end":72}},{"value":"/ $$","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":128609,"byte_end":128615,"line_start":1011,"line_end":1011,"column_start":5,"column_end":11}},{"value":"/     a B = a\\_0 B + a\\_1 16\\^1 B + \\cdots + a\\_{63} 16\\^{63} B.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":128620,"byte_end":128686,"line_start":1012,"line_end":1012,"column_start":5,"column_end":71}},{"value":"/ $$","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":128691,"byte_end":128697,"line_start":1013,"line_end":1013,"column_start":5,"column_end":11}},{"value":"/ Grouping even and odd coefficients gives","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":128702,"byte_end":128746,"line_start":1014,"line_end":1014,"column_start":5,"column_end":49}},{"value":"/ $$","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":128751,"byte_end":128757,"line_start":1015,"line_end":1015,"column_start":5,"column_end":11}},{"value":"/ \\begin{aligned}","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":128762,"byte_end":128781,"line_start":1016,"line_end":1016,"column_start":5,"column_end":24}},{"value":"/     a B = \\quad a\\_0 16\\^0 B +& a\\_2 16\\^2 B + \\cdots + a\\_{62} 16\\^{62} B    \\\\\\\\","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":128786,"byte_end":128872,"line_start":1017,"line_end":1017,"column_start":5,"column_end":91}},{"value":"/               + a\\_1 16\\^1 B +& a\\_3 16\\^3 B + \\cdots + a\\_{63} 16\\^{63} B    \\\\\\\\","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":128877,"byte_end":128963,"line_start":1018,"line_end":1018,"column_start":5,"column_end":91}},{"value":"/         = \\quad(a\\_0 16\\^0 B +& a\\_2 16\\^2 B + \\cdots + a\\_{62} 16\\^{62} B)   \\\\\\\\","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":128968,"byte_end":129054,"line_start":1019,"line_end":1019,"column_start":5,"column_end":91}},{"value":"/            + 16(a\\_1 16\\^0 B +& a\\_3 16\\^2 B + \\cdots + a\\_{63} 16\\^{62} B).  \\\\\\\\","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":129059,"byte_end":129145,"line_start":1020,"line_end":1020,"column_start":5,"column_end":91}},{"value":"/ \\end{aligned}","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":129150,"byte_end":129167,"line_start":1021,"line_end":1021,"column_start":5,"column_end":22}},{"value":"/ $$","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":129172,"byte_end":129178,"line_start":1022,"line_end":1022,"column_start":5,"column_end":11}},{"value":"/ For each \\\\(i = 0 \\ldots 31\\\\), we create a lookup table of","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":129183,"byte_end":129246,"line_start":1023,"line_end":1023,"column_start":5,"column_end":68}},{"value":"/ $$","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":129251,"byte_end":129257,"line_start":1024,"line_end":1024,"column_start":5,"column_end":11}},{"value":"/ [16\\^{2i} B, \\ldots, 8\\cdot16\\^{2i} B],","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":129262,"byte_end":129305,"line_start":1025,"line_end":1025,"column_start":5,"column_end":48}},{"value":"/ $$","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":129310,"byte_end":129316,"line_start":1026,"line_end":1026,"column_start":5,"column_end":11}},{"value":"/ and use it to select \\\\( x \\cdot 16\\^{2i} \\cdot B \\\\) in constant time.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":129321,"byte_end":129396,"line_start":1027,"line_end":1027,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":129401,"byte_end":129404,"line_start":1028,"line_end":1028,"column_start":5,"column_end":8}},{"value":"/ The radix-\\\\(16\\\\) representation requires that the scalar is bounded","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":129409,"byte_end":129482,"line_start":1029,"line_end":1029,"column_start":5,"column_end":78}},{"value":"/ by \\\\(2\\^{255}\\\\), which is always the case.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":129487,"byte_end":129535,"line_start":1030,"line_end":1030,"column_start":5,"column_end":53}},{"value":"allow(warnings)","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":129540,"byte_end":129558,"line_start":1031,"line_end":1031,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":607},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":130138,"byte_end":130147,"line_start":1053,"line_end":1053,"column_start":12,"column_end":21},"name":"basepoint","qualname":"<EdwardsBasepointTable>::basepoint","value":"pub fn basepoint(&Self) -> EdwardsPoint","parent":null,"children":[],"decl_id":null,"docs":" Get the basepoint for this table as an `EdwardsPoint`.\n","sig":null,"attributes":[{"value":"/ Get the basepoint for this table as an `EdwardsPoint`.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":130045,"byte_end":130103,"line_start":1051,"line_end":1051,"column_start":5,"column_end":63}},{"value":"allow(warnings)","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":130108,"byte_end":130126,"line_start":1052,"line_end":1052,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":620},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":132861,"byte_end":132876,"line_start":1115,"line_end":1115,"column_start":12,"column_end":27},"name":"mul_by_cofactor","qualname":"<EdwardsPoint>::mul_by_cofactor","value":"pub fn mul_by_cofactor(&Self) -> EdwardsPoint","parent":null,"children":[],"decl_id":null,"docs":" Multiply by the cofactor: return \\\\([8]P\\\\).\n","sig":null,"attributes":[{"value":"/ Multiply by the cofactor: return \\\\([8]P\\\\).","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":132801,"byte_end":132849,"line_start":1114,"line_end":1114,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":622},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":134109,"byte_end":134123,"line_start":1154,"line_end":1154,"column_start":12,"column_end":26},"name":"is_small_order","qualname":"<EdwardsPoint>::is_small_order","value":"pub fn is_small_order(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determine if this point is of small order.","sig":null,"attributes":[{"value":"/ Determine if this point is of small order.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":133394,"byte_end":133440,"line_start":1131,"line_end":1131,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":133445,"byte_end":133448,"line_start":1132,"line_end":1132,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":133453,"byte_end":133465,"line_start":1133,"line_end":1133,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":133470,"byte_end":133473,"line_start":1134,"line_end":1134,"column_start":5,"column_end":8}},{"value":"/ * `true` if `self` is in the torsion subgroup \\\\( \\mathcal E[8] \\\\);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":133478,"byte_end":133550,"line_start":1135,"line_end":1135,"column_start":5,"column_end":77}},{"value":"/ * `false` if `self` is not in the torsion subgroup \\\\( \\mathcal E[8] \\\\).","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":133555,"byte_end":133632,"line_start":1136,"line_end":1136,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":133637,"byte_end":133640,"line_start":1137,"line_end":1137,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":133645,"byte_end":133658,"line_start":1138,"line_end":1138,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":133663,"byte_end":133666,"line_start":1139,"line_end":1139,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":133671,"byte_end":133678,"line_start":1140,"line_end":1140,"column_start":5,"column_end":12}},{"value":"/ use curve25519_dalek::constants;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":133683,"byte_end":133719,"line_start":1141,"line_end":1141,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":133724,"byte_end":133727,"line_start":1142,"line_end":1142,"column_start":5,"column_end":8}},{"value":"/ // Generator of the prime-order subgroup","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":133732,"byte_end":133776,"line_start":1143,"line_end":1143,"column_start":5,"column_end":49}},{"value":"/ let P = constants::ED25519_BASEPOINT_POINT;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":133781,"byte_end":133828,"line_start":1144,"line_end":1144,"column_start":5,"column_end":52}},{"value":"/ // Generator of the torsion subgroup","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":133833,"byte_end":133873,"line_start":1145,"line_end":1145,"column_start":5,"column_end":45}},{"value":"/ let Q = constants::EIGHT_TORSION[1];","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":133878,"byte_end":133918,"line_start":1146,"line_end":1146,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":133923,"byte_end":133926,"line_start":1147,"line_end":1147,"column_start":5,"column_end":8}},{"value":"/ // P has large order","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":133931,"byte_end":133955,"line_start":1148,"line_end":1148,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(P.is_small_order(), false);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":133960,"byte_end":134002,"line_start":1149,"line_end":1149,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":134007,"byte_end":134010,"line_start":1150,"line_end":1150,"column_start":5,"column_end":8}},{"value":"/ // Q has small order","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":134015,"byte_end":134039,"line_start":1151,"line_end":1151,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Q.is_small_order(), true);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":134044,"byte_end":134085,"line_start":1152,"line_end":1152,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":134090,"byte_end":134097,"line_start":1153,"line_end":1153,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":623},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":135033,"byte_end":135048,"line_start":1184,"line_end":1184,"column_start":12,"column_end":27},"name":"is_torsion_free","qualname":"<EdwardsPoint>::is_torsion_free","value":"pub fn is_torsion_free(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determine if this point is “torsion-free”, i.e., is contained in\n the prime-order subgroup.","sig":null,"attributes":[{"value":"/ Determine if this point is “torsion-free”, i.e., is contained in","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":134197,"byte_end":134269,"line_start":1158,"line_end":1158,"column_start":5,"column_end":73}},{"value":"/ the prime-order subgroup.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":134274,"byte_end":134303,"line_start":1159,"line_end":1159,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":134308,"byte_end":134311,"line_start":1160,"line_end":1160,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":134316,"byte_end":134328,"line_start":1161,"line_end":1161,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":134333,"byte_end":134336,"line_start":1162,"line_end":1162,"column_start":5,"column_end":8}},{"value":"/ * `true` if `self` has zero torsion component and is in the","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":134341,"byte_end":134404,"line_start":1163,"line_end":1163,"column_start":5,"column_end":68}},{"value":"/ prime-order subgroup;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":134409,"byte_end":134434,"line_start":1164,"line_end":1164,"column_start":5,"column_end":30}},{"value":"/ * `false` if `self` has a nonzero torsion component and is not","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":134439,"byte_end":134505,"line_start":1165,"line_end":1165,"column_start":5,"column_end":71}},{"value":"/ in the prime-order subgroup.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":134510,"byte_end":134542,"line_start":1166,"line_end":1166,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":134547,"byte_end":134550,"line_start":1167,"line_end":1167,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":134555,"byte_end":134568,"line_start":1168,"line_end":1168,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":134573,"byte_end":134576,"line_start":1169,"line_end":1169,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":134581,"byte_end":134588,"line_start":1170,"line_end":1170,"column_start":5,"column_end":12}},{"value":"/ use curve25519_dalek::constants;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":134593,"byte_end":134629,"line_start":1171,"line_end":1171,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":134634,"byte_end":134637,"line_start":1172,"line_end":1172,"column_start":5,"column_end":8}},{"value":"/ // Generator of the prime-order subgroup","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":134642,"byte_end":134686,"line_start":1173,"line_end":1173,"column_start":5,"column_end":49}},{"value":"/ let P = constants::ED25519_BASEPOINT_POINT;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":134691,"byte_end":134738,"line_start":1174,"line_end":1174,"column_start":5,"column_end":52}},{"value":"/ // Generator of the torsion subgroup","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":134743,"byte_end":134783,"line_start":1175,"line_end":1175,"column_start":5,"column_end":45}},{"value":"/ let Q = constants::EIGHT_TORSION[1];","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":134788,"byte_end":134828,"line_start":1176,"line_end":1176,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":134833,"byte_end":134836,"line_start":1177,"line_end":1177,"column_start":5,"column_end":8}},{"value":"/ // P is torsion-free","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":134841,"byte_end":134865,"line_start":1178,"line_end":1178,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(P.is_torsion_free(), true);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":134870,"byte_end":134912,"line_start":1179,"line_end":1179,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":134917,"byte_end":134920,"line_start":1180,"line_end":1180,"column_start":5,"column_end":8}},{"value":"/ // P + Q is not torsion-free","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":134925,"byte_end":134957,"line_start":1181,"line_end":1181,"column_start":5,"column_end":37}},{"value":"/ assert_eq!((P+Q).is_torsion_free(), false);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":134962,"byte_end":135009,"line_start":1182,"line_end":1182,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":135014,"byte_end":135021,"line_start":1183,"line_end":1183,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":626},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ristretto","qualname":"::ristretto","value":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","parent":null,"children":[{"krate":0,"index":627},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":633},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":640},{"krate":0,"index":643},{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":650},{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":657},{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":664},{"krate":0,"index":667},{"krate":0,"index":670},{"krate":0,"index":673},{"krate":0,"index":676},{"krate":0,"index":679},{"krate":0,"index":682},{"krate":0,"index":685},{"krate":0,"index":688},{"krate":0,"index":691},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":697},{"krate":0,"index":700},{"krate":0,"index":701},{"krate":0,"index":704},{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":711},{"krate":0,"index":714},{"krate":0,"index":717},{"krate":0,"index":1919},{"krate":0,"index":1923},{"krate":0,"index":1924},{"krate":0,"index":1927},{"krate":0,"index":1928},{"krate":0,"index":1931},{"krate":0,"index":1932},{"krate":0,"index":1935},{"krate":0,"index":720},{"krate":0,"index":722},{"krate":0,"index":730},{"krate":0,"index":733},{"krate":0,"index":1938},{"krate":0,"index":1941},{"krate":0,"index":1942},{"krate":0,"index":735},{"krate":0,"index":765},{"krate":0,"index":767},{"krate":0,"index":769},{"krate":0,"index":771},{"krate":0,"index":773},{"krate":0,"index":774},{"krate":0,"index":1956},{"krate":0,"index":1960},{"krate":0,"index":1964},{"krate":0,"index":779},{"krate":0,"index":1967},{"krate":0,"index":782},{"krate":0,"index":1969},{"krate":0,"index":1973},{"krate":0,"index":1977},{"krate":0,"index":787},{"krate":0,"index":1980},{"krate":0,"index":790},{"krate":0,"index":795},{"krate":0,"index":799},{"krate":0,"index":802},{"krate":0,"index":805},{"krate":0,"index":810},{"krate":0,"index":1982},{"krate":0,"index":1984},{"krate":0,"index":1988},{"krate":0,"index":1992},{"krate":0,"index":1995},{"krate":0,"index":1999},{"krate":0,"index":2003},{"krate":0,"index":815},{"krate":0,"index":821},{"krate":0,"index":828},{"krate":0,"index":831},{"krate":0,"index":842},{"krate":0,"index":2006},{"krate":0,"index":2009},{"krate":0,"index":844},{"krate":0,"index":849},{"krate":0,"index":854},{"krate":0,"index":857},{"krate":0,"index":859},{"krate":0,"index":861},{"krate":0,"index":863},{"krate":0,"index":865}],"decl_id":null,"docs":" An implementation of [Ristretto][ristretto_main], which provides a\n prime-order group.","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":159747,"byte_end":159772,"line_start":16,"line_end":16,"column_start":1,"column_end":26}},{"value":"/ An implementation of [Ristretto][ristretto_main], which provides a","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":159774,"byte_end":159844,"line_start":18,"line_end":18,"column_start":1,"column_end":71}},{"value":"/ prime-order group.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":159845,"byte_end":159867,"line_start":19,"line_end":19,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":159868,"byte_end":159871,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # The Ristretto Group","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":159872,"byte_end":159897,"line_start":21,"line_end":21,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":159898,"byte_end":159901,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Ristretto is a modification of Mike Hamburg's Decaf scheme to work","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":159902,"byte_end":159972,"line_start":23,"line_end":23,"column_start":1,"column_end":71}},{"value":"/ with cofactor-\\\\(8\\\\) curves, such as Curve25519.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":159973,"byte_end":160026,"line_start":24,"line_end":24,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":160027,"byte_end":160030,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The introduction of the Decaf paper, [_Decaf:","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":160031,"byte_end":160080,"line_start":26,"line_end":26,"column_start":1,"column_end":50}},{"value":"/ Eliminating cofactors through point","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":160081,"byte_end":160120,"line_start":27,"line_end":27,"column_start":1,"column_end":40}},{"value":"/ compression_](https://eprint.iacr.org/2015/673.pdf), notes that while","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":160121,"byte_end":160194,"line_start":28,"line_end":28,"column_start":1,"column_end":74}},{"value":"/ most cryptographic systems require a group of prime order, most","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":160195,"byte_end":160262,"line_start":29,"line_end":29,"column_start":1,"column_end":68}},{"value":"/ concrete implementations using elliptic curve groups fall short –","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":160263,"byte_end":160334,"line_start":30,"line_end":30,"column_start":1,"column_end":70}},{"value":"/ they either provide a group of prime order, but with incomplete or","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":160335,"byte_end":160405,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/ variable-time addition formulae (for instance, most Weierstrass","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":160406,"byte_end":160473,"line_start":32,"line_end":32,"column_start":1,"column_end":68}},{"value":"/ models), or else they provide a fast and safe implementation of a","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":160474,"byte_end":160543,"line_start":33,"line_end":33,"column_start":1,"column_end":70}},{"value":"/ group whose order is not quite a prime \\\\(q\\\\), but \\\\(hq\\\\) for a","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":160544,"byte_end":160614,"line_start":34,"line_end":34,"column_start":1,"column_end":71}},{"value":"/ small cofactor \\\\(h\\\\) (for instance, Edwards curves, which have","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":160615,"byte_end":160683,"line_start":35,"line_end":35,"column_start":1,"column_end":69}},{"value":"/ cofactor at least \\\\(4\\\\)).","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":160684,"byte_end":160715,"line_start":36,"line_end":36,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":160716,"byte_end":160719,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ This abstraction mismatch is commonly “handled” by pushing the","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":160720,"byte_end":160790,"line_start":38,"line_end":38,"column_start":1,"column_end":67}},{"value":"/ complexity upwards, adding ad-hoc protocol modifications.  But","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":160791,"byte_end":160857,"line_start":39,"line_end":39,"column_start":1,"column_end":67}},{"value":"/ these modifications require careful analysis and are a recurring","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":160858,"byte_end":160926,"line_start":40,"line_end":40,"column_start":1,"column_end":69}},{"value":"/ source of [vulnerabilities][cryptonote] and [design","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":160927,"byte_end":160982,"line_start":41,"line_end":41,"column_start":1,"column_end":56}},{"value":"/ complications][ed25519_hkd].","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":160983,"byte_end":161015,"line_start":42,"line_end":42,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":161016,"byte_end":161019,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Instead, Decaf (and Ristretto) use a quotient group to implement a","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":161020,"byte_end":161090,"line_start":44,"line_end":44,"column_start":1,"column_end":71}},{"value":"/ prime-order group using a non-prime-order curve.  This provides","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":161091,"byte_end":161158,"line_start":45,"line_end":45,"column_start":1,"column_end":68}},{"value":"/ the correct abstraction for cryptographic systems, while retaining","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":161159,"byte_end":161229,"line_start":46,"line_end":46,"column_start":1,"column_end":71}},{"value":"/ the speed and safety benefits of an Edwards curve.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":161230,"byte_end":161284,"line_start":47,"line_end":47,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":161285,"byte_end":161288,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ Decaf is named “after the procedure which divides the effect of","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":161289,"byte_end":161358,"line_start":49,"line_end":49,"column_start":1,"column_end":68}},{"value":"/ coffee by \\\\(4\\\\)”.  However, Curve25519 has a cofactor of","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":161359,"byte_end":161423,"line_start":50,"line_end":50,"column_start":1,"column_end":63}},{"value":"/ \\\\(8\\\\).  To eliminate its cofactor, Ristretto restricts further;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":161424,"byte_end":161493,"line_start":51,"line_end":51,"column_start":1,"column_end":70}},{"value":"/ this [additional restriction][ristretto_coffee] gives the","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":161494,"byte_end":161555,"line_start":52,"line_end":52,"column_start":1,"column_end":62}},{"value":"/ _Ristretto_ encoding.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":161556,"byte_end":161581,"line_start":53,"line_end":53,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":161582,"byte_end":161585,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ More details on why Ristretto is necessary can be found in the","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":161586,"byte_end":161652,"line_start":55,"line_end":55,"column_start":1,"column_end":67}},{"value":"/ [Why Ristretto?][why_ristretto] section of the Ristretto website.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":161653,"byte_end":161722,"line_start":56,"line_end":56,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":161723,"byte_end":161726,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ Ristretto","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":161727,"byte_end":161740,"line_start":58,"line_end":58,"column_start":1,"column_end":14}},{"value":"/ points are provided in `curve25519-dalek` by the `RistrettoPoint`","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":161741,"byte_end":161810,"line_start":59,"line_end":59,"column_start":1,"column_end":70}},{"value":"/ struct.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":161811,"byte_end":161822,"line_start":60,"line_end":60,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":161823,"byte_end":161826,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ## Encoding and Decoding","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":161827,"byte_end":161855,"line_start":62,"line_end":62,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":161856,"byte_end":161859,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Encoding is done by converting to and from a `CompressedRistretto`","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":161860,"byte_end":161930,"line_start":64,"line_end":64,"column_start":1,"column_end":71}},{"value":"/ struct, which is a typed wrapper around `[u8; 32]`.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":161931,"byte_end":161986,"line_start":65,"line_end":65,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":161987,"byte_end":161990,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ The encoding is not batchable, but it is possible to","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":161991,"byte_end":162047,"line_start":67,"line_end":67,"column_start":1,"column_end":57}},{"value":"/ double-and-encode in a batch using","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":162048,"byte_end":162086,"line_start":68,"line_end":68,"column_start":1,"column_end":39}},{"value":"/ `RistrettoPoint::double_and_compress_batch`.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":162087,"byte_end":162135,"line_start":69,"line_end":69,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":162136,"byte_end":162139,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ## Equality Testing","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":162140,"byte_end":162163,"line_start":71,"line_end":71,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":162164,"byte_end":162167,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ Testing equality of points on an Edwards curve in projective","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":162168,"byte_end":162232,"line_start":73,"line_end":73,"column_start":1,"column_end":65}},{"value":"/ coordinates requires an expensive inversion.  By contrast, equality","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":162233,"byte_end":162304,"line_start":74,"line_end":74,"column_start":1,"column_end":72}},{"value":"/ checking in the Ristretto group can be done in projective","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":162305,"byte_end":162366,"line_start":75,"line_end":75,"column_start":1,"column_end":62}},{"value":"/ coordinates without requiring an inversion, so it is much faster.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":162367,"byte_end":162436,"line_start":76,"line_end":76,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":162437,"byte_end":162440,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ The `RistrettoPoint` struct implements the","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":162441,"byte_end":162487,"line_start":78,"line_end":78,"column_start":1,"column_end":47}},{"value":"/ `subtle::ConstantTimeEq` trait for constant-time equality","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":162488,"byte_end":162549,"line_start":79,"line_end":79,"column_start":1,"column_end":62}},{"value":"/ checking, and the Rust `Eq` trait for variable-time equality","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":162550,"byte_end":162614,"line_start":80,"line_end":80,"column_start":1,"column_end":65}},{"value":"/ checking.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":162615,"byte_end":162628,"line_start":81,"line_end":81,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":162629,"byte_end":162632,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ ## Scalars","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":162633,"byte_end":162647,"line_start":83,"line_end":83,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":162648,"byte_end":162651,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ Scalars are represented by the `Scalar` struct.  Each scalar has a","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":162652,"byte_end":162722,"line_start":85,"line_end":85,"column_start":1,"column_end":71}},{"value":"/ canonical representative mod the group order.  To attempt to load","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":162723,"byte_end":162792,"line_start":86,"line_end":86,"column_start":1,"column_end":70}},{"value":"/ a supposedly-canonical scalar, use","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":162793,"byte_end":162831,"line_start":87,"line_end":87,"column_start":1,"column_end":39}},{"value":"/ `Scalar::from_canonical_bytes()`. To check whether a","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":162832,"byte_end":162888,"line_start":88,"line_end":88,"column_start":1,"column_end":57}},{"value":"/ representative is canonical, use `Scalar::is_canonical()`.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":162889,"byte_end":162951,"line_start":89,"line_end":89,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":162952,"byte_end":162955,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ## Scalar Multiplication","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":162956,"byte_end":162984,"line_start":91,"line_end":91,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":162985,"byte_end":162988,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ Scalar multiplication on Ristretto points is provided by:","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":162989,"byte_end":163050,"line_start":93,"line_end":93,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":163051,"byte_end":163054,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ * the `*` operator between a `Scalar` and a `RistrettoPoint`, which","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":163055,"byte_end":163126,"line_start":95,"line_end":95,"column_start":1,"column_end":72}},{"value":"/ performs constant-time variable-base scalar multiplication;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":163127,"byte_end":163190,"line_start":96,"line_end":96,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":163191,"byte_end":163194,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ * the `*` operator between a `Scalar` and a","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":163195,"byte_end":163242,"line_start":98,"line_end":98,"column_start":1,"column_end":48}},{"value":"/ `RistrettoBasepointTable`, which performs constant-time fixed-base","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":163243,"byte_end":163313,"line_start":99,"line_end":99,"column_start":1,"column_end":71}},{"value":"/ scalar multiplication;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":163314,"byte_end":163340,"line_start":100,"line_end":100,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":163341,"byte_end":163344,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ * an implementation of the","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":163345,"byte_end":163375,"line_start":102,"line_end":102,"column_start":1,"column_end":31}},{"value":"/ [`MultiscalarMul`](../traits/trait.MultiscalarMul.html) trait for","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":163376,"byte_end":163445,"line_start":103,"line_end":103,"column_start":1,"column_end":70}},{"value":"/ constant-time variable-base multiscalar multiplication;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":163446,"byte_end":163505,"line_start":104,"line_end":104,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":163506,"byte_end":163509,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ * an implementation of the","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":163510,"byte_end":163540,"line_start":106,"line_end":106,"column_start":1,"column_end":31}},{"value":"/ [`VartimeMultiscalarMul`](../traits/trait.VartimeMultiscalarMul.html)","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":163541,"byte_end":163614,"line_start":107,"line_end":107,"column_start":1,"column_end":74}},{"value":"/ trait for variable-time variable-base multiscalar multiplication;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":163615,"byte_end":163684,"line_start":108,"line_end":108,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":163685,"byte_end":163688,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ## Random Points and Hashing to Ristretto","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":163689,"byte_end":163734,"line_start":110,"line_end":110,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":163735,"byte_end":163738,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ The Ristretto group comes equipped with an Elligator map.  This is","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":163739,"byte_end":163809,"line_start":112,"line_end":112,"column_start":1,"column_end":71}},{"value":"/ used to implement","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":163810,"byte_end":163831,"line_start":113,"line_end":113,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":163832,"byte_end":163835,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ * `RistrettoPoint::random()`, which generates random points from an","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":163836,"byte_end":163907,"line_start":115,"line_end":115,"column_start":1,"column_end":72}},{"value":"/ RNG;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":163908,"byte_end":163916,"line_start":116,"line_end":116,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":163917,"byte_end":163920,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ * `RistrettoPoint::from_hash()` and","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":163921,"byte_end":163960,"line_start":118,"line_end":118,"column_start":1,"column_end":40}},{"value":"/ `RistrettoPoint::hash_from_bytes()`, which perform hashing to the","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":163961,"byte_end":164030,"line_start":119,"line_end":119,"column_start":1,"column_end":70}},{"value":"/ group.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":164031,"byte_end":164041,"line_start":120,"line_end":120,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":164042,"byte_end":164045,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ The Elligator map itself is not currently exposed.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":164046,"byte_end":164100,"line_start":122,"line_end":122,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":164101,"byte_end":164104,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ ## Implementation","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":164105,"byte_end":164126,"line_start":124,"line_end":124,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":164127,"byte_end":164130,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ The Decaf suggestion is to use a quotient group, such as \\\\(\\mathcal","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":164131,"byte_end":164203,"line_start":126,"line_end":126,"column_start":1,"column_end":73}},{"value":"/ E / \\mathcal E[4]\\\\) or \\\\(2 \\mathcal E / \\mathcal E[2] \\\\), to","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":164204,"byte_end":164271,"line_start":127,"line_end":127,"column_start":1,"column_end":68}},{"value":"/ implement a prime-order group using a non-prime-order curve.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":164272,"byte_end":164336,"line_start":128,"line_end":128,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":164337,"byte_end":164340,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ This requires only changing","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":164341,"byte_end":164372,"line_start":130,"line_end":130,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":164373,"byte_end":164376,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ 1. the function for equality checking (so that two representatives","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":164377,"byte_end":164447,"line_start":132,"line_end":132,"column_start":1,"column_end":71}},{"value":"/    of the same coset are considered equal);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":164448,"byte_end":164495,"line_start":133,"line_end":133,"column_start":1,"column_end":48}},{"value":"/ 2. the function for encoding (so that two representatives of the","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":164496,"byte_end":164564,"line_start":134,"line_end":134,"column_start":1,"column_end":69}},{"value":"/    same coset are encoded as identical bitstrings);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":164565,"byte_end":164620,"line_start":135,"line_end":135,"column_start":1,"column_end":56}},{"value":"/ 3. the function for decoding (so that only the canonical encoding of","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":164621,"byte_end":164693,"line_start":136,"line_end":136,"column_start":1,"column_end":73}},{"value":"/    a coset is accepted).","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":164694,"byte_end":164722,"line_start":137,"line_end":137,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":164723,"byte_end":164726,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ Internally, each coset is represented by a curve point; two points","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":164727,"byte_end":164797,"line_start":139,"line_end":139,"column_start":1,"column_end":71}},{"value":"/ \\\\( P, Q \\\\) may represent the same coset in the same way that two","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":164798,"byte_end":164868,"line_start":140,"line_end":140,"column_start":1,"column_end":71}},{"value":"/ points with different \\\\(X,Y,Z\\\\) coordinates may represent the","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":164869,"byte_end":164936,"line_start":141,"line_end":141,"column_start":1,"column_end":68}},{"value":"/ same point.  The group operations are carried out with no overhead","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":164937,"byte_end":165007,"line_start":142,"line_end":142,"column_start":1,"column_end":71}},{"value":"/ using Edwards formulas.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":165008,"byte_end":165035,"line_start":143,"line_end":143,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":165036,"byte_end":165039,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ Notes on the details of the encoding can be found in the","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":165040,"byte_end":165100,"line_start":145,"line_end":145,"column_start":1,"column_end":61}},{"value":"/ [Details][ristretto_notes] section of the Ristretto website.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":165101,"byte_end":165165,"line_start":146,"line_end":146,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":165166,"byte_end":165169,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ [cryptonote]:","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":165170,"byte_end":165187,"line_start":148,"line_end":148,"column_start":1,"column_end":18}},{"value":"/ https://moderncrypto.org/mail-archive/curves/2017/000898.html","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":165188,"byte_end":165253,"line_start":149,"line_end":149,"column_start":1,"column_end":66}},{"value":"/ [ed25519_hkd]:","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":165254,"byte_end":165272,"line_start":150,"line_end":150,"column_start":1,"column_end":19}},{"value":"/ https://moderncrypto.org/mail-archive/curves/2017/000858.html","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":165273,"byte_end":165338,"line_start":151,"line_end":151,"column_start":1,"column_end":66}},{"value":"/ [ristretto_coffee]:","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":165339,"byte_end":165362,"line_start":152,"line_end":152,"column_start":1,"column_end":24}},{"value":"/ https://en.wikipedia.org/wiki/Ristretto","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":165363,"byte_end":165406,"line_start":153,"line_end":153,"column_start":1,"column_end":44}},{"value":"/ [ristretto_notes]:","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":165407,"byte_end":165429,"line_start":154,"line_end":154,"column_start":1,"column_end":23}},{"value":"/ https://ristretto.group/details/index.html","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":165430,"byte_end":165476,"line_start":155,"line_end":155,"column_start":1,"column_end":47}},{"value":"/ [why_ristretto]:","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":165477,"byte_end":165497,"line_start":156,"line_end":156,"column_start":1,"column_end":21}},{"value":"/ https://ristretto.group/why_ristretto.html","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":165498,"byte_end":165544,"line_start":157,"line_end":157,"column_start":1,"column_end":47}},{"value":"/ [ristretto_main]:","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":165545,"byte_end":165566,"line_start":158,"line_end":158,"column_start":1,"column_end":22}},{"value":"/ https://ristretto.group/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":165567,"byte_end":165595,"line_start":159,"line_end":159,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":1919},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":167026,"byte_end":167045,"line_start":215,"line_end":215,"column_start":12,"column_end":31},"name":"CompressedRistretto","qualname":"::ristretto::CompressedRistretto","value":"","parent":null,"children":[],"decl_id":null,"docs":" A Ristretto point, in compressed wire format.","sig":null,"attributes":[{"value":"/ A Ristretto point, in compressed wire format.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":166806,"byte_end":166855,"line_start":210,"line_end":210,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":166856,"byte_end":166859,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ The Ristretto encoding is canonical, so two points are equal if and","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":166860,"byte_end":166931,"line_start":212,"line_end":212,"column_start":1,"column_end":72}},{"value":"/ only if their encodings are equal.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":166932,"byte_end":166970,"line_start":213,"line_end":213,"column_start":1,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":1921},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":167046,"byte_end":167058,"line_start":215,"line_end":215,"column_start":32,"column_end":44},"name":"0","qualname":"::ristretto::CompressedRistretto::0","value":"[u8; 32]","parent":{"krate":0,"index":1919},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":723},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":167318,"byte_end":167326,"line_start":225,"line_end":225,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<CompressedRistretto>::to_bytes","value":"pub fn to_bytes(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Copy the bytes of this `CompressedRistretto`.\n","sig":null,"attributes":[{"value":"/ Copy the bytes of this `CompressedRistretto`.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":167257,"byte_end":167306,"line_start":224,"line_end":224,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":725},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":167443,"byte_end":167451,"line_start":230,"line_end":230,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<CompressedRistretto>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" View this `CompressedRistretto` as an array of bytes.\n","sig":null,"attributes":[{"value":"/ View this `CompressedRistretto` as an array of bytes.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":167374,"byte_end":167431,"line_start":229,"line_end":229,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":727},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":167671,"byte_end":167681,"line_start":239,"line_end":239,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<CompressedRistretto>::from_slice","value":"pub fn from_slice(&[u8]) -> CompressedRistretto","parent":null,"children":[],"decl_id":null,"docs":" Construct a `CompressedRistretto` from a slice of bytes.","sig":null,"attributes":[{"value":"/ Construct a `CompressedRistretto` from a slice of bytes.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":167501,"byte_end":167561,"line_start":234,"line_end":234,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":167566,"byte_end":167569,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":167574,"byte_end":167586,"line_start":236,"line_end":236,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":167591,"byte_end":167594,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ If the input `bytes` slice does not have a length of 32.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":167599,"byte_end":167659,"line_start":238,"line_end":238,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":729},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":168090,"byte_end":168100,"line_start":254,"line_end":254,"column_start":12,"column_end":22},"name":"decompress","qualname":"<CompressedRistretto>::decompress","value":"pub fn decompress(&Self) -> Option<RistrettoPoint>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to decompress to an `RistrettoPoint`.","sig":null,"attributes":[{"value":"/ Attempt to decompress to an `RistrettoPoint`.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":167836,"byte_end":167885,"line_start":247,"line_end":247,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":167890,"byte_end":167893,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":167898,"byte_end":167910,"line_start":249,"line_end":249,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":167915,"byte_end":167918,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ - `Some(RistrettoPoint)` if `self` was the canonical encoding of a point;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":167923,"byte_end":168000,"line_start":251,"line_end":251,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":168005,"byte_end":168008,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ - `None` if `self` was not the canonical encoding of a point.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":168013,"byte_end":168078,"line_start":253,"line_end":253,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":1938},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":174730,"byte_end":174744,"line_start":441,"line_end":441,"column_start":12,"column_end":26},"name":"RistrettoPoint","qualname":"::ristretto::RistrettoPoint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `RistrettoPoint` represents a point in the Ristretto group for\n Curve25519.  Ristretto, a variant of Decaf, constructs a\n prime-order group as a quotient group of a subgroup of (the\n Edwards form of) Curve25519.","sig":null,"attributes":[{"value":"/ A `RistrettoPoint` represents a point in the Ristretto group for","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":174160,"byte_end":174228,"line_start":429,"line_end":429,"column_start":1,"column_end":69}},{"value":"/ Curve25519.  Ristretto, a variant of Decaf, constructs a","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":174229,"byte_end":174289,"line_start":430,"line_end":430,"column_start":1,"column_end":61}},{"value":"/ prime-order group as a quotient group of a subgroup of (the","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":174290,"byte_end":174353,"line_start":431,"line_end":431,"column_start":1,"column_end":64}},{"value":"/ Edwards form of) Curve25519.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":174354,"byte_end":174386,"line_start":432,"line_end":432,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":174387,"byte_end":174390,"line_start":433,"line_end":433,"column_start":1,"column_end":4}},{"value":"/ Internally, a `RistrettoPoint` is implemented as a wrapper type","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":174391,"byte_end":174458,"line_start":434,"line_end":434,"column_start":1,"column_end":68}},{"value":"/ around `EdwardsPoint`, with custom equality, compression, and","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":174459,"byte_end":174524,"line_start":435,"line_end":435,"column_start":1,"column_end":66}},{"value":"/ decompression routines to account for the quotient.  This means that","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":174525,"byte_end":174597,"line_start":436,"line_end":436,"column_start":1,"column_end":73}},{"value":"/ operations on `RistrettoPoint`s are exactly as fast as operations on","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":174598,"byte_end":174670,"line_start":437,"line_end":437,"column_start":1,"column_end":73}},{"value":"/ `EdwardsPoint`s.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":174671,"byte_end":174691,"line_start":438,"line_end":438,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":174692,"byte_end":174695,"line_start":439,"line_end":439,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":736},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":174863,"byte_end":174871,"line_start":445,"line_end":445,"column_start":12,"column_end":20},"name":"compress","qualname":"<RistrettoPoint>::compress","value":"pub fn compress(&Self) -> CompressedRistretto","parent":null,"children":[],"decl_id":null,"docs":" Compress this point using the Ristretto encoding.\n","sig":null,"attributes":[{"value":"/ Compress this point using the Ristretto encoding.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":174798,"byte_end":174851,"line_start":444,"line_end":444,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":737},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":177175,"byte_end":177200,"line_start":509,"line_end":509,"column_start":12,"column_end":37},"name":"double_and_compress_batch","qualname":"<RistrettoPoint>::double_and_compress_batch","value":"pub fn double_and_compress_batch<'a, I>(I) -> Vec<CompressedRistretto> where\nI: IntoIterator<Item = &'a RistrettoPoint>","parent":null,"children":[],"decl_id":null,"docs":" Double-and-compress a batch of points.  The Ristretto encoding\n is not batchable, since it requires an inverse square root.","sig":null,"attributes":[{"value":"/ Double-and-compress a batch of points.  The Ristretto encoding","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":175996,"byte_end":176062,"line_start":480,"line_end":480,"column_start":5,"column_end":71}},{"value":"/ is not batchable, since it requires an inverse square root.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":176067,"byte_end":176130,"line_start":481,"line_end":481,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":176135,"byte_end":176138,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ However, given input points \\\\( P\\_1, \\ldots, P\\_n, \\\\)","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":176143,"byte_end":176202,"line_start":483,"line_end":483,"column_start":5,"column_end":64}},{"value":"/ it is possible to compute the encodings of their doubles \\\\(","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":176207,"byte_end":176271,"line_start":484,"line_end":484,"column_start":5,"column_end":69}},{"value":"/ \\mathrm{enc}( [2]P\\_1), \\ldots, \\mathrm{enc}( [2]P\\_n ) \\\\)","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":176276,"byte_end":176339,"line_start":485,"line_end":485,"column_start":5,"column_end":68}},{"value":"/ in a batch.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":176344,"byte_end":176359,"line_start":486,"line_end":486,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":176364,"byte_end":176367,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":176372,"byte_end":176379,"line_start":488,"line_end":488,"column_start":5,"column_end":12}},{"value":"/ # extern crate curve25519_dalek;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":176384,"byte_end":176420,"line_start":489,"line_end":489,"column_start":5,"column_end":41}},{"value":"/ # use curve25519_dalek::ristretto::RistrettoPoint;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":176425,"byte_end":176479,"line_start":490,"line_end":490,"column_start":5,"column_end":59}},{"value":"/ extern crate rand_core;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":176484,"byte_end":176511,"line_start":491,"line_end":491,"column_start":5,"column_end":32}},{"value":"/ use rand_core::OsRng;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":176516,"byte_end":176541,"line_start":492,"line_end":492,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":176546,"byte_end":176549,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ # // Need fn main() here in comment so the doctest compiles","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":176554,"byte_end":176617,"line_start":494,"line_end":494,"column_start":5,"column_end":68}},{"value":"/ # // See https://doc.rust-lang.org/book/documentation.html#documentation-as-tests","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":176622,"byte_end":176707,"line_start":495,"line_end":495,"column_start":5,"column_end":90}},{"value":"/ # fn main() {","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":176712,"byte_end":176729,"line_start":496,"line_end":496,"column_start":5,"column_end":22}},{"value":"/ let mut rng = OsRng;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":176734,"byte_end":176758,"line_start":497,"line_end":497,"column_start":5,"column_end":29}},{"value":"/ let points: Vec<RistrettoPoint> =","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":176763,"byte_end":176800,"line_start":498,"line_end":498,"column_start":5,"column_end":42}},{"value":"/     (0..32).map(|_| RistrettoPoint::random(&mut rng)).collect();","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":176805,"byte_end":176873,"line_start":499,"line_end":499,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":176878,"byte_end":176881,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ let compressed = RistrettoPoint::double_and_compress_batch(&points);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":176886,"byte_end":176958,"line_start":501,"line_end":501,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":176963,"byte_end":176966,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ for (P, P2_compressed) in points.iter().zip(compressed.iter()) {","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":176971,"byte_end":177039,"line_start":503,"line_end":503,"column_start":5,"column_end":73}},{"value":"/     assert_eq!(*P2_compressed, (P + P).compress());","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":177044,"byte_end":177099,"line_start":504,"line_end":504,"column_start":5,"column_end":60}},{"value":"/ }","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":177104,"byte_end":177109,"line_start":505,"line_end":505,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":177114,"byte_end":177121,"line_start":506,"line_end":506,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":177126,"byte_end":177133,"line_start":507,"line_end":507,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":177138,"byte_end":177163,"line_start":508,"line_end":508,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":753},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":182218,"byte_end":182224,"line_start":654,"line_end":654,"column_start":12,"column_end":18},"name":"random","qualname":"<RistrettoPoint>::random","value":"pub fn random<R: RngCore + CryptoRng>(&mut R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a `RistrettoPoint` chosen uniformly at random using a user-provided RNG.","sig":null,"attributes":[{"value":"/ Return a `RistrettoPoint` chosen uniformly at random using a user-provided RNG.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":181626,"byte_end":181709,"line_start":638,"line_end":638,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":181714,"byte_end":181717,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ # Inputs","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":181722,"byte_end":181734,"line_start":640,"line_end":640,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":181739,"byte_end":181742,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ * `rng`: any RNG which implements the `RngCore + CryptoRng` interface.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":181747,"byte_end":181821,"line_start":642,"line_end":642,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":181826,"byte_end":181829,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":181834,"byte_end":181847,"line_start":644,"line_end":644,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":181852,"byte_end":181855,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ A random element of the Ristretto group.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":181860,"byte_end":181904,"line_start":646,"line_end":646,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":181909,"byte_end":181912,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ # Implementation","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":181917,"byte_end":181937,"line_start":648,"line_end":648,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":181942,"byte_end":181945,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ Uses the Ristretto-flavoured Elligator 2 map, so that the","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":181950,"byte_end":182011,"line_start":650,"line_end":650,"column_start":5,"column_end":66}},{"value":"/ discrete log of the output point with respect to any other","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":182016,"byte_end":182078,"line_start":651,"line_end":651,"column_start":5,"column_end":67}},{"value":"/ point should be unknown.  The map is applied twice and the","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":182083,"byte_end":182145,"line_start":652,"line_end":652,"column_start":5,"column_end":67}},{"value":"/ results are added, to ensure a uniform distribution.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":182150,"byte_end":182206,"line_start":653,"line_end":653,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":756},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":183541,"byte_end":183556,"line_start":691,"line_end":691,"column_start":12,"column_end":27},"name":"hash_from_bytes","qualname":"<RistrettoPoint>::hash_from_bytes","value":"pub fn hash_from_bytes<D>(&[u8]) -> RistrettoPoint where D: Digest<OutputSize\n= U64> + Default","parent":null,"children":[],"decl_id":null,"docs":" Hash a slice of bytes into a `RistrettoPoint`.","sig":null,"attributes":[{"value":"/ Hash a slice of bytes into a `RistrettoPoint`.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":182430,"byte_end":182480,"line_start":661,"line_end":661,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":182485,"byte_end":182488,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ Takes a type parameter `D`, which is any `Digest` producing 64","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":182493,"byte_end":182559,"line_start":663,"line_end":663,"column_start":5,"column_end":71}},{"value":"/ bytes of output.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":182564,"byte_end":182584,"line_start":664,"line_end":664,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":182589,"byte_end":182592,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ Convenience wrapper around `from_hash`.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":182597,"byte_end":182640,"line_start":666,"line_end":666,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":182645,"byte_end":182648,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ # Implementation","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":182653,"byte_end":182673,"line_start":668,"line_end":668,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":182678,"byte_end":182681,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ Uses the Ristretto-flavoured Elligator 2 map, so that the","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":182686,"byte_end":182747,"line_start":670,"line_end":670,"column_start":5,"column_end":66}},{"value":"/ discrete log of the output point with respect to any other","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":182752,"byte_end":182814,"line_start":671,"line_end":671,"column_start":5,"column_end":67}},{"value":"/ point should be unknown.  The map is applied twice and the","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":182819,"byte_end":182881,"line_start":672,"line_end":672,"column_start":5,"column_end":67}},{"value":"/ results are added, to ensure a uniform distribution.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":182886,"byte_end":182942,"line_start":673,"line_end":673,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":182947,"byte_end":182950,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":182955,"byte_end":182968,"line_start":675,"line_end":675,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":182973,"byte_end":182976,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":182981,"byte_end":182988,"line_start":677,"line_end":677,"column_start":5,"column_end":12}},{"value":"/ # extern crate curve25519_dalek;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":182993,"byte_end":183029,"line_start":678,"line_end":678,"column_start":5,"column_end":41}},{"value":"/ # use curve25519_dalek::ristretto::RistrettoPoint;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":183034,"byte_end":183088,"line_start":679,"line_end":679,"column_start":5,"column_end":59}},{"value":"/ extern crate sha2;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":183093,"byte_end":183115,"line_start":680,"line_end":680,"column_start":5,"column_end":27}},{"value":"/ use sha2::Sha512;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":183120,"byte_end":183141,"line_start":681,"line_end":681,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":183146,"byte_end":183149,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ # // Need fn main() here in comment so the doctest compiles","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":183154,"byte_end":183217,"line_start":683,"line_end":683,"column_start":5,"column_end":68}},{"value":"/ # // See https://doc.rust-lang.org/book/documentation.html#documentation-as-tests","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":183222,"byte_end":183307,"line_start":684,"line_end":684,"column_start":5,"column_end":90}},{"value":"/ # fn main() {","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":183312,"byte_end":183329,"line_start":685,"line_end":685,"column_start":5,"column_end":22}},{"value":"/ let msg = \"To really appreciate architecture, you may even need to commit a murder\";","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":183334,"byte_end":183422,"line_start":686,"line_end":686,"column_start":5,"column_end":93}},{"value":"/ let P = RistrettoPoint::hash_from_bytes::<Sha512>(msg.as_bytes());","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":183427,"byte_end":183497,"line_start":687,"line_end":687,"column_start":5,"column_end":75}},{"value":"/ # }","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":183502,"byte_end":183509,"line_start":688,"line_end":688,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":183514,"byte_end":183521,"line_start":689,"line_end":689,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":183526,"byte_end":183529,"line_start":690,"line_end":690,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":758},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":184008,"byte_end":184017,"line_start":704,"line_end":704,"column_start":12,"column_end":21},"name":"from_hash","qualname":"<RistrettoPoint>::from_hash","value":"pub fn from_hash<D>(D) -> RistrettoPoint where D: Digest<OutputSize = U64> +\nDefault","parent":null,"children":[],"decl_id":null,"docs":" Construct a `RistrettoPoint` from an existing `Digest` instance.","sig":null,"attributes":[{"value":"/ Construct a `RistrettoPoint` from an existing `Digest` instance.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":183766,"byte_end":183834,"line_start":699,"line_end":699,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":183839,"byte_end":183842,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ Use this instead of `hash_from_bytes` if it is more convenient","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":183847,"byte_end":183913,"line_start":701,"line_end":701,"column_start":5,"column_end":71}},{"value":"/ to stream data into the `Digest` than to pass a single byte","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":183918,"byte_end":183981,"line_start":702,"line_end":702,"column_start":5,"column_end":68}},{"value":"/ slice.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":183986,"byte_end":183996,"line_start":703,"line_end":703,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":761},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":184916,"byte_end":184934,"line_start":726,"line_end":726,"column_start":12,"column_end":30},"name":"from_uniform_bytes","qualname":"<RistrettoPoint>::from_uniform_bytes","value":"pub fn from_uniform_bytes(&[u8; ]) -> RistrettoPoint","parent":null,"children":[],"decl_id":null,"docs":" Construct a `RistrettoPoint` from 64 bytes of data.","sig":null,"attributes":[{"value":"/ Construct a `RistrettoPoint` from 64 bytes of data.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":184390,"byte_end":184445,"line_start":715,"line_end":715,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":184450,"byte_end":184453,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ If the input bytes are uniformly distributed, the resulting","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":184458,"byte_end":184521,"line_start":717,"line_end":717,"column_start":5,"column_end":68}},{"value":"/ point will be uniformly distributed over the group, and its","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":184526,"byte_end":184589,"line_start":718,"line_end":718,"column_start":5,"column_end":68}},{"value":"/ discrete log with respect to other points should be unknown.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":184594,"byte_end":184658,"line_start":719,"line_end":719,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":184663,"byte_end":184666,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ # Implementation","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":184671,"byte_end":184691,"line_start":721,"line_end":721,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":184696,"byte_end":184699,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ This function splits the input array into two 32-byte halves,","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":184704,"byte_end":184769,"line_start":723,"line_end":723,"column_start":5,"column_end":70}},{"value":"/ takes the low 255 bits of each half mod p, applies the","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":184774,"byte_end":184832,"line_start":724,"line_end":724,"column_start":5,"column_end":63}},{"value":"/ Ristretto-flavored Elligator map to each, and adds the results.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":184837,"byte_end":184904,"line_start":725,"line_end":725,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":828},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":190940,"byte_end":190970,"line_start":927,"line_end":927,"column_start":12,"column_end":42},"name":"VartimeRistrettoPrecomputation","qualname":"::ristretto::VartimeRistrettoPrecomputation","value":"","parent":null,"children":[],"decl_id":null,"docs":" Precomputation for variable-time multiscalar multiplication with `RistrettoPoint`s.\n","sig":null,"attributes":[{"value":"/ Precomputation for variable-time multiscalar multiplication with `RistrettoPoint`s.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":190663,"byte_end":190750,"line_start":922,"line_end":922,"column_start":1,"column_end":88}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":190903,"byte_end":190928,"line_start":926,"line_end":926,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":843},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":192218,"byte_end":192253,"line_start":971,"line_end":971,"column_start":12,"column_end":47},"name":"vartime_double_scalar_mul_basepoint","qualname":"<RistrettoPoint>::vartime_double_scalar_mul_basepoint","value":"pub fn vartime_double_scalar_mul_basepoint(&Scalar, &RistrettoPoint, &Scalar)\n-> RistrettoPoint","parent":null,"children":[],"decl_id":null,"docs":" Compute \\\\(aA + bB\\\\) in variable time, where \\\\(B\\\\) is the\n Ristretto basepoint.\n","sig":null,"attributes":[{"value":"/ Compute \\\\(aA + bB\\\\) in variable time, where \\\\(B\\\\) is the","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":192113,"byte_end":192177,"line_start":969,"line_end":969,"column_start":5,"column_end":69}},{"value":"/ Ristretto basepoint.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":192182,"byte_end":192206,"line_start":970,"line_end":970,"column_start":5,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":2006},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":192899,"byte_end":192922,"line_start":995,"line_end":995,"column_start":12,"column_end":35},"name":"RistrettoBasepointTable","qualname":"::ristretto::RistrettoBasepointTable","value":"","parent":null,"children":[],"decl_id":null,"docs":" A precomputed table of multiples of a basepoint, used to accelerate\n scalar multiplication.","sig":null,"attributes":[{"value":"/ A precomputed table of multiples of a basepoint, used to accelerate","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":192466,"byte_end":192537,"line_start":982,"line_end":982,"column_start":1,"column_end":72}},{"value":"/ scalar multiplication.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":192538,"byte_end":192564,"line_start":983,"line_end":983,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":192565,"byte_end":192568,"line_start":984,"line_end":984,"column_start":1,"column_end":4}},{"value":"/ A precomputed table of multiples of the Ristretto basepoint is","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":192569,"byte_end":192635,"line_start":985,"line_end":985,"column_start":1,"column_end":67}},{"value":"/ available in the `constants` module:","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":192636,"byte_end":192676,"line_start":986,"line_end":986,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":192677,"byte_end":192684,"line_start":987,"line_end":987,"column_start":1,"column_end":8}},{"value":"/ use curve25519_dalek::constants;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":192685,"byte_end":192721,"line_start":988,"line_end":988,"column_start":1,"column_end":37}},{"value":"/ use curve25519_dalek::scalar::Scalar;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":192722,"byte_end":192763,"line_start":989,"line_end":989,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":192764,"byte_end":192767,"line_start":990,"line_end":990,"column_start":1,"column_end":4}},{"value":"/ let a = Scalar::from(87329482u64);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":192768,"byte_end":192806,"line_start":991,"line_end":991,"column_start":1,"column_end":39}},{"value":"/ let P = &a * &constants::RISTRETTO_BASEPOINT_TABLE;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":192807,"byte_end":192862,"line_start":992,"line_end":992,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":192863,"byte_end":192870,"line_start":993,"line_end":993,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":855},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":193520,"byte_end":193526,"line_start":1015,"line_end":1015,"column_start":12,"column_end":18},"name":"create","qualname":"<RistrettoBasepointTable>::create","value":"pub fn create(&RistrettoPoint) -> RistrettoBasepointTable","parent":null,"children":[],"decl_id":null,"docs":" Create a precomputed table of multiples of the given `basepoint`.\n","sig":null,"attributes":[{"value":"/ Create a precomputed table of multiples of the given `basepoint`.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":193439,"byte_end":193508,"line_start":1014,"line_end":1014,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":856},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":193743,"byte_end":193752,"line_start":1020,"line_end":1020,"column_start":12,"column_end":21},"name":"basepoint","qualname":"<RistrettoBasepointTable>::basepoint","value":"pub fn basepoint(&Self) -> RistrettoPoint","parent":null,"children":[],"decl_id":null,"docs":" Get the basepoint for this table as a `RistrettoPoint`.\n","sig":null,"attributes":[{"value":"/ Get the basepoint for this table as a `RistrettoPoint`.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":193672,"byte_end":193731,"line_start":1019,"line_end":1019,"column_start":5,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":867},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/constants.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"constants","qualname":"::constants","value":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/constants.rs","parent":null,"children":[{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":871},{"krate":0,"index":872},{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":880},{"krate":0,"index":883},{"krate":0,"index":884},{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":890},{"krate":0,"index":892}],"decl_id":null,"docs":" Various constants, such as the Ristretto and Ed25519 basepoints.","sig":null,"attributes":[{"value":"/ Various constants, such as the Ristretto and Ed25519 basepoints.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/constants.rs","byte_start":212483,"byte_end":212551,"line_start":12,"line_end":12,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/constants.rs","byte_start":212552,"byte_end":212555,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Most of the constants are given with","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/constants.rs","byte_start":212556,"byte_end":212596,"line_start":14,"line_end":14,"column_start":1,"column_end":41}},{"value":"/ `LONG_DESCRIPTIVE_UPPER_CASE_NAMES`, but they can be brought into","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/constants.rs","byte_start":212597,"byte_end":212666,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"/ scope using a `let` binding:","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/constants.rs","byte_start":212667,"byte_end":212699,"line_start":16,"line_end":16,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/constants.rs","byte_start":212700,"byte_end":212703,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/constants.rs","byte_start":212704,"byte_end":212711,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ use curve25519_dalek::constants;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/constants.rs","byte_start":212712,"byte_end":212748,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"/ use curve25519_dalek::traits::IsIdentity;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/constants.rs","byte_start":212749,"byte_end":212794,"line_start":20,"line_end":20,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/constants.rs","byte_start":212795,"byte_end":212798,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let B = &constants::RISTRETTO_BASEPOINT_TABLE;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/constants.rs","byte_start":212799,"byte_end":212849,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/ let l = &constants::BASEPOINT_ORDER;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/constants.rs","byte_start":212850,"byte_end":212890,"line_start":23,"line_end":23,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/constants.rs","byte_start":212891,"byte_end":212894,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let A = l * B;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/constants.rs","byte_start":212895,"byte_end":212913,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ assert!(A.is_identity());","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/constants.rs","byte_start":212914,"byte_end":212943,"line_start":26,"line_end":26,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/constants.rs","byte_start":212944,"byte_end":212951,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/constants.rs","byte_start":212953,"byte_end":212978,"line_start":29,"line_end":29,"column_start":1,"column_end":26}}]},{"kind":"Const","id":{"krate":0,"index":884},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/constants.rs","byte_start":213743,"byte_end":213771,"line_start":52,"line_end":52,"column_start":11,"column_end":39},"name":"ED25519_BASEPOINT_COMPRESSED","qualname":"::constants::ED25519_BASEPOINT_COMPRESSED","value":"CompressedEdwardsY","parent":null,"children":[],"decl_id":null,"docs":" The Ed25519 basepoint, in `CompressedEdwardsY` format.","sig":null,"attributes":[{"value":"/ The Ed25519 basepoint, in `CompressedEdwardsY` format.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/constants.rs","byte_start":213459,"byte_end":213517,"line_start":46,"line_end":46,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/constants.rs","byte_start":213518,"byte_end":213521,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ This is the little-endian byte encoding of \\\\( 4/5 \\pmod p \\\\),","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/constants.rs","byte_start":213522,"byte_end":213589,"line_start":48,"line_end":48,"column_start":1,"column_end":68}},{"value":"/ which is the \\\\(y\\\\)-coordinate of the Ed25519 basepoint.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/constants.rs","byte_start":213590,"byte_end":213651,"line_start":49,"line_end":49,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/constants.rs","byte_start":213652,"byte_end":213655,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ The sign bit is 0 since the basepoint has \\\\(x\\\\) chosen to be positive.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/constants.rs","byte_start":213656,"byte_end":213732,"line_start":51,"line_end":51,"column_start":1,"column_end":77}}]},{"kind":"Const","id":{"krate":0,"index":885},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/constants.rs","byte_start":214150,"byte_end":214166,"line_start":59,"line_end":59,"column_start":11,"column_end":27},"name":"X25519_BASEPOINT","qualname":"::constants::X25519_BASEPOINT","value":"MontgomeryPoint","parent":null,"children":[],"decl_id":null,"docs":" The X25519 basepoint, in `MontgomeryPoint` format.\n","sig":null,"attributes":[{"value":"/ The X25519 basepoint, in `MontgomeryPoint` format.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/constants.rs","byte_start":214085,"byte_end":214139,"line_start":58,"line_end":58,"column_start":1,"column_end":55}}]},{"kind":"Const","id":{"krate":0,"index":886},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/constants.rs","byte_start":214525,"byte_end":214555,"line_start":66,"line_end":66,"column_start":11,"column_end":41},"name":"RISTRETTO_BASEPOINT_COMPRESSED","qualname":"::constants::RISTRETTO_BASEPOINT_COMPRESSED","value":"CompressedRistretto","parent":null,"children":[],"decl_id":null,"docs":" The Ristretto basepoint, in `CompressedRistretto` format.\n","sig":null,"attributes":[{"value":"/ The Ristretto basepoint, in `CompressedRistretto` format.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/constants.rs","byte_start":214453,"byte_end":214514,"line_start":65,"line_end":65,"column_start":1,"column_end":62}}]},{"kind":"Const","id":{"krate":0,"index":887},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/constants.rs","byte_start":215048,"byte_end":215073,"line_start":76,"line_end":76,"column_start":11,"column_end":36},"name":"RISTRETTO_BASEPOINT_POINT","qualname":"::constants::RISTRETTO_BASEPOINT_POINT","value":"RistrettoPoint","parent":null,"children":[],"decl_id":null,"docs":" The Ristretto basepoint, as a `RistrettoPoint`.","sig":null,"attributes":[{"value":"/ The Ristretto basepoint, as a `RistrettoPoint`.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/constants.rs","byte_start":214874,"byte_end":214925,"line_start":72,"line_end":72,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/constants.rs","byte_start":214926,"byte_end":214929,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ This is called `_POINT` to distinguish it from `_TABLE`, which","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/constants.rs","byte_start":214930,"byte_end":214996,"line_start":74,"line_end":74,"column_start":1,"column_end":67}},{"value":"/ provides fast scalar multiplication.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/constants.rs","byte_start":214997,"byte_end":215037,"line_start":75,"line_end":75,"column_start":1,"column_end":41}}]},{"kind":"Const","id":{"krate":0,"index":888},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/constants.rs","byte_start":215315,"byte_end":215330,"line_start":82,"line_end":82,"column_start":11,"column_end":26},"name":"BASEPOINT_ORDER","qualname":"::constants::BASEPOINT_ORDER","value":"Scalar","parent":null,"children":[],"decl_id":null,"docs":" `BASEPOINT_ORDER` is the order of the Ristretto group and of the Ed25519 basepoint, i.e.,\n $$\n \\ell = 2^\\{252\\} + 27742317777372353535851937790883648493.\n $$\n","sig":null,"attributes":[{"value":"/ `BASEPOINT_ORDER` is the order of the Ristretto group and of the Ed25519 basepoint, i.e.,","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/constants.rs","byte_start":215134,"byte_end":215227,"line_start":78,"line_end":78,"column_start":1,"column_end":94}},{"value":"/ $$","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/constants.rs","byte_start":215228,"byte_end":215234,"line_start":79,"line_end":79,"column_start":1,"column_end":7}},{"value":"/ \\ell = 2^\\{252\\} + 27742317777372353535851937790883648493.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/constants.rs","byte_start":215235,"byte_end":215297,"line_start":80,"line_end":80,"column_start":1,"column_end":63}},{"value":"/ $$","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/constants.rs","byte_start":215298,"byte_end":215304,"line_start":81,"line_end":81,"column_start":1,"column_end":7}}]},{"kind":"Const","id":{"krate":0,"index":892},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/constants.rs","byte_start":215734,"byte_end":215759,"line_start":93,"line_end":93,"column_start":11,"column_end":36},"name":"RISTRETTO_BASEPOINT_TABLE","qualname":"::constants::RISTRETTO_BASEPOINT_TABLE","value":"RistrettoBasepointTable","parent":null,"children":[],"decl_id":null,"docs":" The Ristretto basepoint, as a `RistrettoBasepointTable` for scalar multiplication.\n","sig":null,"attributes":[{"value":"/ The Ristretto basepoint, as a `RistrettoBasepointTable` for scalar multiplication.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/constants.rs","byte_start":215637,"byte_end":215723,"line_start":92,"line_end":92,"column_start":1,"column_end":87}}]},{"kind":"Mod","id":{"krate":0,"index":893},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"traits","qualname":"::traits","value":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","parent":null,"children":[{"krate":0,"index":894},{"krate":0,"index":897},{"krate":0,"index":900},{"krate":0,"index":903},{"krate":0,"index":905},{"krate":0,"index":907},{"krate":0,"index":910},{"krate":0,"index":915},{"krate":0,"index":920},{"krate":0,"index":929},{"krate":0,"index":947}],"decl_id":null,"docs":" Module for common traits.\n","sig":null,"attributes":[{"value":"/ Module for common traits.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":218857,"byte_end":218886,"line_start":12,"line_end":12,"column_start":1,"column_end":30}},{"value":"allow(non_snake_case)","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":218888,"byte_end":218913,"line_start":14,"line_end":14,"column_start":1,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":903},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":219216,"byte_end":219224,"line_start":27,"line_end":27,"column_start":11,"column_end":19},"name":"Identity","qualname":"::traits::Identity","value":"Identity","parent":null,"children":[{"krate":0,"index":904}],"decl_id":null,"docs":" Trait for getting the identity element of a point type.\n","sig":null,"attributes":[{"value":"/ Trait for getting the identity element of a point type.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":219146,"byte_end":219205,"line_start":26,"line_end":26,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":904},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":219323,"byte_end":219331,"line_start":30,"line_end":30,"column_start":8,"column_end":16},"name":"identity","qualname":"::traits::Identity::identity","value":"pub fn identity() -> Self","parent":{"krate":0,"index":903},"children":[],"decl_id":null,"docs":" Returns the identity element of the curve.\n Can be used as a constructor.\n","sig":null,"attributes":[{"value":"/ Returns the identity element of the curve.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":219231,"byte_end":219277,"line_start":28,"line_end":28,"column_start":5,"column_end":51}},{"value":"/ Can be used as a constructor.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":219282,"byte_end":219315,"line_start":29,"line_end":29,"column_start":5,"column_end":38}}]},{"kind":"Trait","id":{"krate":0,"index":905},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":219432,"byte_end":219442,"line_start":34,"line_end":34,"column_start":11,"column_end":21},"name":"IsIdentity","qualname":"::traits::IsIdentity","value":"IsIdentity","parent":null,"children":[{"krate":0,"index":906}],"decl_id":null,"docs":" Trait for testing if a curve point is equivalent to the identity point.\n","sig":null,"attributes":[{"value":"/ Trait for testing if a curve point is equivalent to the identity point.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":219346,"byte_end":219421,"line_start":33,"line_end":33,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":906},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":219526,"byte_end":219537,"line_start":36,"line_end":36,"column_start":8,"column_end":19},"name":"is_identity","qualname":"::traits::IsIdentity::is_identity","value":"pub fn is_identity(&Self) -> bool","parent":{"krate":0,"index":905},"children":[],"decl_id":null,"docs":" Return true if this element is the identity element of the curve.\n","sig":null,"attributes":[{"value":"/ Return true if this element is the identity element of the curve.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":219449,"byte_end":219518,"line_start":35,"line_end":35,"column_start":5,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":910},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":219981,"byte_end":219995,"line_start":52,"line_end":52,"column_start":11,"column_end":25},"name":"BasepointTable","qualname":"::traits::BasepointTable","value":"BasepointTable","parent":null,"children":[{"krate":0,"index":911},{"krate":0,"index":912},{"krate":0,"index":913},{"krate":0,"index":914}],"decl_id":null,"docs":" A precomputed table of basepoints, for optimising scalar multiplications.\n","sig":null,"attributes":[{"value":"/ A precomputed table of basepoints, for optimising scalar multiplications.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":219893,"byte_end":219970,"line_start":51,"line_end":51,"column_start":1,"column_end":78}}]},{"kind":"Type","id":{"krate":0,"index":911},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":220062,"byte_end":220067,"line_start":54,"line_end":54,"column_start":10,"column_end":15},"name":"Point","qualname":"::traits::BasepointTable::Point","value":"type Point;","parent":{"krate":0,"index":910},"children":[],"decl_id":null,"docs":" The type of point contained within this table.\n","sig":null,"attributes":[{"value":"/ The type of point contained within this table.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":220002,"byte_end":220052,"line_start":53,"line_end":53,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":912},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":220154,"byte_end":220160,"line_start":57,"line_end":57,"column_start":8,"column_end":14},"name":"create","qualname":"::traits::BasepointTable::create","value":"pub fn create(&Self::Point) -> Self","parent":{"krate":0,"index":910},"children":[],"decl_id":null,"docs":" Generate a new precomputed basepoint table from the given basepoint.\n","sig":null,"attributes":[{"value":"/ Generate a new precomputed basepoint table from the given basepoint.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":220074,"byte_end":220146,"line_start":56,"line_end":56,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":913},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":220260,"byte_end":220269,"line_start":60,"line_end":60,"column_start":8,"column_end":17},"name":"basepoint","qualname":"::traits::BasepointTable::basepoint","value":"pub fn basepoint(&Self) -> Self::Point","parent":{"krate":0,"index":910},"children":[],"decl_id":null,"docs":" Retrieve the original basepoint from this table.\n","sig":null,"attributes":[{"value":"/ Retrieve the original basepoint from this table.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":220200,"byte_end":220252,"line_start":59,"line_end":59,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":914},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":220384,"byte_end":220397,"line_start":63,"line_end":63,"column_start":8,"column_end":21},"name":"basepoint_mul","qualname":"::traits::BasepointTable::basepoint_mul","value":"pub fn basepoint_mul(&Self, &Scalar) -> Self::Point","parent":{"krate":0,"index":910},"children":[],"decl_id":null,"docs":" Multiply a `scalar` by this precomputed basepoint table, in constant time.\n","sig":null,"attributes":[{"value":"/ Multiply a `scalar` by this precomputed basepoint table, in constant time.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":220298,"byte_end":220376,"line_start":62,"line_end":62,"column_start":5,"column_end":83}}]},{"kind":"Trait","id":{"krate":0,"index":915},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":220532,"byte_end":220546,"line_start":67,"line_end":67,"column_start":11,"column_end":25},"name":"MultiscalarMul","qualname":"::traits::MultiscalarMul","value":"MultiscalarMul","parent":null,"children":[{"krate":0,"index":916},{"krate":0,"index":917}],"decl_id":null,"docs":" A trait for constant-time multiscalar multiplication without precomputation.\n","sig":null,"attributes":[{"value":"/ A trait for constant-time multiscalar multiplication without precomputation.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":220441,"byte_end":220521,"line_start":66,"line_end":66,"column_start":1,"column_end":81}}]},{"kind":"Type","id":{"krate":0,"index":916},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":220626,"byte_end":220631,"line_start":69,"line_end":69,"column_start":10,"column_end":15},"name":"Point","qualname":"::traits::MultiscalarMul::Point","value":"type Point;","parent":{"krate":0,"index":915},"children":[],"decl_id":null,"docs":" The type of point being multiplied, e.g., `RistrettoPoint`.\n","sig":null,"attributes":[{"value":"/ The type of point being multiplied, e.g., `RistrettoPoint`.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":220553,"byte_end":220616,"line_start":68,"line_end":68,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":917},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":222219,"byte_end":222234,"line_start":114,"line_end":114,"column_start":8,"column_end":23},"name":"multiscalar_mul","qualname":"::traits::MultiscalarMul::multiscalar_mul","value":"pub fn multiscalar_mul<I, J>(I, J) -> Self::Point where I: IntoIterator,\nI::Item: Borrow<Scalar>, J: IntoIterator, J::Item: Borrow<Self::Point>","parent":{"krate":0,"index":915},"children":[],"decl_id":null,"docs":" Given an iterator of (possibly secret) scalars and an iterator of\n public points, compute\n $$\n Q = c\\_1 P\\_1 + \\cdots + c\\_n P\\_n.\n $$","sig":null,"attributes":[{"value":"/ Given an iterator of (possibly secret) scalars and an iterator of","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":220638,"byte_end":220707,"line_start":71,"line_end":71,"column_start":5,"column_end":74}},{"value":"/ public points, compute","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":220712,"byte_end":220738,"line_start":72,"line_end":72,"column_start":5,"column_end":31}},{"value":"/ $$","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":220743,"byte_end":220749,"line_start":73,"line_end":73,"column_start":5,"column_end":11}},{"value":"/ Q = c\\_1 P\\_1 + \\cdots + c\\_n P\\_n.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":220754,"byte_end":220793,"line_start":74,"line_end":74,"column_start":5,"column_end":44}},{"value":"/ $$","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":220798,"byte_end":220804,"line_start":75,"line_end":75,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":220809,"byte_end":220812,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ It is an error to call this function with two iterators of different lengths.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":220817,"byte_end":220898,"line_start":77,"line_end":77,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":220903,"byte_end":220906,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":220911,"byte_end":220925,"line_start":79,"line_end":79,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":220930,"byte_end":220933,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ The trait bound aims for maximum flexibility: the inputs must be","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":220938,"byte_end":221006,"line_start":81,"line_end":81,"column_start":5,"column_end":73}},{"value":"/ convertable to iterators (`I: IntoIter`), and the iterator's items","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":221011,"byte_end":221081,"line_start":82,"line_end":82,"column_start":5,"column_end":75}},{"value":"/ must be `Borrow<Scalar>` (or `Borrow<Point>`), to allow","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":221086,"byte_end":221145,"line_start":83,"line_end":83,"column_start":5,"column_end":64}},{"value":"/ iterators returning either `Scalar`s or `&Scalar`s.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":221150,"byte_end":221205,"line_start":84,"line_end":84,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":221210,"byte_end":221213,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":221218,"byte_end":221225,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/ use curve25519_dalek::constants;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":221230,"byte_end":221266,"line_start":87,"line_end":87,"column_start":5,"column_end":41}},{"value":"/ use curve25519_dalek::traits::MultiscalarMul;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":221271,"byte_end":221320,"line_start":88,"line_end":88,"column_start":5,"column_end":54}},{"value":"/ use curve25519_dalek::ristretto::RistrettoPoint;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":221325,"byte_end":221377,"line_start":89,"line_end":89,"column_start":5,"column_end":57}},{"value":"/ use curve25519_dalek::scalar::Scalar;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":221382,"byte_end":221423,"line_start":90,"line_end":90,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":221428,"byte_end":221431,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ // Some scalars","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":221436,"byte_end":221455,"line_start":92,"line_end":92,"column_start":5,"column_end":24}},{"value":"/ let a = Scalar::from(87329482u64);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":221460,"byte_end":221498,"line_start":93,"line_end":93,"column_start":5,"column_end":43}},{"value":"/ let b = Scalar::from(37264829u64);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":221503,"byte_end":221541,"line_start":94,"line_end":94,"column_start":5,"column_end":43}},{"value":"/ let c = Scalar::from(98098098u64);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":221546,"byte_end":221584,"line_start":95,"line_end":95,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":221589,"byte_end":221592,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ // Some points","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":221597,"byte_end":221615,"line_start":97,"line_end":97,"column_start":5,"column_end":23}},{"value":"/ let P = constants::RISTRETTO_BASEPOINT_POINT;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":221620,"byte_end":221669,"line_start":98,"line_end":98,"column_start":5,"column_end":54}},{"value":"/ let Q = P + P;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":221674,"byte_end":221692,"line_start":99,"line_end":99,"column_start":5,"column_end":23}},{"value":"/ let R = P + Q;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":221697,"byte_end":221715,"line_start":100,"line_end":100,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":221720,"byte_end":221723,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ // A1 = a*P + b*Q + c*R","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":221728,"byte_end":221755,"line_start":102,"line_end":102,"column_start":5,"column_end":32}},{"value":"/ let abc = [a,b,c];","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":221760,"byte_end":221782,"line_start":103,"line_end":103,"column_start":5,"column_end":27}},{"value":"/ let A1 = RistrettoPoint::multiscalar_mul(&abc, &[P,Q,R]);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":221787,"byte_end":221848,"line_start":104,"line_end":104,"column_start":5,"column_end":66}},{"value":"/ // Note: (&abc).into_iter(): Iterator<Item=&Scalar>","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":221853,"byte_end":221908,"line_start":105,"line_end":105,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":221913,"byte_end":221916,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ // A2 = (-a)*P + (-b)*Q + (-c)*R","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":221921,"byte_end":221957,"line_start":107,"line_end":107,"column_start":5,"column_end":41}},{"value":"/ let minus_abc = abc.iter().map(|x| -x);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":221962,"byte_end":222005,"line_start":108,"line_end":108,"column_start":5,"column_end":48}},{"value":"/ let A2 = RistrettoPoint::multiscalar_mul(minus_abc, &[P,Q,R]);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":222010,"byte_end":222076,"line_start":109,"line_end":109,"column_start":5,"column_end":71}},{"value":"/ // Note: minus_abc.into_iter(): Iterator<Item=Scalar>","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":222081,"byte_end":222138,"line_start":110,"line_end":110,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":222143,"byte_end":222146,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(A1.compress(), (-A2).compress());","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":222151,"byte_end":222199,"line_start":112,"line_end":112,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":222204,"byte_end":222211,"line_start":113,"line_end":113,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":920},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":222504,"byte_end":222525,"line_start":123,"line_end":123,"column_start":11,"column_end":32},"name":"VartimeMultiscalarMul","qualname":"::traits::VartimeMultiscalarMul","value":"VartimeMultiscalarMul","parent":null,"children":[{"krate":0,"index":921},{"krate":0,"index":922},{"krate":0,"index":925}],"decl_id":null,"docs":" A trait for variable-time multiscalar multiplication without precomputation.\n","sig":null,"attributes":[{"value":"/ A trait for variable-time multiscalar multiplication without precomputation.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":222413,"byte_end":222493,"line_start":122,"line_end":122,"column_start":1,"column_end":81}}]},{"kind":"Type","id":{"krate":0,"index":921},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":222605,"byte_end":222610,"line_start":125,"line_end":125,"column_start":10,"column_end":15},"name":"Point","qualname":"::traits::VartimeMultiscalarMul::Point","value":"type Point;","parent":{"krate":0,"index":920},"children":[],"decl_id":null,"docs":" The type of point being multiplied, e.g., `RistrettoPoint`.\n","sig":null,"attributes":[{"value":"/ The type of point being multiplied, e.g., `RistrettoPoint`.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":222532,"byte_end":222595,"line_start":124,"line_end":124,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":922},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":224539,"byte_end":224563,"line_start":179,"line_end":179,"column_start":8,"column_end":32},"name":"optional_multiscalar_mul","qualname":"::traits::VartimeMultiscalarMul::optional_multiscalar_mul","value":"pub fn optional_multiscalar_mul<I, J>(I, J) -> Option<Self::Point> where\nI: IntoIterator, I::Item: Borrow<Scalar>, J: IntoIterator<Item =\nOption<Self::Point>>","parent":{"krate":0,"index":920},"children":[],"decl_id":null,"docs":" Given an iterator of public scalars and an iterator of\n `Option`s of points, compute either `Some(Q)`, where\n $$\n Q = c\\_1 P\\_1 + \\cdots + c\\_n P\\_n,\n $$\n if all points were `Some(P_i)`, or else return `None`.","sig":null,"attributes":[{"value":"/ Given an iterator of public scalars and an iterator of","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":222617,"byte_end":222675,"line_start":127,"line_end":127,"column_start":5,"column_end":63}},{"value":"/ `Option`s of points, compute either `Some(Q)`, where","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":222680,"byte_end":222736,"line_start":128,"line_end":128,"column_start":5,"column_end":61}},{"value":"/ $$","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":222741,"byte_end":222747,"line_start":129,"line_end":129,"column_start":5,"column_end":11}},{"value":"/ Q = c\\_1 P\\_1 + \\cdots + c\\_n P\\_n,","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":222752,"byte_end":222791,"line_start":130,"line_end":130,"column_start":5,"column_end":44}},{"value":"/ $$","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":222796,"byte_end":222802,"line_start":131,"line_end":131,"column_start":5,"column_end":11}},{"value":"/ if all points were `Some(P_i)`, or else return `None`.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":222807,"byte_end":222865,"line_start":132,"line_end":132,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":222870,"byte_end":222873,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This function is particularly useful when verifying statements","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":222878,"byte_end":222944,"line_start":134,"line_end":134,"column_start":5,"column_end":71}},{"value":"/ involving compressed points.  Accepting `Option<Point>` allows","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":222949,"byte_end":223015,"line_start":135,"line_end":135,"column_start":5,"column_end":71}},{"value":"/ inlining point decompression into the multiscalar call,","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":223020,"byte_end":223079,"line_start":136,"line_end":136,"column_start":5,"column_end":64}},{"value":"/ avoiding the need for temporary buffers.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":223084,"byte_end":223128,"line_start":137,"line_end":137,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":223133,"byte_end":223140,"line_start":138,"line_end":138,"column_start":5,"column_end":12}},{"value":"/ use curve25519_dalek::constants;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":223145,"byte_end":223181,"line_start":139,"line_end":139,"column_start":5,"column_end":41}},{"value":"/ use curve25519_dalek::traits::VartimeMultiscalarMul;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":223186,"byte_end":223242,"line_start":140,"line_end":140,"column_start":5,"column_end":61}},{"value":"/ use curve25519_dalek::ristretto::RistrettoPoint;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":223247,"byte_end":223299,"line_start":141,"line_end":141,"column_start":5,"column_end":57}},{"value":"/ use curve25519_dalek::scalar::Scalar;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":223304,"byte_end":223345,"line_start":142,"line_end":142,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":223350,"byte_end":223353,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ // Some scalars","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":223358,"byte_end":223377,"line_start":144,"line_end":144,"column_start":5,"column_end":24}},{"value":"/ let a = Scalar::from(87329482u64);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":223382,"byte_end":223420,"line_start":145,"line_end":145,"column_start":5,"column_end":43}},{"value":"/ let b = Scalar::from(37264829u64);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":223425,"byte_end":223463,"line_start":146,"line_end":146,"column_start":5,"column_end":43}},{"value":"/ let c = Scalar::from(98098098u64);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":223468,"byte_end":223506,"line_start":147,"line_end":147,"column_start":5,"column_end":43}},{"value":"/ let abc = [a,b,c];","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":223511,"byte_end":223533,"line_start":148,"line_end":148,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":223538,"byte_end":223541,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ // Some points","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":223546,"byte_end":223564,"line_start":150,"line_end":150,"column_start":5,"column_end":23}},{"value":"/ let P = constants::RISTRETTO_BASEPOINT_POINT;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":223569,"byte_end":223618,"line_start":151,"line_end":151,"column_start":5,"column_end":54}},{"value":"/ let Q = P + P;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":223623,"byte_end":223641,"line_start":152,"line_end":152,"column_start":5,"column_end":23}},{"value":"/ let R = P + Q;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":223646,"byte_end":223664,"line_start":153,"line_end":153,"column_start":5,"column_end":23}},{"value":"/ let PQR = [P, Q, R];","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":223669,"byte_end":223693,"line_start":154,"line_end":154,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":223698,"byte_end":223701,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ let compressed = [P.compress(), Q.compress(), R.compress()];","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":223706,"byte_end":223770,"line_start":156,"line_end":156,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":223775,"byte_end":223778,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ // Now we can compute A1 = a*P + b*Q + c*R using P, Q, R:","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":223783,"byte_end":223844,"line_start":158,"line_end":158,"column_start":5,"column_end":66}},{"value":"/ let A1 = RistrettoPoint::vartime_multiscalar_mul(&abc, &PQR);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":223849,"byte_end":223914,"line_start":159,"line_end":159,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":223919,"byte_end":223922,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ // Or using the compressed points:","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":223927,"byte_end":223965,"line_start":161,"line_end":161,"column_start":5,"column_end":43}},{"value":"/ let A2 = RistrettoPoint::optional_multiscalar_mul(","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":223970,"byte_end":224024,"line_start":162,"line_end":162,"column_start":5,"column_end":59}},{"value":"/     &abc,","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":224029,"byte_end":224042,"line_start":163,"line_end":163,"column_start":5,"column_end":18}},{"value":"/     compressed.iter().map(|pt| pt.decompress()),","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":224047,"byte_end":224099,"line_start":164,"line_end":164,"column_start":5,"column_end":57}},{"value":"/ );","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":224104,"byte_end":224110,"line_start":165,"line_end":165,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":224115,"byte_end":224118,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(A2, Some(A1));","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":224123,"byte_end":224152,"line_start":167,"line_end":167,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":224157,"byte_end":224160,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ // It's also possible to mix compressed and uncompressed points:","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":224165,"byte_end":224233,"line_start":169,"line_end":169,"column_start":5,"column_end":73}},{"value":"/ let A3 = RistrettoPoint::optional_multiscalar_mul(","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":224238,"byte_end":224292,"line_start":170,"line_end":170,"column_start":5,"column_end":59}},{"value":"/     abc.iter()","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":224297,"byte_end":224315,"line_start":171,"line_end":171,"column_start":5,"column_end":23}},{"value":"/         .chain(abc.iter()),","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":224320,"byte_end":224351,"line_start":172,"line_end":172,"column_start":5,"column_end":36}},{"value":"/     compressed.iter().map(|pt| pt.decompress())","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":224356,"byte_end":224407,"line_start":173,"line_end":173,"column_start":5,"column_end":56}},{"value":"/         .chain(PQR.iter().map(|&pt| Some(pt))),","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":224412,"byte_end":224463,"line_start":174,"line_end":174,"column_start":5,"column_end":56}},{"value":"/ );","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":224468,"byte_end":224474,"line_start":175,"line_end":175,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":224479,"byte_end":224482,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(A3, Some(A1+A1));","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":224487,"byte_end":224519,"line_start":177,"line_end":177,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":224524,"byte_end":224531,"line_start":178,"line_end":178,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":925},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":226375,"byte_end":226398,"line_start":229,"line_end":229,"column_start":8,"column_end":31},"name":"vartime_multiscalar_mul","qualname":"::traits::VartimeMultiscalarMul::vartime_multiscalar_mul","value":"pub fn vartime_multiscalar_mul<I, J>(I, J) -> Self::Point where\nI: IntoIterator, I::Item: Borrow<Scalar>, J: IntoIterator,\nJ::Item: Borrow<Self::Point>, Self::Point: Clone","parent":{"krate":0,"index":920},"children":[],"decl_id":null,"docs":" Given an iterator of public scalars and an iterator of\n public points, compute\n $$\n Q = c\\_1 P\\_1 + \\cdots + c\\_n P\\_n,\n $$\n using variable-time operations.","sig":null,"attributes":[{"value":"/ Given an iterator of public scalars and an iterator of","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":224742,"byte_end":224800,"line_start":185,"line_end":185,"column_start":5,"column_end":63}},{"value":"/ public points, compute","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":224805,"byte_end":224831,"line_start":186,"line_end":186,"column_start":5,"column_end":31}},{"value":"/ $$","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":224836,"byte_end":224842,"line_start":187,"line_end":187,"column_start":5,"column_end":11}},{"value":"/ Q = c\\_1 P\\_1 + \\cdots + c\\_n P\\_n,","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":224847,"byte_end":224886,"line_start":188,"line_end":188,"column_start":5,"column_end":44}},{"value":"/ $$","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":224891,"byte_end":224897,"line_start":189,"line_end":189,"column_start":5,"column_end":11}},{"value":"/ using variable-time operations.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":224902,"byte_end":224937,"line_start":190,"line_end":190,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":224942,"byte_end":224945,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ It is an error to call this function with two iterators of different lengths.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":224950,"byte_end":225031,"line_start":192,"line_end":192,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":225036,"byte_end":225039,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":225044,"byte_end":225058,"line_start":194,"line_end":194,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":225063,"byte_end":225066,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ The trait bound aims for maximum flexibility: the inputs must be","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":225071,"byte_end":225139,"line_start":196,"line_end":196,"column_start":5,"column_end":73}},{"value":"/ convertable to iterators (`I: IntoIter`), and the iterator's items","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":225144,"byte_end":225214,"line_start":197,"line_end":197,"column_start":5,"column_end":75}},{"value":"/ must be `Borrow<Scalar>` (or `Borrow<Point>`), to allow","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":225219,"byte_end":225278,"line_start":198,"line_end":198,"column_start":5,"column_end":64}},{"value":"/ iterators returning either `Scalar`s or `&Scalar`s.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":225283,"byte_end":225338,"line_start":199,"line_end":199,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":225343,"byte_end":225346,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":225351,"byte_end":225358,"line_start":201,"line_end":201,"column_start":5,"column_end":12}},{"value":"/ use curve25519_dalek::constants;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":225363,"byte_end":225399,"line_start":202,"line_end":202,"column_start":5,"column_end":41}},{"value":"/ use curve25519_dalek::traits::VartimeMultiscalarMul;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":225404,"byte_end":225460,"line_start":203,"line_end":203,"column_start":5,"column_end":61}},{"value":"/ use curve25519_dalek::ristretto::RistrettoPoint;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":225465,"byte_end":225517,"line_start":204,"line_end":204,"column_start":5,"column_end":57}},{"value":"/ use curve25519_dalek::scalar::Scalar;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":225522,"byte_end":225563,"line_start":205,"line_end":205,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":225568,"byte_end":225571,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ // Some scalars","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":225576,"byte_end":225595,"line_start":207,"line_end":207,"column_start":5,"column_end":24}},{"value":"/ let a = Scalar::from(87329482u64);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":225600,"byte_end":225638,"line_start":208,"line_end":208,"column_start":5,"column_end":43}},{"value":"/ let b = Scalar::from(37264829u64);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":225643,"byte_end":225681,"line_start":209,"line_end":209,"column_start":5,"column_end":43}},{"value":"/ let c = Scalar::from(98098098u64);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":225686,"byte_end":225724,"line_start":210,"line_end":210,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":225729,"byte_end":225732,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ // Some points","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":225737,"byte_end":225755,"line_start":212,"line_end":212,"column_start":5,"column_end":23}},{"value":"/ let P = constants::RISTRETTO_BASEPOINT_POINT;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":225760,"byte_end":225809,"line_start":213,"line_end":213,"column_start":5,"column_end":54}},{"value":"/ let Q = P + P;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":225814,"byte_end":225832,"line_start":214,"line_end":214,"column_start":5,"column_end":23}},{"value":"/ let R = P + Q;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":225837,"byte_end":225855,"line_start":215,"line_end":215,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":225860,"byte_end":225863,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ // A1 = a*P + b*Q + c*R","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":225868,"byte_end":225895,"line_start":217,"line_end":217,"column_start":5,"column_end":32}},{"value":"/ let abc = [a,b,c];","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":225900,"byte_end":225922,"line_start":218,"line_end":218,"column_start":5,"column_end":27}},{"value":"/ let A1 = RistrettoPoint::vartime_multiscalar_mul(&abc, &[P,Q,R]);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":225927,"byte_end":225996,"line_start":219,"line_end":219,"column_start":5,"column_end":74}},{"value":"/ // Note: (&abc).into_iter(): Iterator<Item=&Scalar>","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":226001,"byte_end":226056,"line_start":220,"line_end":220,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":226061,"byte_end":226064,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ // A2 = (-a)*P + (-b)*Q + (-c)*R","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":226069,"byte_end":226105,"line_start":222,"line_end":222,"column_start":5,"column_end":41}},{"value":"/ let minus_abc = abc.iter().map(|x| -x);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":226110,"byte_end":226153,"line_start":223,"line_end":223,"column_start":5,"column_end":48}},{"value":"/ let A2 = RistrettoPoint::vartime_multiscalar_mul(minus_abc, &[P,Q,R]);","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":226158,"byte_end":226232,"line_start":224,"line_end":224,"column_start":5,"column_end":79}},{"value":"/ // Note: minus_abc.into_iter(): Iterator<Item=Scalar>","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":226237,"byte_end":226294,"line_start":225,"line_end":225,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":226299,"byte_end":226302,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(A1.compress(), (-A2).compress());","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":226307,"byte_end":226355,"line_start":227,"line_end":227,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":226360,"byte_end":226367,"line_start":228,"line_end":228,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":929},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":227939,"byte_end":227971,"line_start":271,"line_end":271,"column_start":11,"column_end":43},"name":"VartimePrecomputedMultiscalarMul","qualname":"::traits::VartimePrecomputedMultiscalarMul","value":"VartimePrecomputedMultiscalarMul: Sized","parent":null,"children":[{"krate":0,"index":930},{"krate":0,"index":931},{"krate":0,"index":933},{"krate":0,"index":938},{"krate":0,"index":943}],"decl_id":null,"docs":" A trait for variable-time multiscalar multiplication with precomputation.","sig":null,"attributes":[{"value":"/ A trait for variable-time multiscalar multiplication with precomputation.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":226772,"byte_end":226849,"line_start":245,"line_end":245,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":226850,"byte_end":226853,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ A general multiscalar multiplication with precomputation can be written as","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":226854,"byte_end":226932,"line_start":247,"line_end":247,"column_start":1,"column_end":79}},{"value":"/ $$","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":226933,"byte_end":226939,"line_start":248,"line_end":248,"column_start":1,"column_end":7}},{"value":"/ Q = a_1 A_1 + \\cdots + a_n A_n + b_1 B_1 + \\cdots + b_m B_m,","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":226940,"byte_end":227004,"line_start":249,"line_end":249,"column_start":1,"column_end":65}},{"value":"/ $$","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":227005,"byte_end":227011,"line_start":250,"line_end":250,"column_start":1,"column_end":7}},{"value":"/ where the \\\\(B_i\\\\) are *static* points, for which precomputation","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":227012,"byte_end":227081,"line_start":251,"line_end":251,"column_start":1,"column_end":70}},{"value":"/ is possible, and the \\\\(A_j\\\\) are *dynamic* points, for which","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":227082,"byte_end":227148,"line_start":252,"line_end":252,"column_start":1,"column_end":67}},{"value":"/ precomputation is not possible.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":227149,"byte_end":227184,"line_start":253,"line_end":253,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":227185,"byte_end":227188,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ This trait has three methods for performing this computation:","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":227189,"byte_end":227254,"line_start":255,"line_end":255,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":227255,"byte_end":227258,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/ * [`vartime_multiscalar_mul`], which handles the special case","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":227259,"byte_end":227324,"line_start":257,"line_end":257,"column_start":1,"column_end":66}},{"value":"/ where \\\\(n = 0\\\\) and there are no dynamic points;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":227325,"byte_end":227379,"line_start":258,"line_end":258,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":227380,"byte_end":227383,"line_start":259,"line_end":259,"column_start":1,"column_end":4}},{"value":"/ * [`vartime_mixed_multiscalar_mul`], which takes the dynamic","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":227384,"byte_end":227448,"line_start":260,"line_end":260,"column_start":1,"column_end":65}},{"value":"/ points as already-validated `Point`s and is infallible;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":227449,"byte_end":227508,"line_start":261,"line_end":261,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":227509,"byte_end":227512,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ * [`optional_mixed_multiscalar_mul`], which takes the dynamic","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":227513,"byte_end":227578,"line_start":263,"line_end":263,"column_start":1,"column_end":66}},{"value":"/ points as `Option<Point>`s and returns an `Option<Point>`,","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":227579,"byte_end":227641,"line_start":264,"line_end":264,"column_start":1,"column_end":63}},{"value":"/ allowing decompression to be composed into the input iterators.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":227642,"byte_end":227709,"line_start":265,"line_end":265,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":227710,"byte_end":227713,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/ All methods require that the lengths of the input iterators be","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":227714,"byte_end":227780,"line_start":267,"line_end":267,"column_start":1,"column_end":67}},{"value":"/ known and matching, as if they were `ExactSizeIterator`s.  (It","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":227781,"byte_end":227847,"line_start":268,"line_end":268,"column_start":1,"column_end":67}},{"value":"/ does not require `ExactSizeIterator` only because that trait is","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":227848,"byte_end":227915,"line_start":269,"line_end":269,"column_start":1,"column_end":68}},{"value":"/ broken).","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":227916,"byte_end":227928,"line_start":270,"line_end":270,"column_start":1,"column_end":13}}]},{"kind":"Type","id":{"krate":0,"index":930},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":228058,"byte_end":228063,"line_start":273,"line_end":273,"column_start":10,"column_end":15},"name":"Point","qualname":"::traits::VartimePrecomputedMultiscalarMul::Point","value":"type Point: Clone;","parent":{"krate":0,"index":929},"children":[],"decl_id":null,"docs":" The type of point to be multiplied, e.g., `RistrettoPoint`.\n","sig":null,"attributes":[{"value":"/ The type of point to be multiplied, e.g., `RistrettoPoint`.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":227985,"byte_end":228048,"line_start":272,"line_end":272,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":931},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":228192,"byte_end":228195,"line_start":277,"line_end":277,"column_start":8,"column_end":11},"name":"new","qualname":"::traits::VartimePrecomputedMultiscalarMul::new","value":"pub fn new<I>(I) -> Self where I: IntoIterator, I::Item: Borrow<Self::Point>","parent":{"krate":0,"index":929},"children":[],"decl_id":null,"docs":" Given the static points \\\\( B_i \\\\), perform precomputation\n and return the precomputation data.\n","sig":null,"attributes":[{"value":"/ Given the static points \\\\( B_i \\\\), perform precomputation","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":228077,"byte_end":228140,"line_start":275,"line_end":275,"column_start":5,"column_end":68}},{"value":"/ and return the precomputation data.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":228145,"byte_end":228184,"line_start":276,"line_end":276,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":933},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":228888,"byte_end":228911,"line_start":296,"line_end":296,"column_start":8,"column_end":31},"name":"vartime_multiscalar_mul","qualname":"::traits::VartimePrecomputedMultiscalarMul::vartime_multiscalar_mul","value":"pub fn vartime_multiscalar_mul<I>(&Self, I) -> Self::Point where\nI: IntoIterator, I::Item: Borrow<Scalar>","parent":{"krate":0,"index":929},"children":[],"decl_id":null,"docs":" Given `static_scalars`, an iterator of public scalars\n \\\\(b_i\\\\), compute\n $$\n Q = b_1 B_1 + \\cdots + b_m B_m,\n $$\n where the \\\\(B_j\\\\) are the points that were supplied to `new`.","sig":null,"attributes":[{"value":"/ Given `static_scalars`, an iterator of public scalars","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":228303,"byte_end":228360,"line_start":282,"line_end":282,"column_start":5,"column_end":62}},{"value":"/ \\\\(b_i\\\\), compute","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":228365,"byte_end":228387,"line_start":283,"line_end":283,"column_start":5,"column_end":27}},{"value":"/ $$","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":228392,"byte_end":228398,"line_start":284,"line_end":284,"column_start":5,"column_end":11}},{"value":"/ Q = b_1 B_1 + \\cdots + b_m B_m,","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":228403,"byte_end":228438,"line_start":285,"line_end":285,"column_start":5,"column_end":40}},{"value":"/ $$","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":228443,"byte_end":228449,"line_start":286,"line_end":286,"column_start":5,"column_end":11}},{"value":"/ where the \\\\(B_j\\\\) are the points that were supplied to `new`.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":228454,"byte_end":228521,"line_start":287,"line_end":287,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":228526,"byte_end":228529,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ It is an error to call this function with iterators of","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":228534,"byte_end":228592,"line_start":289,"line_end":289,"column_start":5,"column_end":63}},{"value":"/ inconsistent lengths.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":228597,"byte_end":228622,"line_start":290,"line_end":290,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":228627,"byte_end":228630,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ The trait bound aims for maximum flexibility: the input must","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":228635,"byte_end":228699,"line_start":292,"line_end":292,"column_start":5,"column_end":69}},{"value":"/ be convertable to iterators (`I: IntoIter`), and the","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":228704,"byte_end":228760,"line_start":293,"line_end":293,"column_start":5,"column_end":61}},{"value":"/ iterator's items must be `Borrow<Scalar>`, to allow iterators","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":228765,"byte_end":228830,"line_start":294,"line_end":294,"column_start":5,"column_end":70}},{"value":"/ returning either `Scalar`s or `&Scalar`s.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":228835,"byte_end":228880,"line_start":295,"line_end":295,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":938},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":230013,"byte_end":230042,"line_start":327,"line_end":327,"column_start":8,"column_end":37},"name":"vartime_mixed_multiscalar_mul","qualname":"::traits::VartimePrecomputedMultiscalarMul::vartime_mixed_multiscalar_mul","value":"pub fn vartime_mixed_multiscalar_mul<I, J, K>(&Self, I, J, K) -> Self::Point\nwhere I: IntoIterator, I::Item: Borrow<Scalar>, J: IntoIterator,\nJ::Item: Borrow<Scalar>, K: IntoIterator, K::Item: Borrow<Self::Point>","parent":{"krate":0,"index":929},"children":[],"decl_id":null,"docs":" Given `static_scalars`, an iterator of public scalars\n \\\\(b_i\\\\), `dynamic_scalars`, an iterator of public scalars\n \\\\(a_i\\\\), and `dynamic_points`, an iterator of points\n \\\\(A_i\\\\), compute\n $$\n Q = a_1 A_1 + \\cdots + a_n A_n + b_1 B_1 + \\cdots + b_m B_m,\n $$\n where the \\\\(B_j\\\\) are the points that were supplied to `new`.","sig":null,"attributes":[{"value":"/ Given `static_scalars`, an iterator of public scalars","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":229246,"byte_end":229303,"line_start":311,"line_end":311,"column_start":5,"column_end":62}},{"value":"/ \\\\(b_i\\\\), `dynamic_scalars`, an iterator of public scalars","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":229308,"byte_end":229371,"line_start":312,"line_end":312,"column_start":5,"column_end":68}},{"value":"/ \\\\(a_i\\\\), and `dynamic_points`, an iterator of points","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":229376,"byte_end":229434,"line_start":313,"line_end":313,"column_start":5,"column_end":63}},{"value":"/ \\\\(A_i\\\\), compute","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":229439,"byte_end":229461,"line_start":314,"line_end":314,"column_start":5,"column_end":27}},{"value":"/ $$","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":229466,"byte_end":229472,"line_start":315,"line_end":315,"column_start":5,"column_end":11}},{"value":"/ Q = a_1 A_1 + \\cdots + a_n A_n + b_1 B_1 + \\cdots + b_m B_m,","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":229477,"byte_end":229541,"line_start":316,"line_end":316,"column_start":5,"column_end":69}},{"value":"/ $$","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":229546,"byte_end":229552,"line_start":317,"line_end":317,"column_start":5,"column_end":11}},{"value":"/ where the \\\\(B_j\\\\) are the points that were supplied to `new`.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":229557,"byte_end":229624,"line_start":318,"line_end":318,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":229629,"byte_end":229632,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ It is an error to call this function with iterators of","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":229637,"byte_end":229695,"line_start":320,"line_end":320,"column_start":5,"column_end":63}},{"value":"/ inconsistent lengths.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":229700,"byte_end":229725,"line_start":321,"line_end":321,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":229730,"byte_end":229733,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ The trait bound aims for maximum flexibility: the inputs must be","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":229738,"byte_end":229806,"line_start":323,"line_end":323,"column_start":5,"column_end":73}},{"value":"/ convertable to iterators (`I: IntoIter`), and the iterator's items","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":229811,"byte_end":229881,"line_start":324,"line_end":324,"column_start":5,"column_end":75}},{"value":"/ must be `Borrow<Scalar>` (or `Borrow<Point>`), to allow","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":229886,"byte_end":229945,"line_start":325,"line_end":325,"column_start":5,"column_end":64}},{"value":"/ iterators returning either `Scalar`s or `&Scalar`s.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":229950,"byte_end":230005,"line_start":326,"line_end":326,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":943},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":231423,"byte_end":231453,"line_start":368,"line_end":368,"column_start":8,"column_end":38},"name":"optional_mixed_multiscalar_mul","qualname":"::traits::VartimePrecomputedMultiscalarMul::optional_mixed_multiscalar_mul","value":"pub fn optional_mixed_multiscalar_mul<I, J, K>(&Self, I, J, K)\n-> Option<Self::Point> where I: IntoIterator, I::Item: Borrow<Scalar>,\nJ: IntoIterator, J::Item: Borrow<Scalar>, K: IntoIterator<Item =\nOption<Self::Point>>","parent":{"krate":0,"index":929},"children":[],"decl_id":null,"docs":" Given `static_scalars`, an iterator of public scalars\n \\\\(b_i\\\\), `dynamic_scalars`, an iterator of public scalars\n \\\\(a_i\\\\), and `dynamic_points`, an iterator of points\n \\\\(A_i\\\\), compute\n $$\n Q = a_1 A_1 + \\cdots + a_n A_n + b_1 B_1 + \\cdots + b_m B_m,\n $$\n where the \\\\(B_j\\\\) are the points that were supplied to `new`.","sig":null,"attributes":[{"value":"/ Given `static_scalars`, an iterator of public scalars","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":230600,"byte_end":230657,"line_start":350,"line_end":350,"column_start":5,"column_end":62}},{"value":"/ \\\\(b_i\\\\), `dynamic_scalars`, an iterator of public scalars","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":230662,"byte_end":230725,"line_start":351,"line_end":351,"column_start":5,"column_end":68}},{"value":"/ \\\\(a_i\\\\), and `dynamic_points`, an iterator of points","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":230730,"byte_end":230788,"line_start":352,"line_end":352,"column_start":5,"column_end":63}},{"value":"/ \\\\(A_i\\\\), compute","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":230793,"byte_end":230815,"line_start":353,"line_end":353,"column_start":5,"column_end":27}},{"value":"/ $$","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":230820,"byte_end":230826,"line_start":354,"line_end":354,"column_start":5,"column_end":11}},{"value":"/ Q = a_1 A_1 + \\cdots + a_n A_n + b_1 B_1 + \\cdots + b_m B_m,","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":230831,"byte_end":230895,"line_start":355,"line_end":355,"column_start":5,"column_end":69}},{"value":"/ $$","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":230900,"byte_end":230906,"line_start":356,"line_end":356,"column_start":5,"column_end":11}},{"value":"/ where the \\\\(B_j\\\\) are the points that were supplied to `new`.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":230911,"byte_end":230978,"line_start":357,"line_end":357,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":230983,"byte_end":230986,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ If any of the dynamic points were `None`, return `None`.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":230991,"byte_end":231051,"line_start":359,"line_end":359,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":231056,"byte_end":231059,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ It is an error to call this function with iterators of","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":231064,"byte_end":231122,"line_start":361,"line_end":361,"column_start":5,"column_end":63}},{"value":"/ inconsistent lengths.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":231127,"byte_end":231152,"line_start":362,"line_end":362,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":231157,"byte_end":231160,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ This function is particularly useful when verifying statements","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":231165,"byte_end":231231,"line_start":364,"line_end":364,"column_start":5,"column_end":71}},{"value":"/ involving compressed points.  Accepting `Option<Point>` allows","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":231236,"byte_end":231302,"line_start":365,"line_end":365,"column_start":5,"column_end":71}},{"value":"/ inlining point decompression into the multiscalar call,","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":231307,"byte_end":231366,"line_start":366,"line_end":366,"column_start":5,"column_end":64}},{"value":"/ avoiding the need for temporary buffers.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":231371,"byte_end":231415,"line_start":367,"line_end":367,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":983},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/field.rs","byte_start":235521,"byte_end":235532,"line_start":96,"line_end":96,"column_start":12,"column_end":23},"name":"is_negative","qualname":"<FieldElement>::is_negative","value":"pub fn is_negative(&Self) -> Choice","parent":null,"children":[],"decl_id":null,"docs":" Determine if this `FieldElement` is negative, in the sense\n used in the ed25519 paper: `x` is negative if the low bit is\n set.","sig":null,"attributes":[{"value":"/ Determine if this `FieldElement` is negative, in the sense","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/field.rs","byte_start":235259,"byte_end":235321,"line_start":89,"line_end":89,"column_start":5,"column_end":67}},{"value":"/ used in the ed25519 paper: `x` is negative if the low bit is","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/field.rs","byte_start":235326,"byte_end":235390,"line_start":90,"line_end":90,"column_start":5,"column_end":69}},{"value":"/ set.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/field.rs","byte_start":235395,"byte_end":235403,"line_start":91,"line_end":91,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/field.rs","byte_start":235408,"byte_end":235411,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/field.rs","byte_start":235416,"byte_end":235428,"line_start":93,"line_end":93,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/field.rs","byte_start":235433,"byte_end":235436,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ If negative, return `Choice(1)`.  Otherwise, return `Choice(0)`.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/field.rs","byte_start":235441,"byte_end":235509,"line_start":95,"line_end":95,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":984},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/field.rs","byte_start":235789,"byte_end":235796,"line_start":106,"line_end":106,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<FieldElement>::is_zero","value":"pub fn is_zero(&Self) -> Choice","parent":null,"children":[],"decl_id":null,"docs":" Determine if this `FieldElement` is zero.","sig":null,"attributes":[{"value":"/ Determine if this `FieldElement` is zero.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/field.rs","byte_start":235630,"byte_end":235675,"line_start":101,"line_end":101,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/field.rs","byte_start":235680,"byte_end":235683,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/field.rs","byte_start":235688,"byte_end":235700,"line_start":103,"line_end":103,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/field.rs","byte_start":235705,"byte_end":235708,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ If zero, return `Choice(1)`.  Otherwise, return `Choice(0)`.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/field.rs","byte_start":235713,"byte_end":235777,"line_start":105,"line_end":105,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":987},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/field.rs","byte_start":237941,"byte_end":237953,"line_start":155,"line_end":155,"column_start":12,"column_end":24},"name":"batch_invert","qualname":"<FieldElement>::batch_invert","value":"pub fn batch_invert(&mut [FieldElement])","parent":null,"children":[],"decl_id":null,"docs":" Given a slice of public `FieldElements`, replace each with its inverse.","sig":null,"attributes":[{"value":"/ Given a slice of public `FieldElements`, replace each with its inverse.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/field.rs","byte_start":237761,"byte_end":237836,"line_start":151,"line_end":151,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/field.rs","byte_start":237841,"byte_end":237844,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ All input `FieldElements` **MUST** be nonzero.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/field.rs","byte_start":237849,"byte_end":237899,"line_start":153,"line_end":153,"column_start":5,"column_end":55}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/field.rs","byte_start":237904,"byte_end":237929,"line_start":154,"line_end":154,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":988},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/field.rs","byte_start":239259,"byte_end":239265,"line_start":194,"line_end":194,"column_start":12,"column_end":18},"name":"invert","qualname":"<FieldElement>::invert","value":"pub fn invert(&Self) -> FieldElement","parent":null,"children":[],"decl_id":null,"docs":" Given a nonzero field element, compute its inverse.","sig":null,"attributes":[{"value":"/ Given a nonzero field element, compute its inverse.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/field.rs","byte_start":239033,"byte_end":239088,"line_start":188,"line_end":188,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/field.rs","byte_start":239093,"byte_end":239096,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ The inverse is computed as self^(p-2), since","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/field.rs","byte_start":239101,"byte_end":239149,"line_start":190,"line_end":190,"column_start":5,"column_end":53}},{"value":"/ x^(p-2)x = x^(p-1) = 1 (mod p).","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/field.rs","byte_start":239154,"byte_end":239189,"line_start":191,"line_end":191,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/field.rs","byte_start":239194,"byte_end":239197,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ This function returns zero on input zero.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/field.rs","byte_start":239202,"byte_end":239247,"line_start":193,"line_end":193,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":990},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/field.rs","byte_start":240579,"byte_end":240591,"line_start":229,"line_end":229,"column_start":12,"column_end":24},"name":"sqrt_ratio_i","qualname":"<FieldElement>::sqrt_ratio_i","value":"pub fn sqrt_ratio_i(&FieldElement, &FieldElement) -> (Choice, FieldElement)","parent":null,"children":[],"decl_id":null,"docs":" Given `FieldElements` `u` and `v`, compute either `sqrt(u/v)`\n or `sqrt(i*u/v)` in constant time.","sig":null,"attributes":[{"value":"/ Given `FieldElements` `u` and `v`, compute either `sqrt(u/v)`","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/field.rs","byte_start":240056,"byte_end":240121,"line_start":217,"line_end":217,"column_start":5,"column_end":70}},{"value":"/ or `sqrt(i*u/v)` in constant time.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/field.rs","byte_start":240126,"byte_end":240164,"line_start":218,"line_end":218,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/field.rs","byte_start":240169,"byte_end":240172,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ This function always returns the nonnegative square root.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/field.rs","byte_start":240177,"byte_end":240238,"line_start":220,"line_end":220,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/field.rs","byte_start":240243,"byte_end":240246,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/field.rs","byte_start":240251,"byte_end":240263,"line_start":222,"line_end":222,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/field.rs","byte_start":240268,"byte_end":240271,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ - `(Choice(1), +sqrt(u/v))  ` if `v` is nonzero and `u/v` is square;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/field.rs","byte_start":240276,"byte_end":240348,"line_start":224,"line_end":224,"column_start":5,"column_end":77}},{"value":"/ - `(Choice(1), zero)        ` if `u` is zero;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/field.rs","byte_start":240353,"byte_end":240402,"line_start":225,"line_end":225,"column_start":5,"column_end":54}},{"value":"/ - `(Choice(0), zero)        ` if `v` is zero and `u` is nonzero;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/field.rs","byte_start":240407,"byte_end":240475,"line_start":226,"line_end":226,"column_start":5,"column_end":73}},{"value":"/ - `(Choice(0), +sqrt(i*u/v))` if `u/v` is nonsquare (so `i*u/v` is square).","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/field.rs","byte_start":240480,"byte_end":240559,"line_start":227,"line_end":227,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/field.rs","byte_start":240564,"byte_end":240567,"line_start":228,"line_end":228,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":991},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/field.rs","byte_start":242900,"byte_end":242907,"line_start":289,"line_end":289,"column_start":12,"column_end":19},"name":"invsqrt","qualname":"<FieldElement>::invsqrt","value":"pub fn invsqrt(&Self) -> (Choice, FieldElement)","parent":null,"children":[],"decl_id":null,"docs":" Attempt to compute `sqrt(1/self)` in constant time.","sig":null,"attributes":[{"value":"/ Attempt to compute `sqrt(1/self)` in constant time.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/field.rs","byte_start":242452,"byte_end":242507,"line_start":277,"line_end":277,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/field.rs","byte_start":242512,"byte_end":242515,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ Convenience wrapper around `sqrt_ratio_i`.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/field.rs","byte_start":242520,"byte_end":242566,"line_start":279,"line_end":279,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/field.rs","byte_start":242571,"byte_end":242574,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ This function always returns the nonnegative square root.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/field.rs","byte_start":242579,"byte_end":242640,"line_start":281,"line_end":281,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/field.rs","byte_start":242645,"byte_end":242648,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/field.rs","byte_start":242653,"byte_end":242665,"line_start":283,"line_end":283,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/field.rs","byte_start":242670,"byte_end":242673,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ - `(Choice(1), +sqrt(1/self))  ` if `self` is a nonzero square;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/field.rs","byte_start":242678,"byte_end":242745,"line_start":285,"line_end":285,"column_start":5,"column_end":72}},{"value":"/ - `(Choice(0), zero)           ` if `self` is zero;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/field.rs","byte_start":242750,"byte_end":242805,"line_start":286,"line_end":286,"column_start":5,"column_end":60}},{"value":"/ - `(Choice(0), +sqrt(i/self))  ` if `self` is a nonzero nonsquare;","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/field.rs","byte_start":242810,"byte_end":242880,"line_start":287,"line_end":287,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/field.rs","byte_start":242885,"byte_end":242888,"line_start":288,"line_end":288,"column_start":5,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2011},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/field.rs","byte_start":255756,"byte_end":255770,"line_start":42,"line_end":42,"column_start":12,"column_end":26},"name":"FieldElement51","qualname":"::backend::serial::u64::field::FieldElement51","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `FieldElement51` represents an element of the field\n \\\\( \\mathbb Z / (2\\^{255} - 19)\\\\).","sig":null,"attributes":[{"value":"/ A `FieldElement51` represents an element of the field","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/field.rs","byte_start":255112,"byte_end":255169,"line_start":26,"line_end":26,"column_start":1,"column_end":58}},{"value":"/ \\\\( \\mathbb Z / (2\\^{255} - 19)\\\\).","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/field.rs","byte_start":255170,"byte_end":255209,"line_start":27,"line_end":27,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/field.rs","byte_start":255210,"byte_end":255213,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ In the 64-bit implementation, a `FieldElement` is represented in","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/field.rs","byte_start":255214,"byte_end":255282,"line_start":29,"line_end":29,"column_start":1,"column_end":69}},{"value":"/ radix \\\\(2\\^{51}\\\\) as five `u64`s; the coefficients are allowed to","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/field.rs","byte_start":255283,"byte_end":255354,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/ grow up to \\\\(2\\^{54}\\\\) between reductions modulo \\\\(p\\\\).","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/field.rs","byte_start":255355,"byte_end":255418,"line_start":31,"line_end":31,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/field.rs","byte_start":255419,"byte_end":255422,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/field.rs","byte_start":255423,"byte_end":255433,"line_start":33,"line_end":33,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/field.rs","byte_start":255434,"byte_end":255437,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ The `curve25519_dalek::field` module provides a type alias","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/field.rs","byte_start":255438,"byte_end":255500,"line_start":35,"line_end":35,"column_start":1,"column_end":63}},{"value":"/ `curve25519_dalek::field::FieldElement` to either `FieldElement51`","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/field.rs","byte_start":255501,"byte_end":255571,"line_start":36,"line_end":36,"column_start":1,"column_end":71}},{"value":"/ or `FieldElement2625`.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/field.rs","byte_start":255572,"byte_end":255598,"line_start":37,"line_end":37,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/field.rs","byte_start":255599,"byte_end":255602,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ The backend-specific type `FieldElement51` should not be used","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/field.rs","byte_start":255603,"byte_end":255668,"line_start":39,"line_end":39,"column_start":1,"column_end":66}},{"value":"/ outside of the `curve25519_dalek::field` module.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/field.rs","byte_start":255669,"byte_end":255721,"line_start":40,"line_end":40,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1074},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/field.rs","byte_start":263495,"byte_end":263501,"line_start":255,"line_end":255,"column_start":12,"column_end":18},"name":"negate","qualname":"<FieldElement51>::negate","value":"pub fn negate(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Invert the sign of this field element\n","sig":null,"attributes":[{"value":"/ Invert the sign of this field element","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/field.rs","byte_start":263442,"byte_end":263483,"line_start":254,"line_end":254,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1075},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/field.rs","byte_start":263908,"byte_end":263912,"line_start":268,"line_end":268,"column_start":12,"column_end":16},"name":"zero","qualname":"<FieldElement51>::zero","value":"pub fn zero() -> FieldElement51","parent":null,"children":[],"decl_id":null,"docs":" Construct zero.\n","sig":null,"attributes":[{"value":"/ Construct zero.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/field.rs","byte_start":263877,"byte_end":263896,"line_start":267,"line_end":267,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1076},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/field.rs","byte_start":264018,"byte_end":264021,"line_start":273,"line_end":273,"column_start":12,"column_end":15},"name":"one","qualname":"<FieldElement51>::one","value":"pub fn one() -> FieldElement51","parent":null,"children":[],"decl_id":null,"docs":" Construct one.\n","sig":null,"attributes":[{"value":"/ Construct one.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/field.rs","byte_start":263988,"byte_end":264006,"line_start":272,"line_end":272,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1077},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/field.rs","byte_start":264126,"byte_end":264135,"line_start":278,"line_end":278,"column_start":12,"column_end":21},"name":"minus_one","qualname":"<FieldElement51>::minus_one","value":"pub fn minus_one() -> FieldElement51","parent":null,"children":[],"decl_id":null,"docs":" Construct -1.\n","sig":null,"attributes":[{"value":"/ Construct -1.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/field.rs","byte_start":264097,"byte_end":264114,"line_start":277,"line_end":277,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1081},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/field.rs","byte_start":265925,"byte_end":265935,"line_start":331,"line_end":331,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<FieldElement51>::from_bytes","value":"pub fn from_bytes(&[u8; ]) -> FieldElement51","parent":null,"children":[],"decl_id":null,"docs":" Load a `FieldElement51` from the low 255 bits of a 256-bit\n input.","sig":null,"attributes":[{"value":"/ Load a `FieldElement51` from the low 255 bits of a 256-bit","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/field.rs","byte_start":265436,"byte_end":265498,"line_start":319,"line_end":319,"column_start":5,"column_end":67}},{"value":"/ input.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/field.rs","byte_start":265503,"byte_end":265513,"line_start":320,"line_end":320,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/field.rs","byte_start":265518,"byte_end":265521,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/field.rs","byte_start":265526,"byte_end":265539,"line_start":322,"line_end":322,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/field.rs","byte_start":265544,"byte_end":265547,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ This function does not check that the input used the canonical","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/field.rs","byte_start":265552,"byte_end":265618,"line_start":324,"line_end":324,"column_start":5,"column_end":71}},{"value":"/ representative.  It masks the high bit, but it will happily","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/field.rs","byte_start":265623,"byte_end":265686,"line_start":325,"line_end":325,"column_start":5,"column_end":68}},{"value":"/ decode 2^255 - 18 to 1.  Applications that require a canonical","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/field.rs","byte_start":265691,"byte_end":265757,"line_start":326,"line_end":326,"column_start":5,"column_end":71}},{"value":"/ encoding of every field element should decode, re-encode to","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/field.rs","byte_start":265762,"byte_end":265825,"line_start":327,"line_end":327,"column_start":5,"column_end":68}},{"value":"/ the canonical encoding, and check that the input was","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/field.rs","byte_start":265830,"byte_end":265886,"line_start":328,"line_end":328,"column_start":5,"column_end":61}},{"value":"/ canonical.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/field.rs","byte_start":265891,"byte_end":265905,"line_start":329,"line_end":329,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/field.rs","byte_start":265910,"byte_end":265913,"line_start":330,"line_end":330,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1084},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/field.rs","byte_start":267064,"byte_end":267072,"line_start":360,"line_end":360,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<FieldElement51>::to_bytes","value":"pub fn to_bytes(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Serialize this `FieldElement51` to a 32-byte array.  The\n encoding is canonical.\n","sig":null,"attributes":[{"value":"/ Serialize this `FieldElement51` to a 32-byte array.  The","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/field.rs","byte_start":266961,"byte_end":267021,"line_start":358,"line_end":358,"column_start":5,"column_end":65}},{"value":"/ encoding is canonical.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/field.rs","byte_start":267026,"byte_end":267052,"line_start":359,"line_end":359,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1087},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/field.rs","byte_start":270228,"byte_end":270233,"line_start":445,"line_end":445,"column_start":12,"column_end":17},"name":"pow2k","qualname":"<FieldElement51>::pow2k","value":"pub fn pow2k(&Self, u32) -> FieldElement51","parent":null,"children":[],"decl_id":null,"docs":" Given `k > 0`, return `self^(2^k)`.\n","sig":null,"attributes":[{"value":"/ Given `k > 0`, return `self^(2^k)`.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/field.rs","byte_start":270177,"byte_end":270216,"line_start":444,"line_end":444,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1091},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/field.rs","byte_start":274154,"byte_end":274160,"line_start":551,"line_end":551,"column_start":12,"column_end":18},"name":"square","qualname":"<FieldElement51>::square","value":"pub fn square(&Self) -> FieldElement51","parent":null,"children":[],"decl_id":null,"docs":" Returns the square of this field element.\n","sig":null,"attributes":[{"value":"/ Returns the square of this field element.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/field.rs","byte_start":274097,"byte_end":274142,"line_start":550,"line_end":550,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1092},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/field.rs","byte_start":274286,"byte_end":274293,"line_start":556,"line_end":556,"column_start":12,"column_end":19},"name":"square2","qualname":"<FieldElement51>::square2","value":"pub fn square2(&Self) -> FieldElement51","parent":null,"children":[],"decl_id":null,"docs":" Returns 2 times the square of this field element.\n","sig":null,"attributes":[{"value":"/ Returns 2 times the square of this field element.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/field.rs","byte_start":274221,"byte_end":274274,"line_start":555,"line_end":555,"column_start":5,"column_end":58}}]},{"kind":"Const","id":{"krate":0,"index":1188},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/constants.rs","byte_start":295327,"byte_end":295350,"line_start":145,"line_end":145,"column_start":11,"column_end":34},"name":"ED25519_BASEPOINT_POINT","qualname":"::backend::serial::u64::constants::ED25519_BASEPOINT_POINT","value":"EdwardsPoint","parent":null,"children":[],"decl_id":null,"docs":" The Ed25519 basepoint, as an `EdwardsPoint`.","sig":null,"attributes":[{"value":"/ The Ed25519 basepoint, as an `EdwardsPoint`.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/constants.rs","byte_start":295111,"byte_end":295159,"line_start":140,"line_end":140,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/constants.rs","byte_start":295160,"byte_end":295163,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ This is called `_POINT` to distinguish it from","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/constants.rs","byte_start":295164,"byte_end":295214,"line_start":142,"line_end":142,"column_start":1,"column_end":51}},{"value":"/ `ED25519_BASEPOINT_TABLE`, which should be used for scalar","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/constants.rs","byte_start":295215,"byte_end":295277,"line_start":143,"line_end":143,"column_start":1,"column_end":63}},{"value":"/ multiplication (it's much faster).","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/constants.rs","byte_start":295278,"byte_end":295316,"line_start":144,"line_end":144,"column_start":1,"column_end":39}}]},{"kind":"Const","id":{"krate":0,"index":1189},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/constants.rs","byte_start":296274,"byte_end":296287,"line_start":178,"line_end":178,"column_start":11,"column_end":24},"name":"EIGHT_TORSION","qualname":"::backend::serial::u64::constants::EIGHT_TORSION","value":"[EdwardsPoint; ]","parent":null,"children":[],"decl_id":null,"docs":" The 8-torsion subgroup \\\\(\\mathcal E [8]\\\\).","sig":null,"attributes":[{"value":"/ The 8-torsion subgroup \\\\(\\mathcal E [8]\\\\).","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/constants.rs","byte_start":295904,"byte_end":295952,"line_start":170,"line_end":170,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/constants.rs","byte_start":295953,"byte_end":295956,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ In the case of Curve25519, it is cyclic; the \\\\(i\\\\)-th element of","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/constants.rs","byte_start":295957,"byte_end":296027,"line_start":172,"line_end":172,"column_start":1,"column_end":71}},{"value":"/ the array is \\\\([i]P\\\\), where \\\\(P\\\\) is a point of order \\\\(8\\\\)","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/constants.rs","byte_start":296028,"byte_end":296098,"line_start":173,"line_end":173,"column_start":1,"column_end":71}},{"value":"/ generating \\\\(\\mathcal E[8]\\\\).","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/constants.rs","byte_start":296099,"byte_end":296134,"line_start":174,"line_end":174,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/constants.rs","byte_start":296135,"byte_end":296138,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ Thus \\\\(\\mathcal E[4]\\\\) is the points indexed by `0,2,4,6`, and","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/constants.rs","byte_start":296139,"byte_end":296207,"line_start":176,"line_end":176,"column_start":1,"column_end":69}},{"value":"/ \\\\(\\mathcal E[2]\\\\) is the points indexed by `0,4`.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/constants.rs","byte_start":296208,"byte_end":296263,"line_start":177,"line_end":177,"column_start":1,"column_end":56}}]},{"kind":"Const","id":{"krate":0,"index":1191},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/constants.rs","byte_start":296433,"byte_end":296463,"line_start":182,"line_end":182,"column_start":11,"column_end":41},"name":"EIGHT_TORSION_INNER_DOC_HIDDEN","qualname":"::backend::serial::u64::constants::EIGHT_TORSION_INNER_DOC_HIDDEN","value":"[EdwardsPoint; ]","parent":null,"children":[],"decl_id":null,"docs":" Inner item used to hide limb constants from cargo doc output.\n","sig":null,"attributes":[{"value":"/ Inner item used to hide limb constants from cargo doc output.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/constants.rs","byte_start":296342,"byte_end":296407,"line_start":180,"line_end":180,"column_start":1,"column_end":66}}]},{"kind":"Const","id":{"krate":0,"index":1193},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/constants.rs","byte_start":300361,"byte_end":300384,"line_start":324,"line_end":324,"column_start":11,"column_end":34},"name":"ED25519_BASEPOINT_TABLE","qualname":"::backend::serial::u64::constants::ED25519_BASEPOINT_TABLE","value":"EdwardsBasepointTable","parent":null,"children":[],"decl_id":null,"docs":" Table containing precomputed multiples of the Ed25519 basepoint \\\\(B = (x, 4/5)\\\\).\n","sig":null,"attributes":[{"value":"/ Table containing precomputed multiples of the Ed25519 basepoint \\\\(B = (x, 4/5)\\\\).","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/constants.rs","byte_start":300263,"byte_end":300350,"line_start":323,"line_end":323,"column_start":1,"column_end":88}}]},{"kind":"Const","id":{"krate":0,"index":1194},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/constants.rs","byte_start":300554,"byte_end":300594,"line_start":328,"line_end":328,"column_start":11,"column_end":51},"name":"ED25519_BASEPOINT_TABLE_INNER_DOC_HIDDEN","qualname":"::backend::serial::u64::constants::ED25519_BASEPOINT_TABLE_INNER_DOC_HIDDEN","value":"EdwardsBasepointTable","parent":null,"children":[],"decl_id":null,"docs":" Inner constant, used to avoid filling the docs with precomputed points.\n","sig":null,"attributes":[{"value":"/ Inner constant, used to avoid filling the docs with precomputed points.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/constants.rs","byte_start":300453,"byte_end":300528,"line_start":326,"line_end":326,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":2027},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":557352,"byte_end":557367,"line_start":152,"line_end":152,"column_start":12,"column_end":27},"name":"ProjectivePoint","qualname":"::backend::serial::curve_models::ProjectivePoint","value":"ProjectivePoint { X, Y, Z }","parent":null,"children":[{"krate":0,"index":2028},{"krate":0,"index":2029},{"krate":0,"index":2030}],"decl_id":null,"docs":" A `ProjectivePoint` is a point \\\\((X:Y:Z)\\\\) on the \\\\(\\mathbb\n P\\^2\\\\) model of the curve.\n A point \\\\((x,y)\\\\) in the affine model corresponds to\n \\\\((x:y:1)\\\\).","sig":null,"attributes":[{"value":"/ A `ProjectivePoint` is a point \\\\((X:Y:Z)\\\\) on the \\\\(\\mathbb","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":557012,"byte_end":557078,"line_start":144,"line_end":144,"column_start":1,"column_end":67}},{"value":"/ P\\^2\\\\) model of the curve.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":557079,"byte_end":557110,"line_start":145,"line_end":145,"column_start":1,"column_end":32}},{"value":"/ A point \\\\((x,y)\\\\) in the affine model corresponds to","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":557111,"byte_end":557169,"line_start":146,"line_end":146,"column_start":1,"column_end":59}},{"value":"/ \\\\((x:y:1)\\\\).","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":557170,"byte_end":557188,"line_start":147,"line_end":147,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":557189,"byte_end":557192,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ More details on the relationships between the different curve models","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":557193,"byte_end":557265,"line_start":149,"line_end":149,"column_start":1,"column_end":73}},{"value":"/ can be found in the module-level documentation.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":557266,"byte_end":557317,"line_start":150,"line_end":150,"column_start":1,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2028},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":557378,"byte_end":557379,"line_start":153,"line_end":153,"column_start":9,"column_end":10},"name":"X","qualname":"::backend::serial::curve_models::ProjectivePoint::X","value":"backend::serial::u64::field::FieldElement51","parent":{"krate":0,"index":2027},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2029},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":557403,"byte_end":557404,"line_start":154,"line_end":154,"column_start":9,"column_end":10},"name":"Y","qualname":"::backend::serial::curve_models::ProjectivePoint::Y","value":"backend::serial::u64::field::FieldElement51","parent":{"krate":0,"index":2027},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2030},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":557428,"byte_end":557429,"line_start":155,"line_end":155,"column_start":9,"column_end":10},"name":"Z","qualname":"::backend::serial::curve_models::ProjectivePoint::Z","value":"backend::serial::u64::field::FieldElement51","parent":{"krate":0,"index":2027},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2034},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":557840,"byte_end":557854,"line_start":167,"line_end":167,"column_start":12,"column_end":26},"name":"CompletedPoint","qualname":"::backend::serial::curve_models::CompletedPoint","value":"CompletedPoint { X, Y, Z, T }","parent":null,"children":[{"krate":0,"index":2035},{"krate":0,"index":2036},{"krate":0,"index":2037},{"krate":0,"index":2038}],"decl_id":null,"docs":" A `CompletedPoint` is a point \\\\(((X:Z), (Y:T))\\\\) on the \\\\(\\mathbb\n P\\^1 \\times \\mathbb P\\^1 \\\\) model of the curve.\n A point (x,y) in the affine model corresponds to \\\\( ((x:1),(y:1))\n \\\\).","sig":null,"attributes":[{"value":"/ A `CompletedPoint` is a point \\\\(((X:Z), (Y:T))\\\\) on the \\\\(\\mathbb","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":557448,"byte_end":557520,"line_start":158,"line_end":158,"column_start":1,"column_end":73}},{"value":"/ P\\^1 \\times \\mathbb P\\^1 \\\\) model of the curve.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":557521,"byte_end":557573,"line_start":159,"line_end":159,"column_start":1,"column_end":53}},{"value":"/ A point (x,y) in the affine model corresponds to \\\\( ((x:1),(y:1))","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":557574,"byte_end":557644,"line_start":160,"line_end":160,"column_start":1,"column_end":71}},{"value":"/ \\\\).","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":557645,"byte_end":557653,"line_start":161,"line_end":161,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":557654,"byte_end":557657,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ More details on the relationships between the different curve models","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":557658,"byte_end":557730,"line_start":163,"line_end":163,"column_start":1,"column_end":73}},{"value":"/ can be found in the module-level documentation.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":557731,"byte_end":557782,"line_start":164,"line_end":164,"column_start":1,"column_end":52}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":557806,"byte_end":557828,"line_start":166,"line_end":166,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":2035},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":557865,"byte_end":557866,"line_start":168,"line_end":168,"column_start":9,"column_end":10},"name":"X","qualname":"::backend::serial::curve_models::CompletedPoint::X","value":"backend::serial::u64::field::FieldElement51","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2036},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":557890,"byte_end":557891,"line_start":169,"line_end":169,"column_start":9,"column_end":10},"name":"Y","qualname":"::backend::serial::curve_models::CompletedPoint::Y","value":"backend::serial::u64::field::FieldElement51","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2037},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":557915,"byte_end":557916,"line_start":170,"line_end":170,"column_start":9,"column_end":10},"name":"Z","qualname":"::backend::serial::curve_models::CompletedPoint::Z","value":"backend::serial::u64::field::FieldElement51","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2038},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":557940,"byte_end":557941,"line_start":171,"line_end":171,"column_start":9,"column_end":10},"name":"T","qualname":"::backend::serial::curve_models::CompletedPoint::T","value":"backend::serial::u64::field::FieldElement51","parent":{"krate":0,"index":2034},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2042},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":558336,"byte_end":558352,"line_start":182,"line_end":182,"column_start":12,"column_end":28},"name":"AffineNielsPoint","qualname":"::backend::serial::curve_models::AffineNielsPoint","value":"AffineNielsPoint { y_plus_x, y_minus_x, xy2d }","parent":null,"children":[{"krate":0,"index":2043},{"krate":0,"index":2044},{"krate":0,"index":2045}],"decl_id":null,"docs":" A pre-computed point in the affine model for the curve, represented as\n \\\\((y+x, y-x, 2dxy)\\\\) in \"Niels coordinates\".","sig":null,"attributes":[{"value":"/ A pre-computed point in the affine model for the curve, represented as","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":557960,"byte_end":558034,"line_start":174,"line_end":174,"column_start":1,"column_end":75}},{"value":"/ \\\\((y+x, y-x, 2dxy)\\\\) in \"Niels coordinates\".","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":558035,"byte_end":558085,"line_start":175,"line_end":175,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":558086,"byte_end":558089,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ More details on the relationships between the different curve models","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":558090,"byte_end":558162,"line_start":177,"line_end":177,"column_start":1,"column_end":73}},{"value":"/ can be found in the module-level documentation.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":558163,"byte_end":558214,"line_start":178,"line_end":178,"column_start":1,"column_end":52}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":558302,"byte_end":558324,"line_start":181,"line_end":181,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":2043},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":558363,"byte_end":558371,"line_start":183,"line_end":183,"column_start":9,"column_end":17},"name":"y_plus_x","qualname":"::backend::serial::curve_models::AffineNielsPoint::y_plus_x","value":"backend::serial::u64::field::FieldElement51","parent":{"krate":0,"index":2042},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2044},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":558396,"byte_end":558405,"line_start":184,"line_end":184,"column_start":9,"column_end":18},"name":"y_minus_x","qualname":"::backend::serial::curve_models::AffineNielsPoint::y_minus_x","value":"backend::serial::u64::field::FieldElement51","parent":{"krate":0,"index":2042},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2045},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":558429,"byte_end":558433,"line_start":185,"line_end":185,"column_start":9,"column_end":13},"name":"xy2d","qualname":"::backend::serial::curve_models::AffineNielsPoint::xy2d","value":"backend::serial::u64::field::FieldElement51","parent":{"krate":0,"index":2042},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2056},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":558932,"byte_end":558952,"line_start":202,"line_end":202,"column_start":12,"column_end":32},"name":"ProjectiveNielsPoint","qualname":"::backend::serial::curve_models::ProjectiveNielsPoint","value":"ProjectiveNielsPoint { Y_plus_X, Y_minus_X, Z, T2d }","parent":null,"children":[{"krate":0,"index":2057},{"krate":0,"index":2058},{"krate":0,"index":2059},{"krate":0,"index":2060}],"decl_id":null,"docs":" A pre-computed point on the \\\\( \\mathbb P\\^3 \\\\) model for the\n curve, represented as \\\\((Y+X, Y-X, Z, 2dXY)\\\\) in \"Niels coordinates\".","sig":null,"attributes":[{"value":"/ A pre-computed point on the \\\\( \\mathbb P\\^3 \\\\) model for the","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":558626,"byte_end":558692,"line_start":196,"line_end":196,"column_start":1,"column_end":67}},{"value":"/ curve, represented as \\\\((Y+X, Y-X, Z, 2dXY)\\\\) in \"Niels coordinates\".","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":558693,"byte_end":558768,"line_start":197,"line_end":197,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":558769,"byte_end":558772,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ More details on the relationships between the different curve models","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":558773,"byte_end":558845,"line_start":199,"line_end":199,"column_start":1,"column_end":73}},{"value":"/ can be found in the module-level documentation.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":558846,"byte_end":558897,"line_start":200,"line_end":200,"column_start":1,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2057},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":558963,"byte_end":558971,"line_start":203,"line_end":203,"column_start":9,"column_end":17},"name":"Y_plus_X","qualname":"::backend::serial::curve_models::ProjectiveNielsPoint::Y_plus_X","value":"backend::serial::u64::field::FieldElement51","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2058},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":558996,"byte_end":559005,"line_start":204,"line_end":204,"column_start":9,"column_end":18},"name":"Y_minus_X","qualname":"::backend::serial::curve_models::ProjectiveNielsPoint::Y_minus_X","value":"backend::serial::u64::field::FieldElement51","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2059},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":559029,"byte_end":559030,"line_start":205,"line_end":205,"column_start":9,"column_end":10},"name":"Z","qualname":"::backend::serial::curve_models::ProjectiveNielsPoint::Z","value":"backend::serial::u64::field::FieldElement51","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2060},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":559062,"byte_end":559065,"line_start":206,"line_end":206,"column_start":9,"column_end":12},"name":"T2d","qualname":"::backend::serial::curve_models::ProjectiveNielsPoint::T2d","value":"backend::serial::u64::field::FieldElement51","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1257},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":563272,"byte_end":563283,"line_start":333,"line_end":333,"column_start":12,"column_end":23},"name":"to_extended","qualname":"<ProjectivePoint>::to_extended","value":"pub fn to_extended(&Self) -> EdwardsPoint","parent":null,"children":[],"decl_id":null,"docs":" Convert this point from the \\\\( \\mathbb P\\^2 \\\\) model to the\n \\\\( \\mathbb P\\^3 \\\\) model.","sig":null,"attributes":[{"value":"/ Convert this point from the \\\\( \\mathbb P\\^2 \\\\) model to the","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":563099,"byte_end":563164,"line_start":329,"line_end":329,"column_start":5,"column_end":70}},{"value":"/ \\\\( \\mathbb P\\^3 \\\\) model.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":563169,"byte_end":563200,"line_start":330,"line_end":330,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":563205,"byte_end":563208,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ This costs \\\\(3 \\mathrm M + 1 \\mathrm S\\\\).","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":563213,"byte_end":563260,"line_start":332,"line_end":332,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1259},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":563691,"byte_end":563704,"line_start":348,"line_end":348,"column_start":12,"column_end":25},"name":"to_projective","qualname":"<CompletedPoint>::to_projective","value":"pub fn to_projective(&Self) -> ProjectivePoint","parent":null,"children":[],"decl_id":null,"docs":" Convert this point from the \\\\( \\mathbb P\\^1 \\times \\mathbb P\\^1\n \\\\) model to the \\\\( \\mathbb P\\^2 \\\\) model.","sig":null,"attributes":[{"value":"/ Convert this point from the \\\\( \\mathbb P\\^1 \\times \\mathbb P\\^1","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":563511,"byte_end":563579,"line_start":344,"line_end":344,"column_start":5,"column_end":73}},{"value":"/ \\\\) model to the \\\\( \\mathbb P\\^2 \\\\) model.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":563584,"byte_end":563632,"line_start":345,"line_end":345,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":563637,"byte_end":563640,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ This costs \\\\(3 \\mathrm M \\\\).","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":563645,"byte_end":563679,"line_start":347,"line_end":347,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1260},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":564062,"byte_end":564073,"line_start":360,"line_end":360,"column_start":12,"column_end":23},"name":"to_extended","qualname":"<CompletedPoint>::to_extended","value":"pub fn to_extended(&Self) -> EdwardsPoint","parent":null,"children":[],"decl_id":null,"docs":" Convert this point from the \\\\( \\mathbb P\\^1 \\times \\mathbb P\\^1\n \\\\) model to the \\\\( \\mathbb P\\^3 \\\\) model.","sig":null,"attributes":[{"value":"/ Convert this point from the \\\\( \\mathbb P\\^1 \\times \\mathbb P\\^1","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":563882,"byte_end":563950,"line_start":356,"line_end":356,"column_start":5,"column_end":73}},{"value":"/ \\\\) model to the \\\\( \\mathbb P\\^3 \\\\) model.","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":563955,"byte_end":564003,"line_start":357,"line_end":357,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":564008,"byte_end":564011,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ This costs \\\\(4 \\mathrm M \\\\).","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":564016,"byte_end":564050,"line_start":359,"line_end":359,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1262},"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":564522,"byte_end":564528,"line_start":376,"line_end":376,"column_start":12,"column_end":18},"name":"double","qualname":"<ProjectivePoint>::double","value":"pub fn double(&Self) -> CompletedPoint","parent":null,"children":[],"decl_id":null,"docs":" Double this point: return self + self\n","sig":null,"attributes":[{"value":"/ Double this point: return self + self","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":564469,"byte_end":564510,"line_start":375,"line_end":375,"column_start":5,"column_end":46}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":24577,"byte_end":24583,"line_start":212,"line_end":212,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":99},{"krate":0,"index":101},{"krate":0,"index":103},{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":26391,"byte_end":26397,"line_start":265,"line_end":265,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":26559,"byte_end":26565,"line_start":271,"line_end":271,"column_start":13,"column_end":19},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":26588,"byte_end":26594,"line_start":272,"line_end":272,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":26716,"byte_end":26722,"line_start":278,"line_end":278,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":26841,"byte_end":26847,"line_start":284,"line_end":284,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":115},{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":27084,"byte_end":27090,"line_start":293,"line_end":293,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":27583,"byte_end":27589,"line_start":310,"line_end":310,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":28534,"byte_end":28540,"line_start":336,"line_end":336,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":29887,"byte_end":29893,"line_start":373,"line_end":373,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":147},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":30008,"byte_end":30014,"line_start":380,"line_end":380,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":31957,"byte_end":31963,"line_start":442,"line_end":442,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":32169,"byte_end":32175,"line_start":454,"line_end":454,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":32376,"byte_end":32382,"line_start":466,"line_end":466,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":32464,"byte_end":32470,"line_start":472,"line_end":472,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":32626,"byte_end":32632,"line_start":480,"line_end":480,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":32865,"byte_end":32871,"line_start":489,"line_end":489,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":33104,"byte_end":33110,"line_start":498,"line_end":498,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":33842,"byte_end":33848,"line_start":528,"line_end":528,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":34081,"byte_end":34087,"line_start":537,"line_end":537,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":34162,"byte_end":34168,"line_start":543,"line_end":543,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":210},{"krate":0,"index":213},{"krate":0,"index":215},{"krate":0,"index":218},{"krate":0,"index":220},{"krate":0,"index":222},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":230},{"krate":0,"index":233},{"krate":0,"index":244},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":55673,"byte_end":55687,"line_start":1134,"line_end":1134,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":80668,"byte_end":80683,"line_start":74,"line_end":74,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":80919,"byte_end":80934,"line_start":83,"line_end":83,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":81038,"byte_end":81053,"line_start":89,"line_end":89,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":325}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":81174,"byte_end":81189,"line_start":95,"line_end":95,"column_start":13,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":81212,"byte_end":81227,"line_start":97,"line_end":97,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":81392,"byte_end":81407,"line_start":104,"line_end":104,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":81478,"byte_end":81493,"line_start":110,"line_end":110,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":333},{"krate":0,"index":336},{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":84679,"byte_end":84694,"line_start":205,"line_end":205,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":341}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":84871,"byte_end":84886,"line_start":214,"line_end":214,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":85005,"byte_end":85020,"line_start":220,"line_end":220,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":345}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":85347,"byte_end":85362,"line_start":233,"line_end":233,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":88829,"byte_end":88844,"line_start":335,"line_end":335,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":99122,"byte_end":99140,"line_start":166,"line_end":166,"column_start":25,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":492}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":99275,"byte_end":99293,"line_start":172,"line_end":172,"column_start":16,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":494}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":99448,"byte_end":99466,"line_start":178,"line_end":178,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":496},{"krate":0,"index":498},{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":104829,"byte_end":104847,"line_start":333,"line_end":333,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":105127,"byte_end":105145,"line_start":342,"line_end":342,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":504}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":105242,"byte_end":105260,"line_start":348,"line_end":348,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":506}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":105615,"byte_end":105627,"line_start":363,"line_end":363,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":509}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":105871,"byte_end":105883,"line_start":374,"line_end":374,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":511}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":106190,"byte_end":106208,"line_start":384,"line_end":384,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":513}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":106402,"byte_end":106414,"line_start":392,"line_end":392,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":515}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":106870,"byte_end":106882,"line_start":406,"line_end":406,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":517}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":107318,"byte_end":107330,"line_start":419,"line_end":419,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":519}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":107936,"byte_end":107948,"line_start":434,"line_end":434,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":108511,"byte_end":108523,"line_start":447,"line_end":447,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":523}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":108641,"byte_end":108653,"line_start":453,"line_end":453,"column_start":13,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":108837,"byte_end":108849,"line_start":459,"line_end":459,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":112109,"byte_end":112121,"line_start":559,"line_end":559,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":112796,"byte_end":112808,"line_start":579,"line_end":579,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":544}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":113339,"byte_end":113351,"line_start":596,"line_end":596,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":552}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":113555,"byte_end":113567,"line_start":604,"line_end":604,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":555}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":114193,"byte_end":114205,"line_start":634,"line_end":634,"column_start":14,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":563},{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":114513,"byte_end":114525,"line_start":646,"line_end":646,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":567}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":115968,"byte_end":115980,"line_start":689,"line_end":689,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":579},{"krate":0,"index":580}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":116959,"byte_end":116971,"line_start":721,"line_end":721,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":584},{"krate":0,"index":585}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":118469,"byte_end":118497,"line_start":763,"line_end":763,"column_start":43,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":595}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":119230,"byte_end":119242,"line_start":792,"line_end":792,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":127996,"byte_end":128017,"line_start":997,"line_end":997,"column_start":6,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":132782,"byte_end":132794,"line_start":1113,"line_end":1113,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":622},{"krate":0,"index":623}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":135317,"byte_end":135329,"line_start":1193,"line_end":1193,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":625}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":167086,"byte_end":167105,"line_start":217,"line_end":217,"column_start":25,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":721}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":167231,"byte_end":167250,"line_start":223,"line_end":223,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":723},{"krate":0,"index":725},{"krate":0,"index":727},{"krate":0,"index":729}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":170190,"byte_end":170209,"line_start":310,"line_end":310,"column_start":19,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":731}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":170320,"byte_end":170339,"line_start":316,"line_end":316,"column_start":18,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":734}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":174777,"byte_end":174791,"line_start":443,"line_end":443,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":736},{"krate":0,"index":737},{"krate":0,"index":747},{"krate":0,"index":749},{"krate":0,"index":753},{"krate":0,"index":756},{"krate":0,"index":758},{"krate":0,"index":761}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":177584,"byte_end":177602,"line_start":522,"line_end":522,"column_start":14,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":741}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":177757,"byte_end":177775,"line_start":528,"line_end":528,"column_start":47,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":744}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":185551,"byte_end":185565,"line_start":743,"line_end":743,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":766}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":185681,"byte_end":185695,"line_start":749,"line_end":749,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":185963,"byte_end":185977,"line_start":759,"line_end":759,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":770}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":186109,"byte_end":186123,"line_start":765,"line_end":765,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":772}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":186604,"byte_end":186618,"line_start":782,"line_end":782,"column_start":13,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":187138,"byte_end":187152,"line_start":798,"line_end":798,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":781}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":187690,"byte_end":187704,"line_start":816,"line_end":816,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":789}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":187913,"byte_end":187927,"line_start":824,"line_end":824,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":792}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":188296,"byte_end":188310,"line_start":844,"line_end":844,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":800},{"krate":0,"index":801}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":188444,"byte_end":188458,"line_start":852,"line_end":852,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":804}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":189700,"byte_end":189714,"line_start":889,"line_end":889,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":816},{"krate":0,"index":817}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":190201,"byte_end":190215,"line_start":907,"line_end":907,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":822},{"krate":0,"index":823}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":191099,"byte_end":191129,"line_start":930,"line_end":930,"column_start":43,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":836}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":192092,"byte_end":192106,"line_start":968,"line_end":968,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":843}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Inherent","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":193409,"byte_end":193432,"line_start":1013,"line_end":1013,"column_start":6,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":855},{"krate":0,"index":856}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":194057,"byte_end":194071,"line_start":1029,"line_end":1029,"column_start":34,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":858}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":195286,"byte_end":195305,"line_start":1070,"line_end":1070,"column_start":16,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":860}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":195471,"byte_end":195485,"line_start":1076,"line_end":1076,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":862}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":195918,"byte_end":195937,"line_start":1088,"line_end":1088,"column_start":18,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":864}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":196020,"byte_end":196034,"line_start":1094,"line_end":1094,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":866}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":219742,"byte_end":219743,"line_start":42,"line_end":42,"column_start":24,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":909}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/field.rs","byte_start":234742,"byte_end":234754,"line_start":71,"line_end":71,"column_start":13,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/field.rs","byte_start":234778,"byte_end":234790,"line_start":73,"line_end":73,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":979}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/field.rs","byte_start":234920,"byte_end":234932,"line_start":79,"line_end":79,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":981}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Inherent","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/field.rs","byte_start":235240,"byte_end":235252,"line_start":88,"line_end":88,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":986},{"krate":0,"index":987},{"krate":0,"index":988},{"krate":0,"index":989},{"krate":0,"index":990},{"krate":0,"index":991}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/field.rs","byte_start":255810,"byte_end":255824,"line_start":44,"line_end":44,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1033}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/field.rs","byte_start":255983,"byte_end":255997,"line_start":50,"line_end":50,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1035}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/field.rs","byte_start":256106,"byte_end":256120,"line_start":56,"line_end":56,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1038}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/field.rs","byte_start":256541,"byte_end":256555,"line_start":73,"line_end":73,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1046}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/field.rs","byte_start":257735,"byte_end":257749,"line_start":102,"line_end":102,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1054}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/field.rs","byte_start":262103,"byte_end":262117,"line_start":221,"line_end":221,"column_start":34,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1070},{"krate":0,"index":1071},{"krate":0,"index":1072}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Inherent","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/field.rs","byte_start":263421,"byte_end":263435,"line_start":253,"line_end":253,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1074},{"krate":0,"index":1075},{"krate":0,"index":1076},{"krate":0,"index":1077},{"krate":0,"index":1078},{"krate":0,"index":1081},{"krate":0,"index":1084},{"krate":0,"index":1087},{"krate":0,"index":1091},{"krate":0,"index":1092}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/scalar.rs","byte_start":275302,"byte_end":275310,"line_start":26,"line_end":26,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1111}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/scalar.rs","byte_start":275463,"byte_end":275471,"line_start":32,"line_end":32,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1113}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/scalar.rs","byte_start":275559,"byte_end":275567,"line_start":38,"line_end":38,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1115},{"krate":0,"index":1116}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/scalar.rs","byte_start":275698,"byte_end":275706,"line_start":45,"line_end":45,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1118}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Inherent","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/scalar.rs","byte_start":275929,"byte_end":275937,"line_start":57,"line_end":57,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1121},{"krate":0,"index":1122},{"krate":0,"index":1125},{"krate":0,"index":1128},{"krate":0,"index":1131},{"krate":0,"index":1132},{"krate":0,"index":1133},{"krate":0,"index":1136},{"krate":0,"index":1138},{"krate":0,"index":1142},{"krate":0,"index":1143},{"krate":0,"index":1144},{"krate":0,"index":1145},{"krate":0,"index":1146},{"krate":0,"index":1147}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":558474,"byte_end":558490,"line_start":188,"line_end":188,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1232}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":559107,"byte_end":559127,"line_start":209,"line_end":209,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1234}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":559498,"byte_end":559513,"line_start":224,"line_end":224,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1239}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":559727,"byte_end":559747,"line_start":234,"line_end":234,"column_start":19,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1241}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":560037,"byte_end":560057,"line_start":245,"line_end":245,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1243}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":560171,"byte_end":560187,"line_start":251,"line_end":251,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1245}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":560425,"byte_end":560441,"line_start":261,"line_end":261,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1247}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":560748,"byte_end":560763,"line_start":271,"line_end":271,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1249}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":561402,"byte_end":561422,"line_start":290,"line_end":290,"column_start":34,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1251},{"krate":0,"index":1252}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":562229,"byte_end":562245,"line_start":308,"line_end":308,"column_start":34,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1254},{"krate":0,"index":1255}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":563077,"byte_end":563092,"line_start":328,"line_end":328,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1257}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Inherent","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":563490,"byte_end":563504,"line_start":343,"line_end":343,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1259},{"krate":0,"index":1260}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Inherent","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":564447,"byte_end":564462,"line_start":374,"line_end":374,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1262}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":568975,"byte_end":568990,"line_start":523,"line_end":523,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1292}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":569212,"byte_end":569226,"line_start":530,"line_end":530,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1294}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":569468,"byte_end":569484,"line_start":537,"line_end":537,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1296}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":569743,"byte_end":569763,"line_start":544,"line_end":544,"column_start":16,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1298}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/scalar_mul/straus.rs","byte_start":576188,"byte_end":576194,"line_start":49,"line_end":49,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1360},{"krate":0,"index":1361}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/scalar_mul/straus.rs","byte_start":580191,"byte_end":580197,"line_start":146,"line_end":146,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1379},{"krate":0,"index":1380}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/scalar_mul/precomputed_straus.rs","byte_start":582760,"byte_end":582784,"line_start":32,"line_end":32,"column_start":43,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1442},{"krate":0,"index":1443},{"krate":0,"index":1446}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/scalar_mul/pippenger.rs","byte_start":587972,"byte_end":587981,"line_start":65,"line_end":65,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1471},{"krate":0,"index":1472}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Inherent","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/window.rs","byte_start":598405,"byte_end":598420,"line_start":143,"line_end":143,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1526}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/window.rs","byte_start":598671,"byte_end":598686,"line_start":153,"line_end":153,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1529}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/window.rs","byte_start":598863,"byte_end":598878,"line_start":159,"line_end":159,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1532}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/window.rs","byte_start":599264,"byte_end":599279,"line_start":171,"line_end":171,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1536}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Inherent","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/window.rs","byte_start":599738,"byte_end":599753,"line_start":187,"line_end":187,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1540}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/window.rs","byte_start":599926,"byte_end":599941,"line_start":196,"line_end":196,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1543}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/window.rs","byte_start":600218,"byte_end":600233,"line_start":206,"line_end":206,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1546}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/window.rs","byte_start":600632,"byte_end":600647,"line_start":218,"line_end":218,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1550}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":13192,"byte_end":13198,"line_start":289,"line_end":289,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":17}},{"kind":"Mod","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":13266,"byte_end":13276,"line_start":292,"line_end":292,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":269}},{"kind":"Mod","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":13341,"byte_end":13348,"line_start":295,"line_end":295,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":363}},{"kind":"Mod","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":13402,"byte_end":13411,"line_start":298,"line_end":298,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":626}},{"kind":"Mod","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":13470,"byte_end":13479,"line_start":301,"line_end":301,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":867}},{"kind":"Mod","span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/lib.rs","byte_start":13525,"byte_end":13531,"line_start":304,"line_end":304,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":893}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":24577,"byte_end":24583,"line_start":212,"line_end":212,"column_start":6,"column_end":12},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1552},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":26391,"byte_end":26397,"line_start":265,"line_end":265,"column_start":16,"column_end":22},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1552},"to":{"krate":1,"index":9604}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":26559,"byte_end":26565,"line_start":271,"line_end":271,"column_start":13,"column_end":19},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1552},"to":{"krate":1,"index":2680}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":26588,"byte_end":26594,"line_start":272,"line_end":272,"column_start":20,"column_end":26},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1552},"to":{"krate":1,"index":2675}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":26716,"byte_end":26722,"line_start":278,"line_end":278,"column_start":25,"column_end":31},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1552},"to":{"krate":29,"index":58}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":26841,"byte_end":26847,"line_start":284,"line_end":284,"column_start":23,"column_end":29},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1552},"to":{"krate":1,"index":3327}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":27084,"byte_end":27090,"line_start":293,"line_end":293,"column_start":36,"column_end":42},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1552},"to":{"krate":1,"index":3130}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":27583,"byte_end":27589,"line_start":310,"line_end":310,"column_start":36,"column_end":42},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1552},"to":{"krate":1,"index":3122}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":28534,"byte_end":28540,"line_start":336,"line_end":336,"column_start":36,"column_end":42},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1552},"to":{"krate":1,"index":3126}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":29887,"byte_end":29893,"line_start":373,"line_end":373,"column_start":18,"column_end":24},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1552},"to":{"krate":1,"index":3118}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":30008,"byte_end":30014,"line_start":380,"line_end":380,"column_start":34,"column_end":40},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1552},"to":{"krate":29,"index":66}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":31957,"byte_end":31963,"line_start":442,"line_end":442,"column_start":24,"column_end":30},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1552},"to":{"krate":1,"index":7685}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":32169,"byte_end":32175,"line_start":454,"line_end":454,"column_start":20,"column_end":26},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1552},"to":{"krate":1,"index":7681}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":32376,"byte_end":32382,"line_start":466,"line_end":466,"column_start":18,"column_end":24},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1552},"to":{"krate":1,"index":3002}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":32464,"byte_end":32470,"line_start":472,"line_end":472,"column_start":19,"column_end":25},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1552},"to":{"krate":1,"index":2930}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":32626,"byte_end":32632,"line_start":480,"line_end":480,"column_start":20,"column_end":26},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1552},"to":{"krate":1,"index":2930}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":32865,"byte_end":32871,"line_start":489,"line_end":489,"column_start":20,"column_end":26},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1552},"to":{"krate":1,"index":2930}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":33104,"byte_end":33110,"line_start":498,"line_end":498,"column_start":20,"column_end":26},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1552},"to":{"krate":1,"index":2930}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":33842,"byte_end":33848,"line_start":528,"line_end":528,"column_start":21,"column_end":27},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1552},"to":{"krate":1,"index":2930}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":34081,"byte_end":34087,"line_start":537,"line_end":537,"column_start":18,"column_end":24},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1552},"to":{"krate":28,"index":28}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":34162,"byte_end":34168,"line_start":543,"line_end":543,"column_start":6,"column_end":12},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1552},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/scalar.rs","byte_start":55673,"byte_end":55687,"line_start":1134,"line_end":1134,"column_start":6,"column_end":20},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":97},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":80668,"byte_end":80683,"line_start":74,"line_end":74,"column_start":25,"column_end":40},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1601},"to":{"krate":29,"index":58}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":80919,"byte_end":80934,"line_start":83,"line_end":83,"column_start":18,"column_end":33},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1601},"to":{"krate":1,"index":3002}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":81038,"byte_end":81053,"line_start":89,"line_end":89,"column_start":20,"column_end":35},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1601},"to":{"krate":1,"index":2675}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":81174,"byte_end":81189,"line_start":95,"line_end":95,"column_start":13,"column_end":28},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1601},"to":{"krate":1,"index":2680}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":81212,"byte_end":81227,"line_start":97,"line_end":97,"column_start":19,"column_end":34},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1601},"to":{"krate":0,"index":903}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":81392,"byte_end":81407,"line_start":104,"line_end":104,"column_start":18,"column_end":33},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1601},"to":{"krate":28,"index":28}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":81478,"byte_end":81493,"line_start":110,"line_end":110,"column_start":6,"column_end":21},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1601},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":84679,"byte_end":84694,"line_start":205,"line_end":205,"column_start":19,"column_end":34},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1614},"to":{"krate":0,"index":903}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":84871,"byte_end":84886,"line_start":214,"line_end":214,"column_start":18,"column_end":33},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1614},"to":{"krate":1,"index":3002}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":85005,"byte_end":85020,"line_start":220,"line_end":220,"column_start":34,"column_end":49},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1614},"to":{"krate":29,"index":66}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":85347,"byte_end":85362,"line_start":233,"line_end":233,"column_start":6,"column_end":21},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1614},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/montgomery.rs","byte_start":88829,"byte_end":88844,"line_start":335,"line_end":335,"column_start":36,"column_end":51},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1601},"to":{"krate":1,"index":3130}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":99122,"byte_end":99140,"line_start":166,"line_end":166,"column_start":25,"column_end":43},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1646},"to":{"krate":29,"index":58}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":99275,"byte_end":99293,"line_start":172,"line_end":172,"column_start":16,"column_end":34},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1646},"to":{"krate":1,"index":9604}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":99448,"byte_end":99466,"line_start":178,"line_end":178,"column_start":6,"column_end":24},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1646},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":104829,"byte_end":104847,"line_start":333,"line_end":333,"column_start":19,"column_end":37},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1646},"to":{"krate":0,"index":903}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":105127,"byte_end":105145,"line_start":342,"line_end":342,"column_start":18,"column_end":36},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1646},"to":{"krate":1,"index":3002}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":105242,"byte_end":105260,"line_start":348,"line_end":348,"column_start":6,"column_end":24},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1646},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":105615,"byte_end":105627,"line_start":363,"line_end":363,"column_start":19,"column_end":31},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1665},"to":{"krate":0,"index":903}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":105871,"byte_end":105883,"line_start":374,"line_end":374,"column_start":18,"column_end":30},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1665},"to":{"krate":1,"index":3002}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":106190,"byte_end":106208,"line_start":384,"line_end":384,"column_start":18,"column_end":36},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1646},"to":{"krate":28,"index":28}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":106402,"byte_end":106414,"line_start":392,"line_end":392,"column_start":18,"column_end":30},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1665},"to":{"krate":28,"index":28}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":106870,"byte_end":106882,"line_start":406,"line_end":406,"column_start":24,"column_end":36},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1665},"to":{"krate":0,"index":947}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":107318,"byte_end":107330,"line_start":419,"line_end":419,"column_start":34,"column_end":46},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1665},"to":{"krate":29,"index":66}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":107936,"byte_end":107948,"line_start":434,"line_end":434,"column_start":25,"column_end":37},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1665},"to":{"krate":29,"index":58}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":108511,"byte_end":108523,"line_start":447,"line_end":447,"column_start":20,"column_end":32},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1665},"to":{"krate":1,"index":2675}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":108641,"byte_end":108653,"line_start":453,"line_end":453,"column_start":13,"column_end":25},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1665},"to":{"krate":1,"index":2680}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":108837,"byte_end":108849,"line_start":459,"line_end":459,"column_start":6,"column_end":18},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1665},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":112109,"byte_end":112121,"line_start":559,"line_end":559,"column_start":6,"column_end":18},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1665},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":112796,"byte_end":112808,"line_start":579,"line_end":579,"column_start":42,"column_end":54},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1665},"to":{"krate":1,"index":3122}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":113339,"byte_end":113351,"line_start":596,"line_end":596,"column_start":42,"column_end":54},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1665},"to":{"krate":1,"index":3126}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":113555,"byte_end":113567,"line_start":604,"line_end":604,"column_start":20,"column_end":32},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1665},"to":{"krate":1,"index":7681}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":114193,"byte_end":114205,"line_start":634,"line_end":634,"column_start":14,"column_end":26},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1665},"to":{"krate":1,"index":3118}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":114513,"byte_end":114525,"line_start":646,"line_end":646,"column_start":36,"column_end":48},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1665},"to":{"krate":1,"index":3130}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":115968,"byte_end":115980,"line_start":689,"line_end":689,"column_start":25,"column_end":37},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1665},"to":{"krate":0,"index":915}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":116959,"byte_end":116971,"line_start":721,"line_end":721,"column_start":32,"column_end":44},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1665},"to":{"krate":0,"index":920}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":118469,"byte_end":118497,"line_start":763,"line_end":763,"column_start":43,"column_end":71},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":588},"to":{"krate":0,"index":929}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":119230,"byte_end":119242,"line_start":792,"line_end":792,"column_start":6,"column_end":18},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1665},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":127996,"byte_end":128017,"line_start":997,"line_end":997,"column_start":6,"column_end":27},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1853},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":132782,"byte_end":132794,"line_start":1113,"line_end":1113,"column_start":6,"column_end":18},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1665},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/edwards.rs","byte_start":135317,"byte_end":135329,"line_start":1193,"line_end":1193,"column_start":16,"column_end":28},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1665},"to":{"krate":1,"index":9604}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":167086,"byte_end":167105,"line_start":217,"line_end":217,"column_start":25,"column_end":44},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1919},"to":{"krate":29,"index":58}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":167231,"byte_end":167250,"line_start":223,"line_end":223,"column_start":6,"column_end":25},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1919},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":170190,"byte_end":170209,"line_start":310,"line_end":310,"column_start":19,"column_end":38},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1919},"to":{"krate":0,"index":903}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":170320,"byte_end":170339,"line_start":316,"line_end":316,"column_start":18,"column_end":37},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1919},"to":{"krate":1,"index":3002}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":174777,"byte_end":174791,"line_start":443,"line_end":443,"column_start":6,"column_end":20},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1938},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":177584,"byte_end":177602,"line_start":522,"line_end":522,"column_start":14,"column_end":32},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1944},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":177757,"byte_end":177775,"line_start":528,"line_end":528,"column_start":47,"column_end":65},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1944},"to":{"krate":1,"index":2930}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":185551,"byte_end":185565,"line_start":743,"line_end":743,"column_start":19,"column_end":33},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1938},"to":{"krate":0,"index":903}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":185681,"byte_end":185695,"line_start":749,"line_end":749,"column_start":18,"column_end":32},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1938},"to":{"krate":1,"index":3002}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":185963,"byte_end":185977,"line_start":759,"line_end":759,"column_start":20,"column_end":34},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1938},"to":{"krate":1,"index":2675}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":186109,"byte_end":186123,"line_start":765,"line_end":765,"column_start":25,"column_end":39},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1938},"to":{"krate":29,"index":58}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":186604,"byte_end":186618,"line_start":782,"line_end":782,"column_start":13,"column_end":27},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1938},"to":{"krate":1,"index":2680}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":187138,"byte_end":187152,"line_start":798,"line_end":798,"column_start":44,"column_end":58},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1938},"to":{"krate":1,"index":3122}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":187690,"byte_end":187704,"line_start":816,"line_end":816,"column_start":44,"column_end":58},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1938},"to":{"krate":1,"index":3126}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":187913,"byte_end":187927,"line_start":824,"line_end":824,"column_start":20,"column_end":34},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1938},"to":{"krate":1,"index":7681}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":188296,"byte_end":188310,"line_start":844,"line_end":844,"column_start":14,"column_end":28},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1938},"to":{"krate":1,"index":3118}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":188444,"byte_end":188458,"line_start":852,"line_end":852,"column_start":36,"column_end":50},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1938},"to":{"krate":1,"index":3130}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":189700,"byte_end":189714,"line_start":889,"line_end":889,"column_start":25,"column_end":39},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":1938},"to":{"krate":0,"index":915}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":190201,"byte_end":190215,"line_start":907,"line_end":907,"column_start":32,"column_end":46},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1938},"to":{"krate":0,"index":920}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":191099,"byte_end":191129,"line_start":930,"line_end":930,"column_start":43,"column_end":73},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":828},"to":{"krate":0,"index":929}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":192092,"byte_end":192106,"line_start":968,"line_end":968,"column_start":6,"column_end":20},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":1938},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":193409,"byte_end":193432,"line_start":1013,"line_end":1013,"column_start":6,"column_end":29},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":2006},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":194057,"byte_end":194071,"line_start":1029,"line_end":1029,"column_start":34,"column_end":48},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1938},"to":{"krate":29,"index":66}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":195286,"byte_end":195305,"line_start":1070,"line_end":1070,"column_start":16,"column_end":35},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1919},"to":{"krate":1,"index":9604}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":195471,"byte_end":195485,"line_start":1076,"line_end":1076,"column_start":16,"column_end":30},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":1938},"to":{"krate":1,"index":9604}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":195918,"byte_end":195937,"line_start":1088,"line_end":1088,"column_start":18,"column_end":37},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1919},"to":{"krate":28,"index":28}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/ristretto.rs","byte_start":196020,"byte_end":196034,"line_start":1094,"line_end":1094,"column_start":18,"column_end":32},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1938},"to":{"krate":28,"index":28}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":219742,"byte_end":219743,"line_start":42,"line_end":42,"column_start":24,"column_end":25},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":908},"to":{"krate":0,"index":905}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/traits.rs","byte_start":227973,"byte_end":227978,"line_start":271,"line_end":271,"column_start":45,"column_end":50},"kind":"SuperTrait","from":{"krate":1,"index":3029},"to":{"krate":0,"index":929}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/field.rs","byte_start":234742,"byte_end":234754,"line_start":71,"line_end":71,"column_start":13,"column_end":25},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":976},"to":{"krate":1,"index":2680}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/field.rs","byte_start":234778,"byte_end":234790,"line_start":73,"line_end":73,"column_start":20,"column_end":32},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":976},"to":{"krate":1,"index":2675}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/field.rs","byte_start":234920,"byte_end":234932,"line_start":79,"line_end":79,"column_start":25,"column_end":37},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":976},"to":{"krate":29,"index":58}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/field.rs","byte_start":235240,"byte_end":235252,"line_start":88,"line_end":88,"column_start":6,"column_end":18},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":976},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/field.rs","byte_start":255810,"byte_end":255824,"line_start":44,"line_end":44,"column_start":16,"column_end":30},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":2011},"to":{"krate":1,"index":9604}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/field.rs","byte_start":255983,"byte_end":255997,"line_start":50,"line_end":50,"column_start":18,"column_end":32},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":2011},"to":{"krate":28,"index":28}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/field.rs","byte_start":256106,"byte_end":256120,"line_start":56,"line_end":56,"column_start":44,"column_end":58},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":2011},"to":{"krate":1,"index":3122}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/field.rs","byte_start":256541,"byte_end":256555,"line_start":73,"line_end":73,"column_start":44,"column_end":58},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":2011},"to":{"krate":1,"index":3126}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/field.rs","byte_start":257735,"byte_end":257749,"line_start":102,"line_end":102,"column_start":44,"column_end":58},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":2011},"to":{"krate":1,"index":3130}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/field.rs","byte_start":262103,"byte_end":262117,"line_start":221,"line_end":221,"column_start":34,"column_end":48},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":2011},"to":{"krate":29,"index":66}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/field.rs","byte_start":263421,"byte_end":263435,"line_start":253,"line_end":253,"column_start":6,"column_end":20},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":2011},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/scalar.rs","byte_start":275302,"byte_end":275310,"line_start":26,"line_end":26,"column_start":16,"column_end":24},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":2019},"to":{"krate":1,"index":9604}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/scalar.rs","byte_start":275463,"byte_end":275471,"line_start":32,"line_end":32,"column_start":18,"column_end":26},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":2019},"to":{"krate":28,"index":28}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/scalar.rs","byte_start":275559,"byte_end":275567,"line_start":38,"line_end":38,"column_start":23,"column_end":31},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":2019},"to":{"krate":1,"index":3327}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/scalar.rs","byte_start":275698,"byte_end":275706,"line_start":45,"line_end":45,"column_start":26,"column_end":34},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":2019},"to":{"krate":1,"index":3331}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/u64/scalar.rs","byte_start":275929,"byte_end":275937,"line_start":57,"line_end":57,"column_start":6,"column_end":14},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":2019},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":558474,"byte_end":558490,"line_start":188,"line_end":188,"column_start":18,"column_end":34},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":2042},"to":{"krate":28,"index":28}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":559107,"byte_end":559127,"line_start":209,"line_end":209,"column_start":18,"column_end":38},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":2056},"to":{"krate":28,"index":28}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":559498,"byte_end":559513,"line_start":224,"line_end":224,"column_start":19,"column_end":34},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":2027},"to":{"krate":0,"index":903}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":559727,"byte_end":559747,"line_start":234,"line_end":234,"column_start":19,"column_end":39},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":2056},"to":{"krate":0,"index":903}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":560037,"byte_end":560057,"line_start":245,"line_end":245,"column_start":18,"column_end":38},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":2056},"to":{"krate":1,"index":3002}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":560171,"byte_end":560187,"line_start":251,"line_end":251,"column_start":19,"column_end":35},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":2042},"to":{"krate":0,"index":903}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":560425,"byte_end":560441,"line_start":261,"line_end":261,"column_start":18,"column_end":34},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":2042},"to":{"krate":1,"index":3002}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":560748,"byte_end":560763,"line_start":271,"line_end":271,"column_start":24,"column_end":39},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":2027},"to":{"krate":0,"index":947}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":561402,"byte_end":561422,"line_start":290,"line_end":290,"column_start":34,"column_end":54},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":2056},"to":{"krate":29,"index":66}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":562229,"byte_end":562245,"line_start":308,"line_end":308,"column_start":34,"column_end":50},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":2042},"to":{"krate":29,"index":66}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":563077,"byte_end":563092,"line_start":328,"line_end":328,"column_start":6,"column_end":21},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":2027},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":563490,"byte_end":563504,"line_start":343,"line_end":343,"column_start":6,"column_end":20},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":2034},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":564447,"byte_end":564462,"line_start":374,"line_end":374,"column_start":6,"column_end":21},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":2027},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":568975,"byte_end":568990,"line_start":523,"line_end":523,"column_start":16,"column_end":31},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":2027},"to":{"krate":1,"index":9604}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":569212,"byte_end":569226,"line_start":530,"line_end":530,"column_start":16,"column_end":30},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":2034},"to":{"krate":1,"index":9604}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":569468,"byte_end":569484,"line_start":537,"line_end":537,"column_start":16,"column_end":32},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":2042},"to":{"krate":1,"index":9604}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/curve_models/mod.rs","byte_start":569743,"byte_end":569763,"line_start":544,"line_end":544,"column_start":16,"column_end":36},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":2056},"to":{"krate":1,"index":9604}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/scalar_mul/straus.rs","byte_start":576188,"byte_end":576194,"line_start":49,"line_end":49,"column_start":25,"column_end":31},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":1358},"to":{"krate":0,"index":915}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/scalar_mul/straus.rs","byte_start":580191,"byte_end":580197,"line_start":146,"line_end":146,"column_start":32,"column_end":38},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":1358},"to":{"krate":0,"index":920}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/scalar_mul/precomputed_straus.rs","byte_start":582760,"byte_end":582784,"line_start":32,"line_end":32,"column_start":43,"column_end":67},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":1439},"to":{"krate":0,"index":929}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/backend/serial/scalar_mul/pippenger.rs","byte_start":587972,"byte_end":587981,"line_start":65,"line_end":65,"column_start":32,"column_end":41},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":1468},"to":{"krate":0,"index":920}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/window.rs","byte_start":598405,"byte_end":598420,"line_start":143,"line_end":143,"column_start":15,"column_end":30},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":2219},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/window.rs","byte_start":598671,"byte_end":598686,"line_start":153,"line_end":153,"column_start":26,"column_end":41},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":2219},"to":{"krate":1,"index":9604}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/window.rs","byte_start":598863,"byte_end":598878,"line_start":159,"line_end":159,"column_start":37,"column_end":52},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":2219},"to":{"krate":1,"index":2930}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/window.rs","byte_start":599264,"byte_end":599279,"line_start":171,"line_end":171,"column_start":37,"column_end":52},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":2219},"to":{"krate":1,"index":2930}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/window.rs","byte_start":599738,"byte_end":599753,"line_start":187,"line_end":187,"column_start":15,"column_end":30},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":2229},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/window.rs","byte_start":599926,"byte_end":599941,"line_start":196,"line_end":196,"column_start":26,"column_end":41},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":2229},"to":{"krate":1,"index":9604}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/window.rs","byte_start":600218,"byte_end":600233,"line_start":206,"line_end":206,"column_start":37,"column_end":52},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":2229},"to":{"krate":1,"index":2930}},{"span":{"file_name":"/Users/anoushkkharangate/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-3.2.1/src/window.rs","byte_start":600632,"byte_end":600647,"line_start":218,"line_end":218,"column_start":37,"column_end":52},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":2229},"to":{"krate":1,"index":2930}}]}